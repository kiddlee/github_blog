{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/even/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/even/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/even/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","path":"fonts/chancery/apple-chancery-webfont.eot","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","path":"fonts/chancery/apple-chancery-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","path":"fonts/chancery/apple-chancery-webfont.woff","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","path":"fonts/chancery/apple-chancery-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/even/source/js/src/even.js","path":"js/src/even.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/nprogress/nprogress.min.css","path":"lib/nprogress/nprogress.min.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/nprogress/nprogress.min.js","path":"lib/nprogress/nprogress.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/pjax/jquery.pjax.min.js","path":"lib/pjax/jquery.pjax.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/blank.gif","path":"lib/fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","path":"lib/fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","path":"lib/fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","path":"lib/fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","path":"lib/fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","path":"lib/fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","path":"lib/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","path":"lib/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","path":"lib/fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.js","path":"lib/slideout/slideout.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.min.js","path":"lib/slideout/slideout.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","path":"fonts/chancery/apple-chancery-webfont.svg","modified":0,"renderable":1},{"_id":"themes/even/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","path":"lib/fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","path":"lib/fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"a683422af0b6e65decd48301dde42cb590485695","modified":1615908725775},{"_id":"themes/even/.gitignore","hash":"1d54f4b6fe44e61eae3d29e95de4b2618a6619aa","modified":1592150253034},{"_id":"themes/even/.eslintrc","hash":"0fcde446104e73d7159f8574f28fe661acdb384e","modified":1592150253030},{"_id":"themes/even/LICENSE","hash":"6fd796a4c624297885ceed920ac7130a96f29a85","modified":1592150252961},{"_id":"themes/even/README.md","hash":"41f303d8080d78f91ca168ed3e0994f67f1a25a9","modified":1592150253033},{"_id":"themes/even/_config.yml","hash":"8f2d30407e2d87bd800eb533bbd4856d4e7d36de","modified":1592150253035},{"_id":"themes/even/package.json","hash":"35a7b731d25a7ed3633b4101662d128126a53778","modified":1592150253035},{"_id":"source/archives/index.md","hash":"fdb9b104a4efea64bd2c484c7ebbea90d14d2ed7","modified":1592150236338},{"_id":"source/about/index.md","hash":"dc95f87c2dc90ac016eee89cb3dc812431965225","modified":1592150236339},{"_id":"source/_posts/CentOS6-5无法正确映射目录.md","hash":"38d275c220ff8748afa60a198fd52f700fd781e9","modified":1592150236312},{"_id":"source/_posts/Install-oh-my-zsh-in-Mac.md","hash":"f4176deaa9abc68577dbf129f04c09c4467da113","modified":1592150236334},{"_id":"source/_posts/DockerSeries-1-Install-Docker.md","hash":"e671511b93643af0854558c3b6ef3e9179794e9a","modified":1592150236328},{"_id":"source/_posts/Linux-Swift-Install.md","hash":"15d30825bef9e7fd8264a95b385beb075f422d22","modified":1592150236327},{"_id":"source/_posts/Linux一些经典书籍.md","hash":"4b0f426264cc6ddac11bee68cf5fc6dc15417fbd","modified":1592150236326},{"_id":"source/_posts/Linux查找以及删除应用程序.md","hash":"3a87fd756575e1d638b9223b51ee6851e193b7b1","modified":1592150236332},{"_id":"source/_posts/Java-send-get-or-post.md","hash":"020a630051dec04980e24e5ca2e557adeb222aa9","modified":1592150236318},{"_id":"source/_posts/PHP-security-function.md","hash":"df11060f9eb191a3e1eb8f6976c8790f7f454fc2","modified":1592150236320},{"_id":"source/_posts/RDD编程.md","hash":"c5249dee482e9f65c2445d94a8fdd195c047e530","modified":1592150236313},{"_id":"source/_posts/Redis-Install-Comment.md","hash":"f57a493e8c2fe09837df2f48d76ea14cf3e21939","modified":1592150236321},{"_id":"source/_posts/Read-Write-file-with-multiple-request.md","hash":"2acfe12fe258304a63c4f30bf2f3c865a3c6f901","modified":1592150236311},{"_id":"source/_posts/Redis自学-1.md","hash":"d98a7f52f8545df59e9851329587e6a67e0cbbd2","modified":1592150236322},{"_id":"source/_posts/Redis自学-2.md","hash":"474a7427b4dce55abc9dd4f4ea9ec86474f92d63","modified":1592150236325},{"_id":"source/_posts/Spark基本概念.md","hash":"66680625f8e4ed53d27c831492b985cc8e42e464","modified":1592150236325},{"_id":"source/_posts/Vim-commands.md","hash":"7c5d540f233c622397b424501a52e0bd2bde8f97","modified":1592150236315},{"_id":"source/_posts/XHprof安装与使用.md","hash":"0d2335cba2a48a98c1b78306e765d517f2b63768","modified":1592150236337},{"_id":"source/_posts/autotest-tool-jmeter.md","hash":"87278b18df5034d079595440a6ff8e9bab633348","modified":1592150236313},{"_id":"source/_posts/create-website-base-on-laravel5.md","hash":"9f8d28201ff5e02bbdc3b8a5466fd4816a7cb099","modified":1592150236323},{"_id":"source/_posts/design-pattern-with-php-Patterns-for-Flexible-Object-Programming.md","hash":"84e43a824b93d10a98f39017d875d9c3574bed33","modified":1592150236322},{"_id":"source/_posts/design-pattern-with-php-Performing-and-Representing-Tasks.md","hash":"8b3a0773e6bfdbf2b3cc3782a6447fe8b7316155","modified":1592150236324},{"_id":"source/_posts/design-pattern-with-php-what-is-design-pattern.md","hash":"adba5f184a3d6fdd4b867993f249dec2032b3cff","modified":1592150236320},{"_id":"source/_posts/docker-hub.md","hash":"8dbd4ea28a344e778e5513c8e129022982900795","modified":1592150236326},{"_id":"source/_posts/design-pattern-with-php-generating-objects.md","hash":"efad283bf149fad174571b91e8c89f72c5656b5a","modified":1592150236337},{"_id":"source/_posts/file-mode-change.md","hash":"0f04f77c160334499e27cd01a6d16f98e4c5a107","modified":1592150236314},{"_id":"source/_posts/how-to-create-a-ssl-certificate-with-nginx.md","hash":"024268a3b16620158f361fe14dfc303c243f6d58","modified":1592150236336},{"_id":"source/_posts/install-maven.md","hash":"a3e128ddb56497a76b8ffe10ea15aa7cb5740310","modified":1592150236334},{"_id":"source/_posts/install-phpredis.md","hash":"407b7fcd60bbd15b7ed43c3eb57783a38cf76008","modified":1592150236329},{"_id":"source/_posts/laravel-seeder.md","hash":"2cee7eaea494fd12e51f7fdc14673c5ab21b0506","modified":1592150236335},{"_id":"source/_posts/learn-laravel-1.md","hash":"95c58feb5ffc792457f26430e8fa5bffbdd436bd","modified":1592150236318},{"_id":"source/_posts/learn-laravel-2.md","hash":"b3565ef91a09de5bb860a5b765633246f841c9a2","modified":1592150236331},{"_id":"source/_posts/linux-security-init.md","hash":"cec3fd27855bdc59a290e0857a159bc6a9f38457","modified":1592150236314},{"_id":"source/_posts/make-startup-disk.md","hash":"863a261747b84c453c35641286a9855f479c71db","modified":1592150236329},{"_id":"source/_posts/mysql-forget-password.md","hash":"ded7b3332997f9ac1d165a9d6696cc81bf56dcef","modified":1592150236324},{"_id":"source/_posts/mysql存储引擎.md","hash":"0fd6a05d70470e7dac068acdd6ab6e4364b3a9c7","modified":1592150236331},{"_id":"source/_posts/phar.md","hash":"e5324630df5808bfacc133158592c84435fc3470","modified":1592150236315},{"_id":"source/_posts/php7-installation.md","hash":"4154a5f829076bd5b7429d6eeba797aa43f5403c","modified":1592150236328},{"_id":"source/_posts/phpize.md","hash":"a1302b4da27ad5a2672cea0bc8a1671db5a388ef","modified":1592150236327},{"_id":"source/_posts/install-spark-in-ubuntu.md","hash":"fd98e2cc5a66d91eea9c3492ade6f802881de998","modified":1592150236311},{"_id":"source/_posts/print-stacktrace-in-errorlog.md","hash":"67c2ca11372521ecfbcf7b028963cba400b6829e","modified":1592150236330},{"_id":"source/_posts/ubuntu-upgrade-php56.md","hash":"62ad7d6baed5f95e6891d918114de717a2a81d58","modified":1592150236321},{"_id":"source/_posts/ubuntu内核升级.md","hash":"33686f15a1c53da8d11fd2694842a202672cced7","modified":1592150236310},{"_id":"source/_posts/shadowsocks.md","hash":"84c2fe47299a3d3601e5fd38b799b95d09ba4c8d","modified":1592150236318},{"_id":"source/_posts/vagrant.md","hash":"8b0183a14fe5081f374b1c07ce72f8881ba7875e","modified":1592150236333},{"_id":"source/_posts/使用Console调试Js.md","hash":"26582762b92990313b94885bffec97addb2e75c9","modified":1592150236312},{"_id":"source/_posts/如何从本机链接vagrant里的mysql.md","hash":"d3d96bf3fc0211438007ba176a9871b487e04aa4","modified":1592150236335},{"_id":"source/_posts/提高php代码质量.md","hash":"b6449031e5b561adc56b528a885e2233b97d32cf","modified":1592150236332},{"_id":"source/_posts/搭建开发环境.md","hash":"7580a35de2aedc98de1613cc06e699ad5d189c80","modified":1592150236330},{"_id":"source/categories/index.md","hash":"173e2fa43cbd266d69f5c21a4858f172c29e7e91","modified":1592150236341},{"_id":"source/tags/index.md","hash":"9d9413d33ed8611cb33d14b63a1a5ac2810509e3","modified":1592150236340},{"_id":"themes/even/languages/default.yml","hash":"3f3d4f2657525c4a0660257df944a1936e703609","modified":1592150253031},{"_id":"themes/even/languages/en.yml","hash":"563b1e018a7aff5e5369093cdffc57f8e3f47a29","modified":1592150253032},{"_id":"themes/even/languages/zh-cn.yml","hash":"f7da3fc6252df9d19abd1321b3c5a8c2ad13cca7","modified":1592150253033},{"_id":"themes/even/layout/_layout.swig","hash":"f688ecdf78f9699907599fe899012fb5e29a9f29","modified":1592150252962},{"_id":"themes/even/layout/archive.swig","hash":"52a91a52d34556c77815cd03bd7d5b9fd66b04ce","modified":1592150252973},{"_id":"themes/even/layout/categories.swig","hash":"21987803e162bd9383502d9de07d5d531b78cb53","modified":1592150252973},{"_id":"themes/even/layout/index.swig","hash":"f3341b5f4af1eab0930a1d078b3022bbe0a59232","modified":1592150252965},{"_id":"themes/even/layout/page.swig","hash":"3cade69477ab4ec34aac9e9dbf1b8cd0485a87a9","modified":1592150252963},{"_id":"themes/even/layout/post.swig","hash":"367b204579f8b9612399693a803c224925399a87","modified":1592150252962},{"_id":"themes/even/layout/tags.swig","hash":"c4d4cb9a3bcd05368d93fff107141899370933df","modified":1592150252963},{"_id":"source/_posts/Create-Site.md","hash":"33eb8e5012c4c8bdfc3b93a808832f607f930a20","modified":1592150236317},{"_id":"themes/even/source/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1592150252981},{"_id":"themes/even/source/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1592150253026},{"_id":"themes/even/layout/_macro/archive.swig","hash":"96541615b4818dcfbb19e93d89fe85abebf37d4f","modified":1592150252981},{"_id":"themes/even/layout/_partial/comments.swig","hash":"7381a356cea9d28a059aa72b0653e81ca85b2622","modified":1592150252976},{"_id":"themes/even/layout/_partial/head.swig","hash":"37fc57acdf6a8b7b77d470612a341ffc565b59cc","modified":1592150252980},{"_id":"themes/even/layout/_partial/footer.swig","hash":"2fc41d0b6a58ffeb7692a5f938697812f674ae29","modified":1592150252977},{"_id":"themes/even/layout/_partial/header.swig","hash":"49c1cabfe8d4692b1743ca19f6296334e7d4781a","modified":1592150252978},{"_id":"themes/even/layout/_partial/pagination.swig","hash":"3843e523b9a7a1c5973d0c2de05cc88467733e09","modified":1592150252976},{"_id":"themes/even/layout/_partial/slideout.swig","hash":"0c2a10d97f8beedaaa23fbf98c5c4ff267213014","modified":1592150252977},{"_id":"themes/even/layout/_script/analytics.swig","hash":"24ba4a8adcaf09c9ede76405ee732385595d8e39","modified":1592150252969},{"_id":"themes/even/layout/_script/comments.swig","hash":"bad8bc57e9479c6771f1942e092dd30b614bb17b","modified":1592150252970},{"_id":"themes/even/layout/_script/counter.swig","hash":"016ee9a2aeac6f957c8e4ed421394c9a57d389ed","modified":1592150252971},{"_id":"themes/even/layout/_script/libs.swig","hash":"689d2e6b829e028e9321a7174a9fee26bc1fc6f1","modified":1592150252971},{"_id":"themes/even/layout/_script/push.swig","hash":"2aacb350e2e4870f175ba4783c710c4c4006274c","modified":1592150252972},{"_id":"themes/even/layout/_script/theme.swig","hash":"ef8207e22d10ba11821749e1dc0041cf0104d7e3","modified":1592150252970},{"_id":"themes/even/layout/_macro/post.swig","hash":"859581571e3a5bb065c11edd2d9ee7e6352ccc45","modified":1592150252980},{"_id":"themes/even/source/css/_base.scss","hash":"ffd8c02b4e1dde0433458b0fef02f01a1fd0f1dd","modified":1592150253004},{"_id":"themes/even/source/css/style.scss","hash":"d984c3006404eb1130a6c6c369da1902c9d9a6a5","modified":1592150252987},{"_id":"themes/even/source/css/_variables.scss","hash":"b2f58e1116c0c931af33bc8e780a8522811965fc","modified":1592150252983},{"_id":"themes/even/layout/_partial/_head/meta.swig","hash":"0b3ce980cc48cce232527637084fc223cdcbf3d1","modified":1592150252978},{"_id":"themes/even/layout/_partial/_post/copyright.swig","hash":"e3bc479c323612a52eb0367a4ba4cfcd3fadd0a9","modified":1592150252974},{"_id":"themes/even/layout/_partial/_footer/social.swig","hash":"65368d0a5108fecc072eaea3b1fb04c597941729","modified":1592150252979},{"_id":"themes/even/layout/_partial/_post/toc.swig","hash":"2150852c6020262333e6468cdfa5bdb216418f42","modified":1592150252975},{"_id":"themes/even/layout/_script/_analytics/baidu-analytics.swig","hash":"ce7c137b4a90a0a87d770a5c8cabd0849cd477ac","modified":1592150252967},{"_id":"themes/even/layout/_script/_analytics/google-analytics.swig","hash":"05d928829a52e901a3b772b870321ae2cfc66519","modified":1592150252966},{"_id":"themes/even/layout/_script/_comments/changyan.swig","hash":"caa7633fd47b103055b5a3b338830cc2a03bc1af","modified":1592150252968},{"_id":"themes/even/layout/_script/_comments/disqus.swig","hash":"0502145777d65515249680d3e4611f249e3d9ff8","modified":1592150252968},{"_id":"themes/even/layout/_script/_comments/livere.swig","hash":"c5cbbd3fe24ef3f541c4cd1524f7903c5c07037b","modified":1592150252968},{"_id":"themes/even/layout/_partial/_post/reward.swig","hash":"faf64b5461970fda72863e9779f3f024cb493658","modified":1592150252975},{"_id":"themes/even/source/css/_partial/_back-to-top.scss","hash":"de94a4546dad90f588e902c9641d94b31fd6625b","modified":1592150252996},{"_id":"themes/even/source/css/_partial/_archive.scss","hash":"a32395e4efebb2284159f1bd32ee603162463930","modified":1592150252999},{"_id":"themes/even/source/css/_custom/_custom.scss","hash":"d0873cd8554d515282a6792fcc3f5bd4a256b7a6","modified":1592150252983},{"_id":"themes/even/source/css/_partial/_categories.scss","hash":"96f47000d25ef4e0e948f8f43fa4e2983ff0d746","modified":1592150252995},{"_id":"themes/even/source/css/_partial/_footer.scss","hash":"76f3a72440be8aa1e93d8ddc5ea958777d1545ab","modified":1592150253000},{"_id":"themes/even/source/css/_partial/_header.scss","hash":"4a3e92feef33bed0021f1a65a801c24ee7d5946f","modified":1592150253003},{"_id":"themes/even/source/css/_partial/_iconfont.scss","hash":"ab9f12b6bdf37e93c509205bddb4b6bad3d95d5d","modified":1592150252998},{"_id":"themes/even/source/css/_partial/_nprogress.scss","hash":"6a3ed904b45cbeecfbf632627ad647718bf64c22","modified":1592150252987},{"_id":"themes/even/source/css/_partial/_mobile.scss","hash":"0d1c60bd92f8e5db01e7843934251152ec4d6d44","modified":1592150252998},{"_id":"themes/even/source/css/_partial/_pagination.scss","hash":"b24db39534e180ebcebba2e81d91d9f1d534eea1","modified":1592150253000},{"_id":"themes/even/source/css/_partial/_post.scss","hash":"1ac1f002786014c13d796a9e6eef050fe49c3541","modified":1592150253001},{"_id":"themes/even/source/css/_partial/_slideout.scss","hash":"e4820a42698f647a824575b234835b9ce4ac4797","modified":1592150252997},{"_id":"themes/even/source/css/_partial/_tags.scss","hash":"fb4bf54b34291d5b72598a7ba4d3e370c8ad9383","modified":1592150253003},{"_id":"themes/even/source/css/_common/_animation.scss","hash":"f32d2444f0ab4dcb8b811ae1bccae6073f21a988","modified":1592150252985},{"_id":"themes/even/source/css/_common/_normalize.scss","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1592150252986},{"_id":"themes/even/source/css/_common/_utils.scss","hash":"9ec5b1f6cf47260eba2729ff4931111b808644f0","modified":1592150252984},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1592150253028},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1592150253030},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1592150253028},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1592150253029},{"_id":"themes/even/source/js/src/even.js","hash":"e586fe4379a134d80b3d01208601ab11b7014d4a","modified":1592150253005},{"_id":"themes/even/source/lib/nprogress/nprogress.min.css","hash":"79a4f6785c09b8546a37f927e4a5d89af7156171","modified":1592150253025},{"_id":"themes/even/source/lib/nprogress/nprogress.min.js","hash":"3cca20b36156d9974312555d55db3fed194a3d04","modified":1592150253024},{"_id":"themes/even/source/lib/pjax/jquery.pjax.min.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1592150253022},{"_id":"themes/even/source/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1592150253012},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1592150253013},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1592150253012},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1592150253010},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1592150253008},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1592150253011},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1592150253008},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1592150253010},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1592150253007},{"_id":"themes/even/source/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1592150253019},{"_id":"themes/even/source/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1592150253018},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1592150253027},{"_id":"themes/even/source/lib/jquery/jquery.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1592150253021},{"_id":"source/_posts/images/1/1.jpg","hash":"2044a62903b47fa46c399db0683f58653e66e07f","modified":1592150236317},{"_id":"themes/even/source/css/_partial/_footer/_copyright.scss","hash":"afbc0f90c674e5cd5fd7509eb1296d60b999d4e1","modified":1592150253002},{"_id":"themes/even/source/css/_partial/_footer/_social.scss","hash":"bca6a1036951c2475278bfbd3a5ce51ff861e9a3","modified":1592150253002},{"_id":"themes/even/source/css/_partial/_header/_logo.scss","hash":"109073dde15146d835bf06faa2f256d1ac658315","modified":1592150252989},{"_id":"themes/even/source/css/_partial/_header/_menu.scss","hash":"454214ab2b5a0ca17d6872068c52bfd01ac02fdc","modified":1592150252988},{"_id":"themes/even/source/css/_partial/_post/_code.scss","hash":"cff6c1a599a4bb7c55b502ea09849c1286483644","modified":1592150252990},{"_id":"themes/even/source/css/_partial/_post/_content.scss","hash":"44d5e226f78654f63d89455fb946c9e6fd99ba43","modified":1592150252992},{"_id":"themes/even/source/css/_partial/_post/_copyright.scss","hash":"71d949b053b0176621fdba5dc1e2e740f60b467d","modified":1592150252991},{"_id":"themes/even/source/css/_partial/_post/_footer.scss","hash":"9f2ab0ac20b2a8bfd315febd387c399f72f43d10","modified":1592150252992},{"_id":"themes/even/source/css/_partial/_post/_header.scss","hash":"f655fc254804e59d1426471f41127f26d06432b6","modified":1592150252995},{"_id":"themes/even/source/css/_partial/_post/_reward.scss","hash":"66ec9faa27ed879dc9a2ca59c73ed6bfd5e61dcd","modified":1592150252994},{"_id":"themes/even/source/css/_partial/_post/_toc.scss","hash":"5806ce8d5c4e2d70e12e03ab48327bdebc68c67b","modified":1592150252991},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1592150253014},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1592150253017},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1592150253017},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1592150253016},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1592150253015},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1592150253015},{"_id":"public/archives/index.html","hash":"a1730db6f7e6a427ca9b9f5b52b73fbd21adfa0a","modified":1616513575139},{"_id":"public/about/index.html","hash":"d397a519703e67a7675b47d97c5602edc8c333f7","modified":1616513575139},{"_id":"public/categories/index.html","hash":"211065e4d2b6ab33aafe7e628694fe8de0712779","modified":1616513575139},{"_id":"public/tags/index.html","hash":"0681652dcf0819ba464a6522593a43e230192f85","modified":1616513575139},{"_id":"public/2016/11/23/Spark基本概念/index.html","hash":"e665c2be12a5d063994d923d208a44e9c6006e4b","modified":1616513575139},{"_id":"public/2016/07/24/install-maven/index.html","hash":"29b95b739d87fea7b8390d4121d4b047c5719fde","modified":1616513575139},{"_id":"public/2016/06/19/how-to-create-a-ssl-certificate-with-nginx/index.html","hash":"89f1b0222f7db904176439e64b7d34ef9e24a6b1","modified":1616513575139},{"_id":"public/2016/06/19/file-mode-change/index.html","hash":"2d207b9c5ece0610eb4b9c1e7937373eebbf86ca","modified":1616513575139},{"_id":"public/2016/06/16/laravel-seeder/index.html","hash":"7334b4c8979e1de545d85bd417cc94160fe1e656","modified":1616513575139},{"_id":"public/2016/06/18/install-spark-in-ubuntu/index.html","hash":"4173575e6f9f347c84b5f41fa16fb462de32a062","modified":1616513575139},{"_id":"public/2016/02/06/make-startup-disk/index.html","hash":"de75773ef6bb097ef9ac3cf718e344d5d054c439","modified":1616513575139},{"_id":"public/2016/02/29/linux-security-init/index.html","hash":"3adc7e4be03675ccc7f53da6b22beef6c454a028","modified":1616513575139},{"_id":"public/2016/01/19/mysql-forget-password/index.html","hash":"881ee7c9c6dab6aa200b27475999c0dcc56674e9","modified":1616513575139},{"_id":"public/2016/02/05/print-stacktrace-in-errorlog/index.html","hash":"270f8c081e721abb8bb0804acb099636da4091e6","modified":1616513575139},{"_id":"public/2016/01/18/docker-hub/index.html","hash":"280e109bf26f2a5675995a0f043259ee7b30abd2","modified":1616513575139},{"_id":"public/2016/01/14/ubuntu-upgrade-php56/index.html","hash":"8b299d6f934bcafb473be089875a5365e0e180a9","modified":1616513575139},{"_id":"public/2015/12/16/Linux-Swift-Install/index.html","hash":"adab59db9198748ebb23703b4029aaf98a23df05","modified":1616513575139},{"_id":"public/2015/12/11/Redis-Install-Comment/index.html","hash":"f254e90bdd9dcbd474da41f405ba1def0691b294","modified":1616513575139},{"_id":"public/2015/09/07/learn-laravel-2/index.html","hash":"bca3ec2d392e5bcb4a45910bf786bb046487a98a","modified":1616513575139},{"_id":"public/2015/09/01/mysql存储引擎/index.html","hash":"4a355740b94f33ce2f416fc71040a4fd9b205a42","modified":1616513575139},{"_id":"public/2015/08/26/shadowsocks/index.html","hash":"03a0b5a1b944713465852a7f83f13c3b416e4496","modified":1616513575139},{"_id":"public/2015/08/20/install-phpredis/index.html","hash":"d35bb5b28a3f6117ce05d4670aff368cc7e226e2","modified":1616513575139},{"_id":"public/2015/08/20/phpize/index.html","hash":"add09e720332eb1c0e5d29a384a73ff3573527bb","modified":1616513575139},{"_id":"public/2015/08/20/Linux查找以及删除应用程序/index.html","hash":"3aa9a100f38ada652fec9c2a9ab71acad0044ec1","modified":1616513575139},{"_id":"public/2015/08/17/autotest-tool-jmeter/index.html","hash":"33697aa8e004051fdba15fca62a6782fbd2beb94","modified":1616513575139},{"_id":"public/2015/08/12/Redis自学-1/index.html","hash":"632a27b890febff957f1dbd9058d0aa7b1759be8","modified":1616513575139},{"_id":"public/2015/06/27/如何从本机链接vagrant里的mysql/index.html","hash":"b34fa15b741c2fcbca2fffefefbdeda7c1963faa","modified":1616513575139},{"_id":"public/2015/06/17/CentOS6-5无法正确映射目录/index.html","hash":"0f3ae1a1fc7dd4dd198808e29101d84feb22ff96","modified":1616513575139},{"_id":"public/2015/05/14/Install-oh-my-zsh-in-Mac/index.html","hash":"734d3ee574dcf400a4163308a7c40401cea1f853","modified":1616513575139},{"_id":"public/2015/03/30/design-pattern-with-php-what-is-design-pattern/index.html","hash":"a9f07ab797299a7d29f9e847e2759dc95d6c9174","modified":1616513575139},{"_id":"public/2015/03/24/Linux一些经典书籍/index.html","hash":"23927ab0dd527b060fd9bda3e044952ca360a91d","modified":1616513575139},{"_id":"public/2015/03/24/Read-Write-file-with-multiple-request/index.html","hash":"19793083787524e87e2ec4022b905a5aea2efe97","modified":1616513575139},{"_id":"public/2015/03/24/使用Console调试Js/index.html","hash":"f25963ab93facca921f435c75535dc1f35f0b1da","modified":1616513575139},{"_id":"public/2015/03/24/搭建开发环境/index.html","hash":"906357e20d7e87f74a285e7771cf72af1fadc19b","modified":1616513575139},{"_id":"public/2015/03/23/PHP-security-function/index.html","hash":"32309d24ad6e6ba104ca07b1c9753aed72f93994","modified":1616513575139},{"_id":"public/2015/03/24/Create-Site/index.html","hash":"ba3af762a2dd9989ed329ae56fdccce078807fc1","modified":1616513575139},{"_id":"public/categories/Linux/index.html","hash":"7d08ea20c85a5feb5123c1de5edaee42de8598de","modified":1616513575139},{"_id":"public/categories/Mac/index.html","hash":"a48c747c3ca48130f3386d00826787198cb56cd8","modified":1616513575139},{"_id":"public/categories/Docker/index.html","hash":"fe0c497dd2c31039b1a9cb961e4b89d76be4f6f8","modified":1616513575139},{"_id":"public/categories/Java/index.html","hash":"6a28c8a99d431f34a0009bb63193a2254281c5e9","modified":1616513575139},{"_id":"public/categories/PHP/index.html","hash":"e2e699004be404b10e95ec2421f87c732cb12318","modified":1616513575139},{"_id":"public/categories/PHP/page/2/index.html","hash":"b9db7bd7df41d1eba4b6d5527bcc36d62b7815b4","modified":1616513575139},{"_id":"public/categories/Spark/index.html","hash":"e50c0fcf7d90bed972ac6bcc66fcc9798c5826b7","modified":1616513575139},{"_id":"public/categories/DataBase/index.html","hash":"0dd57484c212ff25aed7a78aabc05ecc78b13acf","modified":1616513575139},{"_id":"public/categories/Test/index.html","hash":"a4bd840e28c0370dcd8b49eb1a53f10eab4b47d5","modified":1616513575139},{"_id":"public/categories/DataBase/Redis/index.html","hash":"e0e89aff86b5f769bbfb53f53bfac1d0a911c90d","modified":1616513575139},{"_id":"public/categories/Design-Pattern/index.html","hash":"009ecf12017ca29e9c61367dc678a50b851f35b4","modified":1616513575139},{"_id":"public/categories/Git/index.html","hash":"6239e5b32a8a914867d409c7ddf1762586a4f9ad","modified":1616513575139},{"_id":"public/categories/Nginx/index.html","hash":"ddf1f7688e76b43aade607a421f38c708fdf620c","modified":1616513575139},{"_id":"public/categories/VPN/index.html","hash":"8c470ddc94447bbba09e5ace99714322b790a0fe","modified":1616513575139},{"_id":"public/categories/VM/index.html","hash":"1a3c1fcec0df6023d51f1f0aed62d43c994c35c4","modified":1616513575139},{"_id":"public/categories/Javascript/index.html","hash":"30da659a7b358c98b6beb3a13e6f57e38edf12cb","modified":1616513575139},{"_id":"public/categories/php/index.html","hash":"2ab4a44be4bded7cb73e34a94345b6cf85976e9b","modified":1616513575139},{"_id":"public/categories/php/linux/index.html","hash":"d7256adf561cb32ac413919e4c42ff81a7cdea5f","modified":1616513575139},{"_id":"public/tags/linux/index.html","hash":"0c50b475bca4d62b95ad5deb8d57d2c306e95847","modified":1616513575139},{"_id":"public/tags/mac/index.html","hash":"43417663bf18e322cea08cd736fa656afee6c046","modified":1616513575139},{"_id":"public/tags/docker/index.html","hash":"c8c392f88c98791fa5d9822baacbd89c826d6328","modified":1616513575139},{"_id":"public/tags/swift/index.html","hash":"222be499bba413f9bdd161d69159f4ff9b54a351","modified":1616513575139},{"_id":"public/tags/java/index.html","hash":"b91ea2fbd991a459513a325fe6715e0374ee660d","modified":1616513575139},{"_id":"public/tags/php/index.html","hash":"6dd6a4b6776bff3c2b6f7dc01f259d507272f490","modified":1616513575139},{"_id":"public/tags/php/page/2/index.html","hash":"1cb5c509f4b403f45ada764f411d9dc5396d27f9","modified":1616513575139},{"_id":"public/tags/spark/index.html","hash":"c75f367d672ad707cc4c6e4d0a7375d6f6f84c48","modified":1616513575139},{"_id":"public/tags/redis/index.html","hash":"fcb462885725175a1a1e66de5006dda46a6cc4eb","modified":1616513575139},{"_id":"public/tags/vim/index.html","hash":"9bb3e1caf1dcf73e7ca5174d68ed87c0a1cb2eea","modified":1616513575139},{"_id":"public/tags/test/index.html","hash":"84928b6cfe36de99dd3bf3dd3c6c03d1378784d5","modified":1616513575139},{"_id":"public/tags/laravel/index.html","hash":"6f811e288a1a7ae0a7044f30f5443757abfc1803","modified":1616513575139},{"_id":"public/tags/Design-Pattern/index.html","hash":"9ac9ecdfd4176975d04784ddf7096dd76024ef70","modified":1616513575139},{"_id":"public/tags/git/index.html","hash":"f13b8717613f95e6ebd79bb364289ed219be2838","modified":1616513575139},{"_id":"public/tags/nginx/index.html","hash":"d7e9840658f4e2e2867639c8c9ad0b4a7d2a3445","modified":1616513575139},{"_id":"public/tags/ssl/index.html","hash":"fa6a70ee8a27df9330d274720651cfc94545d426","modified":1616513575139},{"_id":"public/tags/maven/index.html","hash":"7fb3fe413883c9d41e6088f675aeff9790b5925d","modified":1616513575139},{"_id":"public/tags/security/index.html","hash":"b614a928e6910e78da7eae95b9b9c44d2c8c6eaa","modified":1616513575139},{"_id":"public/tags/mysql/index.html","hash":"42249dc4b79b82ced470691dc3c9df809ea86a86","modified":1616513575139},{"_id":"public/tags/vpn/index.html","hash":"895e9da07c871f4e9c93e54d7f9e006815efcace","modified":1616513575139},{"_id":"public/tags/vm/index.html","hash":"956864a40c478520757d7b15fbe43e60208144ad","modified":1616513575139},{"_id":"public/tags/javascript/index.html","hash":"6a5b4d3ea84e636a1d958520248641c407457fa5","modified":1616513575139},{"_id":"public/archives/page/2/index.html","hash":"bf29543d17a234d9c78645cd2c47fda311e8dbdb","modified":1616513575139},{"_id":"public/archives/page/3/index.html","hash":"0189164a899d929f2e2de4c055106d51a1ed286f","modified":1616513575139},{"_id":"public/archives/page/4/index.html","hash":"429a2e96ca6743d679ed7134839e1571a5cfd167","modified":1616513575139},{"_id":"public/archives/page/5/index.html","hash":"c4f484b7a12bebda1b2ba09a1cba87fdcb82b473","modified":1616513575139},{"_id":"public/archives/2015/index.html","hash":"c092b4b26103b516b7453e5423660e3a4ff43c42","modified":1616513575139},{"_id":"public/archives/2015/page/2/index.html","hash":"494ebe352e9c9a85b9c848ca014981be37dfe3e6","modified":1616513575139},{"_id":"public/archives/2015/page/3/index.html","hash":"5ee92edafe8dcc157e18ff204c5a0838f535f818","modified":1616513575139},{"_id":"public/archives/2015/page/4/index.html","hash":"862f1f10203fb97fa6da1e0fe622c583429bf420","modified":1616513575139},{"_id":"public/archives/2015/03/index.html","hash":"12624b1afada03e2790e55ca0930017b89cb57a3","modified":1616513575139},{"_id":"public/archives/2015/04/index.html","hash":"93841de269f1f86041fafeb0d0f5943403a5eae3","modified":1616513575139},{"_id":"public/archives/2015/05/index.html","hash":"353f75d82f9fb9d31b50834a4e8d635161fb3aee","modified":1616513575139},{"_id":"public/archives/2015/06/index.html","hash":"3e9dd877bf36a31c0641d663a81da0dcffa5933d","modified":1616513575139},{"_id":"public/archives/2015/07/index.html","hash":"3bb1f3a869c161dee675ab6110c919d8a7aa60be","modified":1616513575139},{"_id":"public/archives/2015/08/index.html","hash":"88c8767a64aa578bf4f56e3234a24f340ad1ac07","modified":1616513575139},{"_id":"public/archives/2015/09/index.html","hash":"f9c9a374ea874210f028156da9ad137e4952af52","modified":1616513575139},{"_id":"public/archives/2015/12/index.html","hash":"546c153da61355ec7152dc12589298a5b30979a4","modified":1616513575139},{"_id":"public/archives/2016/index.html","hash":"c3afa79c1c3abb25e8948b86e2500799a1416860","modified":1616513575139},{"_id":"public/archives/2016/page/2/index.html","hash":"54778970f009e030888e2e30a42624dd05173aef","modified":1616513575139},{"_id":"public/archives/2016/01/index.html","hash":"d3746e2f3e8c181515f641b8f2ff265c5b4d5ef0","modified":1616513575139},{"_id":"public/archives/2016/02/index.html","hash":"1685713caa3f5528f421c71ed4fb2372d23edec1","modified":1616513575139},{"_id":"public/archives/2016/06/index.html","hash":"aa16ae2127366c8f5bf12e161997ee413de5e5a1","modified":1616513575139},{"_id":"public/archives/2016/07/index.html","hash":"bfafa6990d0372406951ebe052feff2b2b09f83c","modified":1616513575139},{"_id":"public/archives/2016/08/index.html","hash":"f0d79794ac77367fd753df150a53731562aecaf8","modified":1616513575139},{"_id":"public/archives/2016/11/index.html","hash":"6f993ccac011aa46c2bb8282353a7c7c6c316f7d","modified":1616513575139},{"_id":"public/2016/11/23/RDD编程/index.html","hash":"7b3776f70a8044e375a5bb4bc1426b4d3559b5bf","modified":1616513575139},{"_id":"public/2016/08/10/Java-send-get-or-post/index.html","hash":"f3f046809156047a59ef7ad3e56d3f6578dc8cfd","modified":1616513575139},{"_id":"public/2016/01/18/DockerSeries-1-Install-Docker/index.html","hash":"9a387022c68d61bc9634a7e8837ab027028af8f5","modified":1616513575139},{"_id":"public/2015/12/30/php7-installation/index.html","hash":"81af92066ca5ad24a5b475843394beca6ebea804","modified":1616513575139},{"_id":"public/2015/09/08/vagrant/index.html","hash":"9f1a6fee5e5cd8ec1f2fa6d2f2f7d82394e64656","modified":1616513575139},{"_id":"public/2015/09/05/learn-laravel-1/index.html","hash":"814786ea2c0d87b237d9d710d12d0ce9aa46c095","modified":1616513575139},{"_id":"public/2015/08/29/ubuntu内核升级/index.html","hash":"bc0129ebfb1529729076549344b5215af140ecfa","modified":1616513575139},{"_id":"public/2015/08/26/phar/index.html","hash":"201855bc22604be9af4c5c535fd2a54e580d12df","modified":1616513575139},{"_id":"public/2015/08/12/Redis自学-2/index.html","hash":"2a58ebc25e0b3bcacb6b6677769f0f9d618007a0","modified":1616513575139},{"_id":"public/2015/07/28/XHprof安装与使用/index.html","hash":"aea6bf93639045993321c32a7a1ae04af3aeda9b","modified":1616513575139},{"_id":"public/2015/04/08/design-pattern-with-php-Performing-and-Representing-Tasks/index.html","hash":"42923d01050049f4f3e2231e32648a1177990e8f","modified":1616513575139},{"_id":"public/2015/04/02/design-pattern-with-php-Patterns-for-Flexible-Object-Programming/index.html","hash":"2018d97c7b2cc8ab1e8e7bff1c83fcebb96cc8ad","modified":1616513575139},{"_id":"public/2015/04/01/design-pattern-with-php-generating-objects/index.html","hash":"461ab8bab801271330828f7aa4745102e8c603bc","modified":1616513575139},{"_id":"public/2015/03/30/Vim-commands/index.html","hash":"ecb55f2f4fb5acb3cb83d70389bb0e04dde7c0f7","modified":1616513575139},{"_id":"public/2015/03/24/create-website-base-on-laravel5/index.html","hash":"573faf7f6fbf1a79f07c8c06bb64637c50897e0c","modified":1616513575139},{"_id":"public/2015/03/24/提高php代码质量/index.html","hash":"dde68c0fb87bd6d48497b3385714403fdedbebea","modified":1616513575139},{"_id":"public/index.html","hash":"7f929c0cc7dfeaf42224e89e18d504ed97472377","modified":1616513575139},{"_id":"public/page/2/index.html","hash":"4d42d5a9bf7590a73057ef2da9e6cc29a00a0910","modified":1616513575139},{"_id":"public/page/3/index.html","hash":"aa18f318827e7c04c62b11c53c667dcb5c5580c1","modified":1616513575139},{"_id":"public/page/4/index.html","hash":"bf638d8d744382a9e24224f9b31803d601485991","modified":1616513575139},{"_id":"public/page/5/index.html","hash":"df0ac81e0fe5506cd44dc3d6602f77d91dfd706a","modified":1616513575139},{"_id":"public/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1592177851012},{"_id":"public/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1592177851012},{"_id":"public/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1592177851012},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1592177851012},{"_id":"public/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1592177851012},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1592177851012},{"_id":"public/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1592177851012},{"_id":"public/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1592177851012},{"_id":"public/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1592177851012},{"_id":"public/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1592177851012},{"_id":"public/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1592177851012},{"_id":"public/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1592177851012},{"_id":"public/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1592177851012},{"_id":"public/js/src/even.js","hash":"e586fe4379a134d80b3d01208601ab11b7014d4a","modified":1592177851012},{"_id":"public/lib/nprogress/nprogress.min.css","hash":"79a4f6785c09b8546a37f927e4a5d89af7156171","modified":1592177851012},{"_id":"public/lib/nprogress/nprogress.min.js","hash":"3cca20b36156d9974312555d55db3fed194a3d04","modified":1592177851012},{"_id":"public/lib/pjax/jquery.pjax.min.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1592177851012},{"_id":"public/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1592177851012},{"_id":"public/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1592177851012},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1592177851012},{"_id":"public/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1592177851012},{"_id":"public/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1592177851012},{"_id":"public/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1592177851012},{"_id":"public/lib/jquery/jquery.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1592177851012},{"_id":"public/css/style.css","hash":"5900c22079ff1cf47233dc9cd3626649e18e35e6","modified":1592177851012},{"_id":"source/_posts/Pair-RDD.md","hash":"859d6bfbda29727c2b7e48c6aaf3b6575ee1833f","modified":1592180515627},{"_id":"public/2020/06/15/Pair-RDD/index.html","hash":"638fc5522fc71cbd2bf3a5bd225c72df876af3ac","modified":1616513575139},{"_id":"public/archives/2020/index.html","hash":"884c952361470516e11062411927aec8e74e9fc4","modified":1616513575139},{"_id":"public/archives/2020/06/index.html","hash":"8c333c92f7197c0a534488edcb54a8bd8e6a5deb","modified":1616513575139},{"_id":"source/_drafts/big-data-work.md","hash":"90528c2ae5511f3e5bcfd1f71400d011731c9889","modified":1616513368949},{"_id":"source/_drafts/algorithm-service-architecture-1.md","hash":"46cf175bae53b8b7371a99a0715ae12c6563756b","modified":1616513368949},{"_id":"source/_drafts/algorithm-service-architecture.md","hash":"dba5d64a95fe4ea5e69a40cd81a6f37563fcbc55","modified":1616513368949},{"_id":"source/_drafts/maintenance-work.md","hash":"0a4eab27bf86d13cd1ecd3bab2fa82e5efca2d54","modified":1616513368949},{"_id":"source/_posts/algorithm-service-architecture.md","hash":"8010699679567dcf53e5b30cc63a737b63679a96","modified":1615906444418},{"_id":"source/_posts/算法服务架构.md","hash":"1acecaa5446fa3b716fb9a8749fe3471ab4fec1b","modified":1592181609000},{"_id":"source/_posts/.DS_Store","hash":"9eae5b95869de153a91dc44f015376fd25667ac5","modified":1592181413000},{"_id":"source/_posts/big-data-work.md","hash":"62c5120b205e4cda313216ee0b64c84c766378db","modified":1615104581730},{"_id":"source/_posts/maintenance-work.md","hash":"6918abeb24673c4f135a5733e2122010e2459845","modified":1615101461570},{"_id":"public/2020/06/15/maintenance-work/index.html","hash":"e63dd2f528cc40e5a66a1c9588c20462c87cd4b9","modified":1616513479300},{"_id":"public/2020/06/15/big-data-work/index.html","hash":"b48489da9457d336a242565d9f5ed10693ea3526","modified":1616513479300},{"_id":"public/2020/06/15/算法服务架构/index.html","hash":"71ecc0eea4e8037ae3c97b2789e1d950cce457de","modified":1616513479300},{"_id":"public/2020/06/15/algorithm-service-architecture/index.html","hash":"334b36f67069ee020c8f62f4b21352813c96ed3c","modified":1616513479300},{"_id":"public/categories/architecture/index.html","hash":"dc6a480c6bbdbcdb2fe17e0e396e21cce57c51b9","modified":1616513479300},{"_id":"public/archives/page/6/index.html","hash":"297606d1ed0013b5a8d232302f1b5421d065f486","modified":1616513479300},{"_id":"public/page/6/index.html","hash":"cd60a0dd6f1faa8164126d9ea7c2c4c11ff26ef0","modified":1616513479300},{"_id":"public/tags/bigdata/index.html","hash":"57678f9998ddeda91fad29f83fba7cc8afe9247b","modified":1616513479300},{"_id":"public/tags/architecture/index.html","hash":"0ed5637146c3be6140387e790a15e9247afa0c1c","modified":1616513479300}],"Category":[{"name":"Linux","_id":"ckbfpl1040004mp840saz78jf"},{"name":"Mac","_id":"ckbfpl1090009mp843fs1dwsu"},{"name":"Docker","_id":"ckbfpl10b000emp84173q1ccw"},{"name":"Java","_id":"ckbfpl11n000tmp84hn6z14v7"},{"name":"PHP","_id":"ckbfpl11r000ymp8488k1esax"},{"name":"Spark","_id":"ckbfpl11u0014mp84e8w9b0dv"},{"name":"DataBase","_id":"ckbfpl11x001amp849w2x5cwp"},{"name":"Test","_id":"ckbfpl1290023mp845xc84984"},{"name":"Redis","parent":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl12d002amp84dxmx9eyz"},{"name":"Design Pattern","_id":"ckbfpl12g002hmp8463r410j4"},{"name":"Git","_id":"ckbfpl13i003tmp84cpg5778x"},{"name":"Nginx","_id":"ckbfpl13o0041mp84dytianvx"},{"name":"VPN","_id":"ckbfpl13u004bmp84h6b0g3sr"},{"name":"VM","_id":"ckbfpl13z004kmp849owk7je8"},{"name":"Javascript","_id":"ckbfpl142004rmp846xbdemql"},{"name":"php","_id":"ckbfpl14o005xmp84d4dsdkny"},{"name":"linux","parent":"ckbfpl14o005xmp84d4dsdkny","_id":"ckbfpl14p0060mp8448743r16"},{"name":"architecture","_id":"ckmm6e0hm0004gw84g4ys3z9d"}],"Data":[],"Page":[{"title":"archives","date":"2020-05-21T10:14:17.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2020-05-21 18:14:17\n---\n","updated":"2020-06-14T15:57:16.338Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ckbfpl0zq0000mp84f4zzhy39","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"page","title":"about","date":"2020-05-21T10:16:26.000Z","_content":"\n---\n## ME\n\nHello, I’m Shulei, a software developer. After graduation from college in 2004, I have worked as Dot Net programmer more then 10 years. And now I’m focus on PHP, Linux and other open source technic. I familiar with PHP, C#, VB, ASP.NET, HTML, Javascript, SQL Server, MySql, Linux… I love programming because it gives me a lot of funny and exciting thing.\n\nYou can find me at various places on the net as well…\n\n  * [Twitter](http://twitter.com/kiddlee)\n  * [Facebook]([http://facebook.com/kiddlee)\n  * [GitHub](http://github.com/kiddlee)\n  * [MailToMe](mailto:shulei.lee@gmail.com)\n\n## Employment\n\n#### PHP Engineer – 汇通天下(2015/6 – present)\n\nWorking on dispatch system as PHP Programmer and Maintenance.\n\n#### PHP Engineer – GeneeGroup (2014/4 – 2015/6)\n\nWorking on LIMS and Wechat management as PHP Programmer.\n\n#### PHP Engineer – Eatmall (2014/1 – 2014/3)\n\nWorking on Eatmall as Team Lead. Eatmall is a C2C site, the main goods is food, supplier can create store, and customer can buy stuff from those store, like taobao.\n\n#### Senior Engineer – NorthernLight (2012/6 – 2013/12)\n\nWorking on 123Print for US, UK & Germany as Team Lead. 123Print is a B2C site, the main products are printing staff, like business card, post card, letterhead, Christmas card. Customer can design by themselves on line and create the order. The system will send the order to factory to manufacture by service.\n\n#### C++ Programmer – IGT (2011/1 – 2012/6)\n\nWorking on ADI & Patron. These products are use in casino. ADI like a message bus, deliver message & data between other products, and Patron is used to manager players in casino. There are a lot of versions of these products for different customer. We are support for them, like fix bug or make some new feature.\n\n#### Senior Engineer – Ethos Technologies (2008/1 – 2011/1)\n\nWorking on SFIFAS. This is an administrator system AS within the Swedish Sports Confederations solution called IdrottOnline Forbund to handle arrangements, participants, competitions, results and reports. This objective is to explain the thinking around this system, how it will work and what kind of modules will be present.\n\n#### SDET – Vanceinfo (2007/6 – 2007/12)\n\nWorking on Microsoft Project PassportIDS as SDET. We have some manual and automation test cases for Passport IDS.\n\n#### Engineer – ESINT (2005/3 – 2007/6)\n\nWorking on Stock Medicine Project. Hospitals buy medicine from internet by the bidding catalog, and then sent the order form to supplier, when the supplier received the order form and gave some inputs, after hospital confirmed the feedback. The supplier sent the medicine, finished bargaining and order form.\n\n#### Engineer – EWA (2004/1 – 2004/10)\n\nWorking on Storage Management Project. This project is used to manage and calculate some company’s warehouse, the location of warehouse and the goods in the warehouse.\n\n## Friends\n\n### Ethos\n* [老徐](http://www.geekswithblogs.net/shaunxu/Default.aspx)\n* [TerryLee](http://www.cnblogs.com/Terrylee/)\n* [Anytao](http://anytao.com/) [Blog](http://anytao.cnblogs.com/)\n\n### Genee\n* [马睿](http://mmmmm.io/)\n* [李晓沛](http://xiaopei.li/wiki/doku.php)\n* [陈小生](http://chenwen.name/)\n* [黄济芃](http://www.jianshu.com/users/106266f13b44/latest_articles)\n* [成哥](http://blog.csdn.net/dym_0809)\n* [魏永赳](http://wiki.oak71.com/doku.php/start)\n* [薛健](http://xander.bliday.com)\n\n## My Dot Net Blog\n* [my dot net blog](http://www.cnblogs.com/kid-li)","source":"about/index.md","raw":"---\nlayout: page \ntitle: about\ndate: 2020-05-21 18:16:26\n---\n\n---\n## ME\n\nHello, I’m Shulei, a software developer. After graduation from college in 2004, I have worked as Dot Net programmer more then 10 years. And now I’m focus on PHP, Linux and other open source technic. I familiar with PHP, C#, VB, ASP.NET, HTML, Javascript, SQL Server, MySql, Linux… I love programming because it gives me a lot of funny and exciting thing.\n\nYou can find me at various places on the net as well…\n\n  * [Twitter](http://twitter.com/kiddlee)\n  * [Facebook]([http://facebook.com/kiddlee)\n  * [GitHub](http://github.com/kiddlee)\n  * [MailToMe](mailto:shulei.lee@gmail.com)\n\n## Employment\n\n#### PHP Engineer – 汇通天下(2015/6 – present)\n\nWorking on dispatch system as PHP Programmer and Maintenance.\n\n#### PHP Engineer – GeneeGroup (2014/4 – 2015/6)\n\nWorking on LIMS and Wechat management as PHP Programmer.\n\n#### PHP Engineer – Eatmall (2014/1 – 2014/3)\n\nWorking on Eatmall as Team Lead. Eatmall is a C2C site, the main goods is food, supplier can create store, and customer can buy stuff from those store, like taobao.\n\n#### Senior Engineer – NorthernLight (2012/6 – 2013/12)\n\nWorking on 123Print for US, UK & Germany as Team Lead. 123Print is a B2C site, the main products are printing staff, like business card, post card, letterhead, Christmas card. Customer can design by themselves on line and create the order. The system will send the order to factory to manufacture by service.\n\n#### C++ Programmer – IGT (2011/1 – 2012/6)\n\nWorking on ADI & Patron. These products are use in casino. ADI like a message bus, deliver message & data between other products, and Patron is used to manager players in casino. There are a lot of versions of these products for different customer. We are support for them, like fix bug or make some new feature.\n\n#### Senior Engineer – Ethos Technologies (2008/1 – 2011/1)\n\nWorking on SFIFAS. This is an administrator system AS within the Swedish Sports Confederations solution called IdrottOnline Forbund to handle arrangements, participants, competitions, results and reports. This objective is to explain the thinking around this system, how it will work and what kind of modules will be present.\n\n#### SDET – Vanceinfo (2007/6 – 2007/12)\n\nWorking on Microsoft Project PassportIDS as SDET. We have some manual and automation test cases for Passport IDS.\n\n#### Engineer – ESINT (2005/3 – 2007/6)\n\nWorking on Stock Medicine Project. Hospitals buy medicine from internet by the bidding catalog, and then sent the order form to supplier, when the supplier received the order form and gave some inputs, after hospital confirmed the feedback. The supplier sent the medicine, finished bargaining and order form.\n\n#### Engineer – EWA (2004/1 – 2004/10)\n\nWorking on Storage Management Project. This project is used to manage and calculate some company’s warehouse, the location of warehouse and the goods in the warehouse.\n\n## Friends\n\n### Ethos\n* [老徐](http://www.geekswithblogs.net/shaunxu/Default.aspx)\n* [TerryLee](http://www.cnblogs.com/Terrylee/)\n* [Anytao](http://anytao.com/) [Blog](http://anytao.cnblogs.com/)\n\n### Genee\n* [马睿](http://mmmmm.io/)\n* [李晓沛](http://xiaopei.li/wiki/doku.php)\n* [陈小生](http://chenwen.name/)\n* [黄济芃](http://www.jianshu.com/users/106266f13b44/latest_articles)\n* [成哥](http://blog.csdn.net/dym_0809)\n* [魏永赳](http://wiki.oak71.com/doku.php/start)\n* [薛健](http://xander.bliday.com)\n\n## My Dot Net Blog\n* [my dot net blog](http://www.cnblogs.com/kid-li)","updated":"2020-06-14T15:57:16.339Z","path":"about/index.html","comments":1,"_id":"ckbfpl0zw0002mp84gyqr3txm","content":"<hr>\n<h2 id=\"ME\"><a href=\"#ME\" class=\"headerlink\" title=\"ME\"></a>ME</h2><p>Hello, I’m Shulei, a software developer. After graduation from college in 2004, I have worked as Dot Net programmer more then 10 years. And now I’m focus on PHP, Linux and other open source technic. I familiar with PHP, C#, VB, ASP.NET, HTML, Javascript, SQL Server, MySql, Linux… I love programming because it gives me a lot of funny and exciting thing.</p>\n<p>You can find me at various places on the net as well…</p>\n<ul>\n<li><a href=\"http://twitter.com/kiddlee\" target=\"_blank\" rel=\"noopener\">Twitter</a></li>\n<li><a href=\"[http://facebook.com/kiddlee\">Facebook</a></li>\n<li><a href=\"http://github.com/kiddlee\" target=\"_blank\" rel=\"noopener\">GitHub</a></li>\n<li><a href=\"mailto:shulei.lee@gmail.com\">MailToMe</a></li>\n</ul>\n<h2 id=\"Employment\"><a href=\"#Employment\" class=\"headerlink\" title=\"Employment\"></a>Employment</h2><h4 id=\"PHP-Engineer-–-汇通天下-2015-6-–-present\"><a href=\"#PHP-Engineer-–-汇通天下-2015-6-–-present\" class=\"headerlink\" title=\"PHP Engineer – 汇通天下(2015/6 – present)\"></a>PHP Engineer – 汇通天下(2015/6 – present)</h4><p>Working on dispatch system as PHP Programmer and Maintenance.</p>\n<h4 id=\"PHP-Engineer-–-GeneeGroup-2014-4-–-2015-6\"><a href=\"#PHP-Engineer-–-GeneeGroup-2014-4-–-2015-6\" class=\"headerlink\" title=\"PHP Engineer – GeneeGroup (2014/4 – 2015/6)\"></a>PHP Engineer – GeneeGroup (2014/4 – 2015/6)</h4><p>Working on LIMS and Wechat management as PHP Programmer.</p>\n<h4 id=\"PHP-Engineer-–-Eatmall-2014-1-–-2014-3\"><a href=\"#PHP-Engineer-–-Eatmall-2014-1-–-2014-3\" class=\"headerlink\" title=\"PHP Engineer – Eatmall (2014/1 – 2014/3)\"></a>PHP Engineer – Eatmall (2014/1 – 2014/3)</h4><p>Working on Eatmall as Team Lead. Eatmall is a C2C site, the main goods is food, supplier can create store, and customer can buy stuff from those store, like taobao.</p>\n<h4 id=\"Senior-Engineer-–-NorthernLight-2012-6-–-2013-12\"><a href=\"#Senior-Engineer-–-NorthernLight-2012-6-–-2013-12\" class=\"headerlink\" title=\"Senior Engineer – NorthernLight (2012/6 – 2013/12)\"></a>Senior Engineer – NorthernLight (2012/6 – 2013/12)</h4><p>Working on 123Print for US, UK &amp; Germany as Team Lead. 123Print is a B2C site, the main products are printing staff, like business card, post card, letterhead, Christmas card. Customer can design by themselves on line and create the order. The system will send the order to factory to manufacture by service.</p>\n<h4 id=\"C-Programmer-–-IGT-2011-1-–-2012-6\"><a href=\"#C-Programmer-–-IGT-2011-1-–-2012-6\" class=\"headerlink\" title=\"C++ Programmer – IGT (2011/1 – 2012/6)\"></a>C++ Programmer – IGT (2011/1 – 2012/6)</h4><p>Working on ADI &amp; Patron. These products are use in casino. ADI like a message bus, deliver message &amp; data between other products, and Patron is used to manager players in casino. There are a lot of versions of these products for different customer. We are support for them, like fix bug or make some new feature.</p>\n<h4 id=\"Senior-Engineer-–-Ethos-Technologies-2008-1-–-2011-1\"><a href=\"#Senior-Engineer-–-Ethos-Technologies-2008-1-–-2011-1\" class=\"headerlink\" title=\"Senior Engineer – Ethos Technologies (2008/1 – 2011/1)\"></a>Senior Engineer – Ethos Technologies (2008/1 – 2011/1)</h4><p>Working on SFIFAS. This is an administrator system AS within the Swedish Sports Confederations solution called IdrottOnline Forbund to handle arrangements, participants, competitions, results and reports. This objective is to explain the thinking around this system, how it will work and what kind of modules will be present.</p>\n<h4 id=\"SDET-–-Vanceinfo-2007-6-–-2007-12\"><a href=\"#SDET-–-Vanceinfo-2007-6-–-2007-12\" class=\"headerlink\" title=\"SDET – Vanceinfo (2007/6 – 2007/12)\"></a>SDET – Vanceinfo (2007/6 – 2007/12)</h4><p>Working on Microsoft Project PassportIDS as SDET. We have some manual and automation test cases for Passport IDS.</p>\n<h4 id=\"Engineer-–-ESINT-2005-3-–-2007-6\"><a href=\"#Engineer-–-ESINT-2005-3-–-2007-6\" class=\"headerlink\" title=\"Engineer – ESINT (2005/3 – 2007/6)\"></a>Engineer – ESINT (2005/3 – 2007/6)</h4><p>Working on Stock Medicine Project. Hospitals buy medicine from internet by the bidding catalog, and then sent the order form to supplier, when the supplier received the order form and gave some inputs, after hospital confirmed the feedback. The supplier sent the medicine, finished bargaining and order form.</p>\n<h4 id=\"Engineer-–-EWA-2004-1-–-2004-10\"><a href=\"#Engineer-–-EWA-2004-1-–-2004-10\" class=\"headerlink\" title=\"Engineer – EWA (2004/1 – 2004/10)\"></a>Engineer – EWA (2004/1 – 2004/10)</h4><p>Working on Storage Management Project. This project is used to manage and calculate some company’s warehouse, the location of warehouse and the goods in the warehouse.</p>\n<h2 id=\"Friends\"><a href=\"#Friends\" class=\"headerlink\" title=\"Friends\"></a>Friends</h2><h3 id=\"Ethos\"><a href=\"#Ethos\" class=\"headerlink\" title=\"Ethos\"></a>Ethos</h3><ul>\n<li><a href=\"http://www.geekswithblogs.net/shaunxu/Default.aspx\" target=\"_blank\" rel=\"noopener\">老徐</a></li>\n<li><a href=\"http://www.cnblogs.com/Terrylee/\" target=\"_blank\" rel=\"noopener\">TerryLee</a></li>\n<li><a href=\"http://anytao.com/\" target=\"_blank\" rel=\"noopener\">Anytao</a> <a href=\"http://anytao.cnblogs.com/\" target=\"_blank\" rel=\"noopener\">Blog</a></li>\n</ul>\n<h3 id=\"Genee\"><a href=\"#Genee\" class=\"headerlink\" title=\"Genee\"></a>Genee</h3><ul>\n<li><a href=\"http://mmmmm.io/\" target=\"_blank\" rel=\"noopener\">马睿</a></li>\n<li><a href=\"http://xiaopei.li/wiki/doku.php\" target=\"_blank\" rel=\"noopener\">李晓沛</a></li>\n<li><a href=\"http://chenwen.name/\" target=\"_blank\" rel=\"noopener\">陈小生</a></li>\n<li><a href=\"http://www.jianshu.com/users/106266f13b44/latest_articles\" target=\"_blank\" rel=\"noopener\">黄济芃</a></li>\n<li><a href=\"http://blog.csdn.net/dym_0809\" target=\"_blank\" rel=\"noopener\">成哥</a></li>\n<li><a href=\"http://wiki.oak71.com/doku.php/start\" target=\"_blank\" rel=\"noopener\">魏永赳</a></li>\n<li><a href=\"http://xander.bliday.com\" target=\"_blank\" rel=\"noopener\">薛健</a></li>\n</ul>\n<h2 id=\"My-Dot-Net-Blog\"><a href=\"#My-Dot-Net-Blog\" class=\"headerlink\" title=\"My Dot Net Blog\"></a>My Dot Net Blog</h2><ul>\n<li><a href=\"http://www.cnblogs.com/kid-li\" target=\"_blank\" rel=\"noopener\">my dot net blog</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h2 id=\"ME\"><a href=\"#ME\" class=\"headerlink\" title=\"ME\"></a>ME</h2><p>Hello, I’m Shulei, a software developer. After graduation from college in 2004, I have worked as Dot Net programmer more then 10 years. And now I’m focus on PHP, Linux and other open source technic. I familiar with PHP, C#, VB, ASP.NET, HTML, Javascript, SQL Server, MySql, Linux… I love programming because it gives me a lot of funny and exciting thing.</p>\n<p>You can find me at various places on the net as well…</p>\n<ul>\n<li><a href=\"http://twitter.com/kiddlee\" target=\"_blank\" rel=\"noopener\">Twitter</a></li>\n<li><a href=\"[http://facebook.com/kiddlee\">Facebook</a></li>\n<li><a href=\"http://github.com/kiddlee\" target=\"_blank\" rel=\"noopener\">GitHub</a></li>\n<li><a href=\"mailto:shulei.lee@gmail.com\">MailToMe</a></li>\n</ul>\n<h2 id=\"Employment\"><a href=\"#Employment\" class=\"headerlink\" title=\"Employment\"></a>Employment</h2><h4 id=\"PHP-Engineer-–-汇通天下-2015-6-–-present\"><a href=\"#PHP-Engineer-–-汇通天下-2015-6-–-present\" class=\"headerlink\" title=\"PHP Engineer – 汇通天下(2015/6 – present)\"></a>PHP Engineer – 汇通天下(2015/6 – present)</h4><p>Working on dispatch system as PHP Programmer and Maintenance.</p>\n<h4 id=\"PHP-Engineer-–-GeneeGroup-2014-4-–-2015-6\"><a href=\"#PHP-Engineer-–-GeneeGroup-2014-4-–-2015-6\" class=\"headerlink\" title=\"PHP Engineer – GeneeGroup (2014/4 – 2015/6)\"></a>PHP Engineer – GeneeGroup (2014/4 – 2015/6)</h4><p>Working on LIMS and Wechat management as PHP Programmer.</p>\n<h4 id=\"PHP-Engineer-–-Eatmall-2014-1-–-2014-3\"><a href=\"#PHP-Engineer-–-Eatmall-2014-1-–-2014-3\" class=\"headerlink\" title=\"PHP Engineer – Eatmall (2014/1 – 2014/3)\"></a>PHP Engineer – Eatmall (2014/1 – 2014/3)</h4><p>Working on Eatmall as Team Lead. Eatmall is a C2C site, the main goods is food, supplier can create store, and customer can buy stuff from those store, like taobao.</p>\n<h4 id=\"Senior-Engineer-–-NorthernLight-2012-6-–-2013-12\"><a href=\"#Senior-Engineer-–-NorthernLight-2012-6-–-2013-12\" class=\"headerlink\" title=\"Senior Engineer – NorthernLight (2012/6 – 2013/12)\"></a>Senior Engineer – NorthernLight (2012/6 – 2013/12)</h4><p>Working on 123Print for US, UK &amp; Germany as Team Lead. 123Print is a B2C site, the main products are printing staff, like business card, post card, letterhead, Christmas card. Customer can design by themselves on line and create the order. The system will send the order to factory to manufacture by service.</p>\n<h4 id=\"C-Programmer-–-IGT-2011-1-–-2012-6\"><a href=\"#C-Programmer-–-IGT-2011-1-–-2012-6\" class=\"headerlink\" title=\"C++ Programmer – IGT (2011/1 – 2012/6)\"></a>C++ Programmer – IGT (2011/1 – 2012/6)</h4><p>Working on ADI &amp; Patron. These products are use in casino. ADI like a message bus, deliver message &amp; data between other products, and Patron is used to manager players in casino. There are a lot of versions of these products for different customer. We are support for them, like fix bug or make some new feature.</p>\n<h4 id=\"Senior-Engineer-–-Ethos-Technologies-2008-1-–-2011-1\"><a href=\"#Senior-Engineer-–-Ethos-Technologies-2008-1-–-2011-1\" class=\"headerlink\" title=\"Senior Engineer – Ethos Technologies (2008/1 – 2011/1)\"></a>Senior Engineer – Ethos Technologies (2008/1 – 2011/1)</h4><p>Working on SFIFAS. This is an administrator system AS within the Swedish Sports Confederations solution called IdrottOnline Forbund to handle arrangements, participants, competitions, results and reports. This objective is to explain the thinking around this system, how it will work and what kind of modules will be present.</p>\n<h4 id=\"SDET-–-Vanceinfo-2007-6-–-2007-12\"><a href=\"#SDET-–-Vanceinfo-2007-6-–-2007-12\" class=\"headerlink\" title=\"SDET – Vanceinfo (2007/6 – 2007/12)\"></a>SDET – Vanceinfo (2007/6 – 2007/12)</h4><p>Working on Microsoft Project PassportIDS as SDET. We have some manual and automation test cases for Passport IDS.</p>\n<h4 id=\"Engineer-–-ESINT-2005-3-–-2007-6\"><a href=\"#Engineer-–-ESINT-2005-3-–-2007-6\" class=\"headerlink\" title=\"Engineer – ESINT (2005/3 – 2007/6)\"></a>Engineer – ESINT (2005/3 – 2007/6)</h4><p>Working on Stock Medicine Project. Hospitals buy medicine from internet by the bidding catalog, and then sent the order form to supplier, when the supplier received the order form and gave some inputs, after hospital confirmed the feedback. The supplier sent the medicine, finished bargaining and order form.</p>\n<h4 id=\"Engineer-–-EWA-2004-1-–-2004-10\"><a href=\"#Engineer-–-EWA-2004-1-–-2004-10\" class=\"headerlink\" title=\"Engineer – EWA (2004/1 – 2004/10)\"></a>Engineer – EWA (2004/1 – 2004/10)</h4><p>Working on Storage Management Project. This project is used to manage and calculate some company’s warehouse, the location of warehouse and the goods in the warehouse.</p>\n<h2 id=\"Friends\"><a href=\"#Friends\" class=\"headerlink\" title=\"Friends\"></a>Friends</h2><h3 id=\"Ethos\"><a href=\"#Ethos\" class=\"headerlink\" title=\"Ethos\"></a>Ethos</h3><ul>\n<li><a href=\"http://www.geekswithblogs.net/shaunxu/Default.aspx\" target=\"_blank\" rel=\"noopener\">老徐</a></li>\n<li><a href=\"http://www.cnblogs.com/Terrylee/\" target=\"_blank\" rel=\"noopener\">TerryLee</a></li>\n<li><a href=\"http://anytao.com/\" target=\"_blank\" rel=\"noopener\">Anytao</a> <a href=\"http://anytao.cnblogs.com/\" target=\"_blank\" rel=\"noopener\">Blog</a></li>\n</ul>\n<h3 id=\"Genee\"><a href=\"#Genee\" class=\"headerlink\" title=\"Genee\"></a>Genee</h3><ul>\n<li><a href=\"http://mmmmm.io/\" target=\"_blank\" rel=\"noopener\">马睿</a></li>\n<li><a href=\"http://xiaopei.li/wiki/doku.php\" target=\"_blank\" rel=\"noopener\">李晓沛</a></li>\n<li><a href=\"http://chenwen.name/\" target=\"_blank\" rel=\"noopener\">陈小生</a></li>\n<li><a href=\"http://www.jianshu.com/users/106266f13b44/latest_articles\" target=\"_blank\" rel=\"noopener\">黄济芃</a></li>\n<li><a href=\"http://blog.csdn.net/dym_0809\" target=\"_blank\" rel=\"noopener\">成哥</a></li>\n<li><a href=\"http://wiki.oak71.com/doku.php/start\" target=\"_blank\" rel=\"noopener\">魏永赳</a></li>\n<li><a href=\"http://xander.bliday.com\" target=\"_blank\" rel=\"noopener\">薛健</a></li>\n</ul>\n<h2 id=\"My-Dot-Net-Blog\"><a href=\"#My-Dot-Net-Blog\" class=\"headerlink\" title=\"My Dot Net Blog\"></a>My Dot Net Blog</h2><ul>\n<li><a href=\"http://www.cnblogs.com/kid-li\" target=\"_blank\" rel=\"noopener\">my dot net blog</a></li>\n</ul>\n"},{"title":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\nlayout: categories\n---\n","date":"2020-06-14T15:57:16.341Z","updated":"2020-06-14T15:57:16.341Z","path":"categories/index.html","comments":1,"_id":"ckbfpl11l000qmp848jf2507r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\nlayout: tags\n---\n","date":"2020-06-14T15:57:16.340Z","updated":"2020-06-14T15:57:16.340Z","path":"tags/index.html","comments":1,"_id":"ckbfpl11m000smp842ab63z8p","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"CentOS6.5无法正确映射目录","date":"2015-06-16T16:00:00.000Z","description":"CentOS6.5无法正确映射目录","_content":"\n\n今天在用vagrant建立centos6.5虚拟机时遇到了一个错误，提示错误:\n\n```\nFailed to mount folders in Linux guest. This is usually because\nthe \"vboxsf\" file system is not available. Please verify that\nthe guest additions are properly installed in the guest and\ncan work properly. The command attempted was:\n\nmount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant\nmount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant\n\nThe error output from the last command was:\n\n/sbin/mount.vboxsf: mounting failed with the error: No such device\n```\n\n虚拟机种的vagrant目录无法映射到宿主机上，估计是上周手欠，升级了virtualbox，造成了Virtualbox Addition版本不兼容 .\n解决方法\n\n```\nvagrant ssh\nyum update\nyum install kernel-headers kernel-devel\n```\n\nThen reboot\n","source":"_posts/CentOS6-5无法正确映射目录.md","raw":"---\nlayout: post\ntitle: \"CentOS6.5无法正确映射目录\"\ndate:   2015-06-17\ndescription: CentOS6.5无法正确映射目录\ncategories: Linux\ntags: linux\n---\n\n\n今天在用vagrant建立centos6.5虚拟机时遇到了一个错误，提示错误:\n\n```\nFailed to mount folders in Linux guest. This is usually because\nthe \"vboxsf\" file system is not available. Please verify that\nthe guest additions are properly installed in the guest and\ncan work properly. The command attempted was:\n\nmount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant\nmount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant\n\nThe error output from the last command was:\n\n/sbin/mount.vboxsf: mounting failed with the error: No such device\n```\n\n虚拟机种的vagrant目录无法映射到宿主机上，估计是上周手欠，升级了virtualbox，造成了Virtualbox Addition版本不兼容 .\n解决方法\n\n```\nvagrant ssh\nyum update\nyum install kernel-headers kernel-devel\n```\n\nThen reboot\n","slug":"CentOS6-5无法正确映射目录","published":1,"updated":"2020-06-14T15:57:16.312Z","comments":1,"photos":[],"link":"","_id":"ckbfpl0zt0001mp84gizkf6ch","content":"<p>今天在用vagrant建立centos6.5虚拟机时遇到了一个错误，提示错误:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Failed to mount folders in Linux guest. This is usually because</span><br><span class=\"line\">the &quot;vboxsf&quot; file system is not available. Please verify that</span><br><span class=\"line\">the guest additions are properly installed in the guest and</span><br><span class=\"line\">can work properly. The command attempted was:</span><br><span class=\"line\"></span><br><span class=\"line\">mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;getent group vagrant | cut -d: -f3&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\">mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;id -g vagrant&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\"></span><br><span class=\"line\">The error output from the last command was:</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;sbin&#x2F;mount.vboxsf: mounting failed with the error: No such device</span><br></pre></td></tr></table></figure>\n\n<p>虚拟机种的vagrant目录无法映射到宿主机上，估计是上周手欠，升级了virtualbox，造成了Virtualbox Addition版本不兼容 .<br>解决方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant ssh</span><br><span class=\"line\">yum update</span><br><span class=\"line\">yum install kernel-headers kernel-devel</span><br></pre></td></tr></table></figure>\n\n<p>Then reboot</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在用vagrant建立centos6.5虚拟机时遇到了一个错误，提示错误:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Failed to mount folders in Linux guest. This is usually because</span><br><span class=\"line\">the &quot;vboxsf&quot; file system is not available. Please verify that</span><br><span class=\"line\">the guest additions are properly installed in the guest and</span><br><span class=\"line\">can work properly. The command attempted was:</span><br><span class=\"line\"></span><br><span class=\"line\">mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;getent group vagrant | cut -d: -f3&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\">mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;id -g vagrant&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\"></span><br><span class=\"line\">The error output from the last command was:</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;sbin&#x2F;mount.vboxsf: mounting failed with the error: No such device</span><br></pre></td></tr></table></figure>\n\n<p>虚拟机种的vagrant目录无法映射到宿主机上，估计是上周手欠，升级了virtualbox，造成了Virtualbox Addition版本不兼容 .<br>解决方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vagrant ssh</span><br><span class=\"line\">yum update</span><br><span class=\"line\">yum install kernel-headers kernel-devel</span><br></pre></td></tr></table></figure>\n\n<p>Then reboot</p>\n"},{"layout":"post","title":"Install oh my zsh in Mac","date":"2015-05-13T16:00:00.000Z","description":"Install oh my zsh in Mac","_content":"\n1、克隆这个项目到本地(前提是你得有装git)\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\n```\n\n2、创建一个zsh的配置文件\n\n注意:如果你已经有一个~/.zshrc文件的话，建议你先做备份。使用以下命令\n\n```\ncp ~/.zshrc ~/.zshrc.orig\n```\n\n然后开始创建zsh的配置文件\n\n```\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n3、设置zsh为你的默认的shell\n\n```\nchsh -s /bin/zsh\n```\n\n4、重启并开始使用你的zsh (打开一个新的终端窗口便可…)\n至此，大功告成。\n\n更改zsh主题:\n\n1、编辑 ~/.zshrc\n\n2、修改\n\n```\nZSH_THEME=\"ys\"\n```\n注：主题文件在 ~/.oh-my-zsh/themes 目录\n这里有一份详细的zsh主题介绍，可以根据喜好自行修改。\n\n3、升级zsh\n\n```\nupgrade_oh_my_zsh\n```\n注：如果不能升级，看一下~/.oh-my-zsh下是否有改动\n```\ngit status\n```\n\n\n","source":"_posts/Install-oh-my-zsh-in-Mac.md","raw":"---\nlayout: post\ntitle: \"Install oh my zsh in Mac\"\ndate:   2015-05-14\ndescription: Install oh my zsh in Mac\ncategories: Mac\ntags: mac\n---\n\n1、克隆这个项目到本地(前提是你得有装git)\n\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\n```\n\n2、创建一个zsh的配置文件\n\n注意:如果你已经有一个~/.zshrc文件的话，建议你先做备份。使用以下命令\n\n```\ncp ~/.zshrc ~/.zshrc.orig\n```\n\n然后开始创建zsh的配置文件\n\n```\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n3、设置zsh为你的默认的shell\n\n```\nchsh -s /bin/zsh\n```\n\n4、重启并开始使用你的zsh (打开一个新的终端窗口便可…)\n至此，大功告成。\n\n更改zsh主题:\n\n1、编辑 ~/.zshrc\n\n2、修改\n\n```\nZSH_THEME=\"ys\"\n```\n注：主题文件在 ~/.oh-my-zsh/themes 目录\n这里有一份详细的zsh主题介绍，可以根据喜好自行修改。\n\n3、升级zsh\n\n```\nupgrade_oh_my_zsh\n```\n注：如果不能升级，看一下~/.oh-my-zsh下是否有改动\n```\ngit status\n```\n\n\n","slug":"Install-oh-my-zsh-in-Mac","published":1,"updated":"2020-06-14T15:57:16.334Z","comments":1,"photos":[],"link":"","_id":"ckbfpl0zw0003mp847vds55iz","content":"<p>1、克隆这个项目到本地(前提是你得有装git)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh.git ~&#x2F;.oh-my-zsh</span><br></pre></td></tr></table></figure>\n\n<p>2、创建一个zsh的配置文件</p>\n<p>注意:如果你已经有一个~/.zshrc文件的话，建议你先做备份。使用以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~&#x2F;.zshrc ~&#x2F;.zshrc.orig</span><br></pre></td></tr></table></figure>\n\n<p>然后开始创建zsh的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~&#x2F;.oh-my-zsh&#x2F;templates&#x2F;zshrc.zsh-template ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>3、设置zsh为你的默认的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure>\n\n<p>4、重启并开始使用你的zsh (打开一个新的终端窗口便可…)<br>至此，大功告成。</p>\n<p>更改zsh主题:</p>\n<p>1、编辑 ~/.zshrc</p>\n<p>2、修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME&#x3D;&quot;ys&quot;</span><br></pre></td></tr></table></figure>\n<p>注：主题文件在 ~/.oh-my-zsh/themes 目录<br>这里有一份详细的zsh主题介绍，可以根据喜好自行修改。</p>\n<p>3、升级zsh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upgrade_oh_my_zsh</span><br></pre></td></tr></table></figure>\n<p>注：如果不能升级，看一下~/.oh-my-zsh下是否有改动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>1、克隆这个项目到本地(前提是你得有装git)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh.git ~&#x2F;.oh-my-zsh</span><br></pre></td></tr></table></figure>\n\n<p>2、创建一个zsh的配置文件</p>\n<p>注意:如果你已经有一个~/.zshrc文件的话，建议你先做备份。使用以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~&#x2F;.zshrc ~&#x2F;.zshrc.orig</span><br></pre></td></tr></table></figure>\n\n<p>然后开始创建zsh的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~&#x2F;.oh-my-zsh&#x2F;templates&#x2F;zshrc.zsh-template ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>3、设置zsh为你的默认的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure>\n\n<p>4、重启并开始使用你的zsh (打开一个新的终端窗口便可…)<br>至此，大功告成。</p>\n<p>更改zsh主题:</p>\n<p>1、编辑 ~/.zshrc</p>\n<p>2、修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME&#x3D;&quot;ys&quot;</span><br></pre></td></tr></table></figure>\n<p>注：主题文件在 ~/.oh-my-zsh/themes 目录<br>这里有一份详细的zsh主题介绍，可以根据喜好自行修改。</p>\n<p>3、升级zsh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upgrade_oh_my_zsh</span><br></pre></td></tr></table></figure>\n<p>注：如果不能升级，看一下~/.oh-my-zsh下是否有改动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n"},{"layout":"post","title":"Docker系列（一） —— Docker安装","date":"2016-01-17T16:00:00.000Z","description":"Docker系列（一） —— Docker安装","_content":"\n### Ubuntu(14.04)软件源安装\n```\n$ sudo apt-get update\n$ sudo apt-get install -y docker.io\n$ sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker\n$ sudo sed -i '$acomplete -F _docker docker' /\n```\n### CentOS6\n```\n$ sudo yum install -y http://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.noarch.rpm\n$ sudo yum install -y docker-io\n```\n### CentOS7\n```\n$ sudo yum install -y docker\n```\n### Docker官方源安装最新版本\n```\n# add the new gpg key\n$ apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n\n# edit your /etc/apt/sources.list.d/docker.list\n$ vim /etc/apt/sources.list.d/docker.list\n\n# remove the contents and replace with the following depending on your os and version:\n\n# Debian Wheezy\ndeb https://apt.dockerproject.org/repo debian-wheezy main\n\n# Debian Jessie\ndeb https://apt.dockerproject.org/repo debian-jessie main\n\n# Debian Stretch/Sid\ndeb https://apt.dockerproject.org/repo debian-stretch main\n\n# Ubuntu Precise\ndeb https://apt.dockerproject.org/repo ubuntu-precise main\n\n# Ubuntu Trusty\ndeb https://apt.dockerproject.org/repo ubuntu-trusty main\n\n# Ubuntu Utopic\ndeb https://apt.dockerproject.org/repo ubuntu-utopic main\n\n# Ubuntu Vivid\ndeb https://apt.dockerproject.org/repo ubuntu-vivid main\n\n# Ubuntu Wily\ndeb https://apt.dockerproject.org/repo ubuntu-wily main\nAfter your source file is updated run the following:\n\n$ apt-get update\n \n# remove the old\n $ apt-get purge lxc-docker*\n  \n# install the new\n $ apt-get install docker-engine\n```\n\n### 参考资料\n[New Apt and Yum Repos](http://blog.docker.com/2015/07/new-apt-and-yum-repos/)\n","source":"_posts/DockerSeries-1-Install-Docker.md","raw":"---\nlayout: post\ntitle: \"Docker系列（一） —— Docker安装\"\ndate:   2016-01-18\ndescription: Docker系列（一） —— Docker安装\ncategories: Docker\ntags: docker\n---\n\n### Ubuntu(14.04)软件源安装\n```\n$ sudo apt-get update\n$ sudo apt-get install -y docker.io\n$ sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker\n$ sudo sed -i '$acomplete -F _docker docker' /\n```\n### CentOS6\n```\n$ sudo yum install -y http://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.noarch.rpm\n$ sudo yum install -y docker-io\n```\n### CentOS7\n```\n$ sudo yum install -y docker\n```\n### Docker官方源安装最新版本\n```\n# add the new gpg key\n$ apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n\n# edit your /etc/apt/sources.list.d/docker.list\n$ vim /etc/apt/sources.list.d/docker.list\n\n# remove the contents and replace with the following depending on your os and version:\n\n# Debian Wheezy\ndeb https://apt.dockerproject.org/repo debian-wheezy main\n\n# Debian Jessie\ndeb https://apt.dockerproject.org/repo debian-jessie main\n\n# Debian Stretch/Sid\ndeb https://apt.dockerproject.org/repo debian-stretch main\n\n# Ubuntu Precise\ndeb https://apt.dockerproject.org/repo ubuntu-precise main\n\n# Ubuntu Trusty\ndeb https://apt.dockerproject.org/repo ubuntu-trusty main\n\n# Ubuntu Utopic\ndeb https://apt.dockerproject.org/repo ubuntu-utopic main\n\n# Ubuntu Vivid\ndeb https://apt.dockerproject.org/repo ubuntu-vivid main\n\n# Ubuntu Wily\ndeb https://apt.dockerproject.org/repo ubuntu-wily main\nAfter your source file is updated run the following:\n\n$ apt-get update\n \n# remove the old\n $ apt-get purge lxc-docker*\n  \n# install the new\n $ apt-get install docker-engine\n```\n\n### 参考资料\n[New Apt and Yum Repos](http://blog.docker.com/2015/07/new-apt-and-yum-repos/)\n","slug":"DockerSeries-1-Install-Docker","published":1,"updated":"2020-06-14T15:57:16.328Z","comments":1,"photos":[],"link":"","_id":"ckbfpl1060006mp843yer8xbv","content":"<h3 id=\"Ubuntu-14-04-软件源安装\"><a href=\"#Ubuntu-14-04-软件源安装\" class=\"headerlink\" title=\"Ubuntu(14.04)软件源安装\"></a>Ubuntu(14.04)软件源安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install -y docker.io</span><br><span class=\"line\">$ sudo ln -sf &#x2F;usr&#x2F;bin&#x2F;docker.io &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker</span><br><span class=\"line\">$ sudo sed -i &#39;$acomplete -F _docker docker&#39; &#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"CentOS6\"><a href=\"#CentOS6\" class=\"headerlink\" title=\"CentOS6\"></a>CentOS6</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y http:&#x2F;&#x2F;mirrors.yun-idc.com&#x2F;epel&#x2F;6&#x2F;i386&#x2F;epel-release-6-8.noarch.rpm</span><br><span class=\"line\">$ sudo yum install -y docker-io</span><br></pre></td></tr></table></figure>\n<h3 id=\"CentOS7\"><a href=\"#CentOS7\" class=\"headerlink\" title=\"CentOS7\"></a>CentOS7</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"Docker官方源安装最新版本\"><a href=\"#Docker官方源安装最新版本\" class=\"headerlink\" title=\"Docker官方源安装最新版本\"></a>Docker官方源安装最新版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># add the new gpg key</span><br><span class=\"line\">$ apt-key adv --keyserver hkp:&#x2F;&#x2F;p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class=\"line\"></span><br><span class=\"line\"># edit your &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list</span><br><span class=\"line\">$ vim &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list</span><br><span class=\"line\"></span><br><span class=\"line\"># remove the contents and replace with the following depending on your os and version:</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Wheezy</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-wheezy main</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Jessie</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-jessie main</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Stretch&#x2F;Sid</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-stretch main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Precise</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-precise main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Trusty</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-trusty main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Utopic</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-utopic main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Vivid</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-vivid main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Wily</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-wily main</span><br><span class=\"line\">After your source file is updated run the following:</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt-get update</span><br><span class=\"line\"> </span><br><span class=\"line\"># remove the old</span><br><span class=\"line\"> $ apt-get purge lxc-docker*</span><br><span class=\"line\">  </span><br><span class=\"line\"># install the new</span><br><span class=\"line\"> $ apt-get install docker-engine</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"http://blog.docker.com/2015/07/new-apt-and-yum-repos/\" target=\"_blank\" rel=\"noopener\">New Apt and Yum Repos</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Ubuntu-14-04-软件源安装\"><a href=\"#Ubuntu-14-04-软件源安装\" class=\"headerlink\" title=\"Ubuntu(14.04)软件源安装\"></a>Ubuntu(14.04)软件源安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install -y docker.io</span><br><span class=\"line\">$ sudo ln -sf &#x2F;usr&#x2F;bin&#x2F;docker.io &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker</span><br><span class=\"line\">$ sudo sed -i &#39;$acomplete -F _docker docker&#39; &#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"CentOS6\"><a href=\"#CentOS6\" class=\"headerlink\" title=\"CentOS6\"></a>CentOS6</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y http:&#x2F;&#x2F;mirrors.yun-idc.com&#x2F;epel&#x2F;6&#x2F;i386&#x2F;epel-release-6-8.noarch.rpm</span><br><span class=\"line\">$ sudo yum install -y docker-io</span><br></pre></td></tr></table></figure>\n<h3 id=\"CentOS7\"><a href=\"#CentOS7\" class=\"headerlink\" title=\"CentOS7\"></a>CentOS7</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"Docker官方源安装最新版本\"><a href=\"#Docker官方源安装最新版本\" class=\"headerlink\" title=\"Docker官方源安装最新版本\"></a>Docker官方源安装最新版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># add the new gpg key</span><br><span class=\"line\">$ apt-key adv --keyserver hkp:&#x2F;&#x2F;p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class=\"line\"></span><br><span class=\"line\"># edit your &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list</span><br><span class=\"line\">$ vim &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list</span><br><span class=\"line\"></span><br><span class=\"line\"># remove the contents and replace with the following depending on your os and version:</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Wheezy</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-wheezy main</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Jessie</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-jessie main</span><br><span class=\"line\"></span><br><span class=\"line\"># Debian Stretch&#x2F;Sid</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo debian-stretch main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Precise</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-precise main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Trusty</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-trusty main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Utopic</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-utopic main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Vivid</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-vivid main</span><br><span class=\"line\"></span><br><span class=\"line\"># Ubuntu Wily</span><br><span class=\"line\">deb https:&#x2F;&#x2F;apt.dockerproject.org&#x2F;repo ubuntu-wily main</span><br><span class=\"line\">After your source file is updated run the following:</span><br><span class=\"line\"></span><br><span class=\"line\">$ apt-get update</span><br><span class=\"line\"> </span><br><span class=\"line\"># remove the old</span><br><span class=\"line\"> $ apt-get purge lxc-docker*</span><br><span class=\"line\">  </span><br><span class=\"line\"># install the new</span><br><span class=\"line\"> $ apt-get install docker-engine</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"http://blog.docker.com/2015/07/new-apt-and-yum-repos/\" target=\"_blank\" rel=\"noopener\">New Apt and Yum Repos</a></p>\n"},{"layout":"post","title":"Linux下编写Swift","date":"2015-12-15T16:00:00.000Z","description":"Linux下编写Swift","_content":"\n## 安装\n\n* 安装clang编译器，这个是苹果公司提供的 C 编译器，是 Swift 必需的一个组件。\n\n```\nsudo apt-get --assume-yes install clang\n```\n* 下载相应Swift包\n\n```\ncurl -O https://swift.org/builds/ubuntu1404/swift-2.2-SNAPSHOT-2015-12-01-b/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04.tar.gz\n```\nSwift包可以从[Swift.org]( https://swift.org/download)这里下载\n* 解压缩后可以，把它添加到环境变量中：\n\n```\n echo \"export PATH=\\\"${HOME}\\\"/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04/usr/bin:\\\"${PATH}\\\"\" >> .profile\n```\n* 重新登录后，可以看到Swift版本号\n\n```\nswift --version\nSwift version 2.2-dev (LLVM 7bae82deaa, Clang 53d04af5ce, Swift 5995ef2acd)\nTarget: x86_64-unknown-linux-gnu\n```\n\n##使用\n* 编写一个helloworld.swift文件\n\n```\nprint(\"Hello, world\")\n```\n* 编译该文件\n\n```\nswiftc helloworld.swift\n```\n* 运行文件：编译后会产生一个helloworld文件\n\n```\n./helloworld\nHello, world\n```\n##包管理\n可以参考苹果官方的[例子](https://github.com/apple/example-package-dealer)","source":"_posts/Linux-Swift-Install.md","raw":"---\nlayout: post\ntitle: \"Linux下编写Swift\"\ndate:   2015-12-16\ndescription: Linux下编写Swift\ncategories: Linux\ntags:\n- linux\n- swift\n---\n\n## 安装\n\n* 安装clang编译器，这个是苹果公司提供的 C 编译器，是 Swift 必需的一个组件。\n\n```\nsudo apt-get --assume-yes install clang\n```\n* 下载相应Swift包\n\n```\ncurl -O https://swift.org/builds/ubuntu1404/swift-2.2-SNAPSHOT-2015-12-01-b/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04.tar.gz\n```\nSwift包可以从[Swift.org]( https://swift.org/download)这里下载\n* 解压缩后可以，把它添加到环境变量中：\n\n```\n echo \"export PATH=\\\"${HOME}\\\"/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04/usr/bin:\\\"${PATH}\\\"\" >> .profile\n```\n* 重新登录后，可以看到Swift版本号\n\n```\nswift --version\nSwift version 2.2-dev (LLVM 7bae82deaa, Clang 53d04af5ce, Swift 5995ef2acd)\nTarget: x86_64-unknown-linux-gnu\n```\n\n##使用\n* 编写一个helloworld.swift文件\n\n```\nprint(\"Hello, world\")\n```\n* 编译该文件\n\n```\nswiftc helloworld.swift\n```\n* 运行文件：编译后会产生一个helloworld文件\n\n```\n./helloworld\nHello, world\n```\n##包管理\n可以参考苹果官方的[例子](https://github.com/apple/example-package-dealer)","slug":"Linux-Swift-Install","published":1,"updated":"2020-06-14T15:57:16.327Z","comments":1,"photos":[],"link":"","_id":"ckbfpl1070007mp841o7x8ppw","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>安装clang编译器，这个是苹果公司提供的 C 编译器，是 Swift 必需的一个组件。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get --assume-yes install clang</span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载相应Swift包</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https:&#x2F;&#x2F;swift.org&#x2F;builds&#x2F;ubuntu1404&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04.tar.gz</span><br></pre></td></tr></table></figure>\n<p>Swift包可以从<a href=\"https://swift.org/download\" target=\"_blank\" rel=\"noopener\">Swift.org</a>这里下载</p>\n<ul>\n<li>解压缩后可以，把它添加到环境变量中：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;export PATH&#x3D;\\&quot;$&#123;HOME&#125;\\&quot;&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04&#x2F;usr&#x2F;bin:\\&quot;$&#123;PATH&#125;\\&quot;&quot; &gt;&gt; .profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新登录后，可以看到Swift版本号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swift --version</span><br><span class=\"line\">Swift version 2.2-dev (LLVM 7bae82deaa, Clang 53d04af5ce, Swift 5995ef2acd)</span><br><span class=\"line\">Target: x86_64-unknown-linux-gnu</span><br></pre></td></tr></table></figure>\n\n<p>##使用</p>\n<ul>\n<li>编写一个helloworld.swift文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;Hello, world&quot;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编译该文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swiftc helloworld.swift</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行文件：编译后会产生一个helloworld文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;helloworld</span><br><span class=\"line\">Hello, world</span><br></pre></td></tr></table></figure>\n<p>##包管理<br>可以参考苹果官方的<a href=\"https://github.com/apple/example-package-dealer\" target=\"_blank\" rel=\"noopener\">例子</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>安装clang编译器，这个是苹果公司提供的 C 编译器，是 Swift 必需的一个组件。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get --assume-yes install clang</span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载相应Swift包</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https:&#x2F;&#x2F;swift.org&#x2F;builds&#x2F;ubuntu1404&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04.tar.gz</span><br></pre></td></tr></table></figure>\n<p>Swift包可以从<a href=\"https://swift.org/download\" target=\"_blank\" rel=\"noopener\">Swift.org</a>这里下载</p>\n<ul>\n<li>解压缩后可以，把它添加到环境变量中：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;export PATH&#x3D;\\&quot;$&#123;HOME&#125;\\&quot;&#x2F;swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu14.04&#x2F;usr&#x2F;bin:\\&quot;$&#123;PATH&#125;\\&quot;&quot; &gt;&gt; .profile</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新登录后，可以看到Swift版本号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swift --version</span><br><span class=\"line\">Swift version 2.2-dev (LLVM 7bae82deaa, Clang 53d04af5ce, Swift 5995ef2acd)</span><br><span class=\"line\">Target: x86_64-unknown-linux-gnu</span><br></pre></td></tr></table></figure>\n\n<p>##使用</p>\n<ul>\n<li>编写一个helloworld.swift文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;Hello, world&quot;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编译该文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swiftc helloworld.swift</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行文件：编译后会产生一个helloworld文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;helloworld</span><br><span class=\"line\">Hello, world</span><br></pre></td></tr></table></figure>\n<p>##包管理<br>可以参考苹果官方的<a href=\"https://github.com/apple/example-package-dealer\" target=\"_blank\" rel=\"noopener\">例子</a></p>\n"},{"layout":"post","title":"Linux一些经典书籍","date":"2015-03-23T16:00:00.000Z","description":"Linux一些经典书籍","_content":"\n一、linux之路，路漫漫其修远兮，吾将上下而求索！先上经典书籍！\n\n1.入门篇\n\n《LINUX权威指南》书不错，写的很全面也比较广，涉及的不深，做为入门书籍不错，可以比较全面的了解linux 。另外比较热门的也可以看看《鸟哥的私房菜》等书，偏管理类的书。如果想做server方向的可以找来看看。\n\n2.驱动篇\n\n《LINUX设备驱动程序 》就是网上说的“LDD”，经典之作，必备书籍。国产经典《Linux驱动详细解》也是一本非常不错的书，很实用，书中源代码 分析比较多，基于2440的，对linux外围驱动有很全面的讲解。\n\n3.内核篇\n\n浙江大学的《LINUX内核源代码情景分析》，外国的《UNIX源代码分析》还有《深入理解linux内核》都是出名的经典巨作。\n\n4.shell篇\n\n《LINUX与UNIX Shell编程指南》\n\n5.应用编程\n\n不用说了肯定是《unix环境高级编程》被称为unix编程的圣经。\n\n6.TCP/IP篇\n\n《TCP/IP详解》作者W.Richard Stevens也是《unix环境高级编程》的作者，牛人出的书没有一本不是经典的。但是英年早逝，默哀一下。\n\n7.c语言\n\n《The C Programming Language》正是作者造出来的c语言，书能垃圾就怪了。\n《c和指针》和《c缺陷和陷阱》两本必备。包含了c语言最容易出错的地方，加深c语言功力的好材料。\n\nc专家编程，c语言技术手册， Practice c Programming 等。\n\n8.算法\n\n《算法导论》，床头必备喝\n\n注：这些经典的书是经得起反复琢磨的，知识并不是一蹴而就的，需要反复实践，反复理解！千万不要妄想一口吃个胖子！\n\n \n\n二、如何学习linux\n\nLinux操作系统主要就是一些配置文件（/etc）和命令行工具（/bin /sbin /usr/bin /usr/sbin），要掌握操作系统的主要目录结构和配置文件，运用系统的命令行工具（shell脚本）完成常规的操作系统维护工作，监控工作。进而可 以安装部署一些企业应用，进行监控、管理等等。\n\n1.重要的命令：find，sed，awk，正则……\n\n2.工具：gnu下的著名软件 gcc，gdb，vi，make……\n\n3.unix编程，编译等。xwin开发方式，gtk，qt……\n\n4.文件系统，/dev下的设备（会用），/var下重要的东西，/etc 下的配置（常用服务配置apache, ftpd, sshd, xinetd, squid, natd, named），系统启动顺序，配置相应服务等……\n\n5.c，python，php等高级语言……\n\n \n\n三、个人水平定位\n\n1.初级：熟练使用命令、熟悉Shell编程、能配置简单的服务，清楚各类服务相关的配置文件的位置， 能看懂并可修改系统提供的配置脚本（/etc/*.*）。推荐书籍：\n《鸟哥的私房菜基础篇、高级篇》\n《Advanced Bash Shell》\n2.中级：熟悉TCP/IP原理、OS原理、熟练使用C语言、Linux系统编程、网络编程。 推荐书籍：\n《The C Programming Language》\n《Unix环境高级编程》\n《Linux程序设计》\n《TCP/IP协议详解卷一》\n《Unix网络高级编程》\n3.高级： 内核，驱动级别。推荐书籍：\n《Linux Device Driver》\n《深入理解Linux内核》\n《深入理解计算机系统》\n《深入理解LINUX网络内幕》\n\n \n\n四、学习途径\n\n1.Help System  帮助文档（man）\n\n2.online books  在线文档（wiki ，blogs）\n\n3.Training Guide   培训教程\n\n4.Topic Collections  专题\n\n5.Forms           论坛\n\n6.名家的书籍\n\n7.IRC，邮件列表等\n\n8.理论与理论中的实践的差别并不如理论与实践中的实践差别那样大！\n\n \n\n五、其他的书\n\njavascript基础教程，～高级程序设计，～权威指南，～DOM编程艺术，～设计模式，～入门经典\n\nUNIX in a Nutshell，The unix programming environment，unix技术手册\n\nmanaging projects with make\n\napplying RCS and SCCS\n\n \n\n六、自己的路\n\nlinux/unix (c , bash(shell) , 工具(vi, gcc, make) , 内核机制 , python(高级语言) , 开源)\n\n设计理念，系统管理，unix环境，服务器，嵌入式，桌面，移动设备\n","source":"_posts/Linux一些经典书籍.md","raw":"---\nlayout: post\ntitle: \"Linux一些经典书籍\"\ndate:   2015-03-24\ndescription: Linux一些经典书籍\ncategories: Linux\ntags: linux\n---\n\n一、linux之路，路漫漫其修远兮，吾将上下而求索！先上经典书籍！\n\n1.入门篇\n\n《LINUX权威指南》书不错，写的很全面也比较广，涉及的不深，做为入门书籍不错，可以比较全面的了解linux 。另外比较热门的也可以看看《鸟哥的私房菜》等书，偏管理类的书。如果想做server方向的可以找来看看。\n\n2.驱动篇\n\n《LINUX设备驱动程序 》就是网上说的“LDD”，经典之作，必备书籍。国产经典《Linux驱动详细解》也是一本非常不错的书，很实用，书中源代码 分析比较多，基于2440的，对linux外围驱动有很全面的讲解。\n\n3.内核篇\n\n浙江大学的《LINUX内核源代码情景分析》，外国的《UNIX源代码分析》还有《深入理解linux内核》都是出名的经典巨作。\n\n4.shell篇\n\n《LINUX与UNIX Shell编程指南》\n\n5.应用编程\n\n不用说了肯定是《unix环境高级编程》被称为unix编程的圣经。\n\n6.TCP/IP篇\n\n《TCP/IP详解》作者W.Richard Stevens也是《unix环境高级编程》的作者，牛人出的书没有一本不是经典的。但是英年早逝，默哀一下。\n\n7.c语言\n\n《The C Programming Language》正是作者造出来的c语言，书能垃圾就怪了。\n《c和指针》和《c缺陷和陷阱》两本必备。包含了c语言最容易出错的地方，加深c语言功力的好材料。\n\nc专家编程，c语言技术手册， Practice c Programming 等。\n\n8.算法\n\n《算法导论》，床头必备喝\n\n注：这些经典的书是经得起反复琢磨的，知识并不是一蹴而就的，需要反复实践，反复理解！千万不要妄想一口吃个胖子！\n\n \n\n二、如何学习linux\n\nLinux操作系统主要就是一些配置文件（/etc）和命令行工具（/bin /sbin /usr/bin /usr/sbin），要掌握操作系统的主要目录结构和配置文件，运用系统的命令行工具（shell脚本）完成常规的操作系统维护工作，监控工作。进而可 以安装部署一些企业应用，进行监控、管理等等。\n\n1.重要的命令：find，sed，awk，正则……\n\n2.工具：gnu下的著名软件 gcc，gdb，vi，make……\n\n3.unix编程，编译等。xwin开发方式，gtk，qt……\n\n4.文件系统，/dev下的设备（会用），/var下重要的东西，/etc 下的配置（常用服务配置apache, ftpd, sshd, xinetd, squid, natd, named），系统启动顺序，配置相应服务等……\n\n5.c，python，php等高级语言……\n\n \n\n三、个人水平定位\n\n1.初级：熟练使用命令、熟悉Shell编程、能配置简单的服务，清楚各类服务相关的配置文件的位置， 能看懂并可修改系统提供的配置脚本（/etc/*.*）。推荐书籍：\n《鸟哥的私房菜基础篇、高级篇》\n《Advanced Bash Shell》\n2.中级：熟悉TCP/IP原理、OS原理、熟练使用C语言、Linux系统编程、网络编程。 推荐书籍：\n《The C Programming Language》\n《Unix环境高级编程》\n《Linux程序设计》\n《TCP/IP协议详解卷一》\n《Unix网络高级编程》\n3.高级： 内核，驱动级别。推荐书籍：\n《Linux Device Driver》\n《深入理解Linux内核》\n《深入理解计算机系统》\n《深入理解LINUX网络内幕》\n\n \n\n四、学习途径\n\n1.Help System  帮助文档（man）\n\n2.online books  在线文档（wiki ，blogs）\n\n3.Training Guide   培训教程\n\n4.Topic Collections  专题\n\n5.Forms           论坛\n\n6.名家的书籍\n\n7.IRC，邮件列表等\n\n8.理论与理论中的实践的差别并不如理论与实践中的实践差别那样大！\n\n \n\n五、其他的书\n\njavascript基础教程，～高级程序设计，～权威指南，～DOM编程艺术，～设计模式，～入门经典\n\nUNIX in a Nutshell，The unix programming environment，unix技术手册\n\nmanaging projects with make\n\napplying RCS and SCCS\n\n \n\n六、自己的路\n\nlinux/unix (c , bash(shell) , 工具(vi, gcc, make) , 内核机制 , python(高级语言) , 开源)\n\n设计理念，系统管理，unix环境，服务器，嵌入式，桌面，移动设备\n","slug":"Linux一些经典书籍","published":1,"updated":"2020-06-14T15:57:16.326Z","comments":1,"photos":[],"link":"","_id":"ckbfpl1090008mp84ey2z1fbx","content":"<p>一、linux之路，路漫漫其修远兮，吾将上下而求索！先上经典书籍！</p>\n<p>1.入门篇</p>\n<p>《LINUX权威指南》书不错，写的很全面也比较广，涉及的不深，做为入门书籍不错，可以比较全面的了解linux 。另外比较热门的也可以看看《鸟哥的私房菜》等书，偏管理类的书。如果想做server方向的可以找来看看。</p>\n<p>2.驱动篇</p>\n<p>《LINUX设备驱动程序 》就是网上说的“LDD”，经典之作，必备书籍。国产经典《Linux驱动详细解》也是一本非常不错的书，很实用，书中源代码 分析比较多，基于2440的，对linux外围驱动有很全面的讲解。</p>\n<p>3.内核篇</p>\n<p>浙江大学的《LINUX内核源代码情景分析》，外国的《UNIX源代码分析》还有《深入理解linux内核》都是出名的经典巨作。</p>\n<p>4.shell篇</p>\n<p>《LINUX与UNIX Shell编程指南》</p>\n<p>5.应用编程</p>\n<p>不用说了肯定是《unix环境高级编程》被称为unix编程的圣经。</p>\n<p>6.TCP/IP篇</p>\n<p>《TCP/IP详解》作者W.Richard Stevens也是《unix环境高级编程》的作者，牛人出的书没有一本不是经典的。但是英年早逝，默哀一下。</p>\n<p>7.c语言</p>\n<p>《The C Programming Language》正是作者造出来的c语言，书能垃圾就怪了。<br>《c和指针》和《c缺陷和陷阱》两本必备。包含了c语言最容易出错的地方，加深c语言功力的好材料。</p>\n<p>c专家编程，c语言技术手册， Practice c Programming 等。</p>\n<p>8.算法</p>\n<p>《算法导论》，床头必备喝</p>\n<p>注：这些经典的书是经得起反复琢磨的，知识并不是一蹴而就的，需要反复实践，反复理解！千万不要妄想一口吃个胖子！</p>\n<p>二、如何学习linux</p>\n<p>Linux操作系统主要就是一些配置文件（/etc）和命令行工具（/bin /sbin /usr/bin /usr/sbin），要掌握操作系统的主要目录结构和配置文件，运用系统的命令行工具（shell脚本）完成常规的操作系统维护工作，监控工作。进而可 以安装部署一些企业应用，进行监控、管理等等。</p>\n<p>1.重要的命令：find，sed，awk，正则……</p>\n<p>2.工具：gnu下的著名软件 gcc，gdb，vi，make……</p>\n<p>3.unix编程，编译等。xwin开发方式，gtk，qt……</p>\n<p>4.文件系统，/dev下的设备（会用），/var下重要的东西，/etc 下的配置（常用服务配置apache, ftpd, sshd, xinetd, squid, natd, named），系统启动顺序，配置相应服务等……</p>\n<p>5.c，python，php等高级语言……</p>\n<p>三、个人水平定位</p>\n<p>1.初级：熟练使用命令、熟悉Shell编程、能配置简单的服务，清楚各类服务相关的配置文件的位置， 能看懂并可修改系统提供的配置脚本（/etc/<em>.</em>）。推荐书籍：<br>《鸟哥的私房菜基础篇、高级篇》<br>《Advanced Bash Shell》<br>2.中级：熟悉TCP/IP原理、OS原理、熟练使用C语言、Linux系统编程、网络编程。 推荐书籍：<br>《The C Programming Language》<br>《Unix环境高级编程》<br>《Linux程序设计》<br>《TCP/IP协议详解卷一》<br>《Unix网络高级编程》<br>3.高级： 内核，驱动级别。推荐书籍：<br>《Linux Device Driver》<br>《深入理解Linux内核》<br>《深入理解计算机系统》<br>《深入理解LINUX网络内幕》</p>\n<p>四、学习途径</p>\n<p>1.Help System  帮助文档（man）</p>\n<p>2.online books  在线文档（wiki ，blogs）</p>\n<p>3.Training Guide   培训教程</p>\n<p>4.Topic Collections  专题</p>\n<p>5.Forms           论坛</p>\n<p>6.名家的书籍</p>\n<p>7.IRC，邮件列表等</p>\n<p>8.理论与理论中的实践的差别并不如理论与实践中的实践差别那样大！</p>\n<p>五、其他的书</p>\n<p>javascript基础教程，～高级程序设计，～权威指南，～DOM编程艺术，～设计模式，～入门经典</p>\n<p>UNIX in a Nutshell，The unix programming environment，unix技术手册</p>\n<p>managing projects with make</p>\n<p>applying RCS and SCCS</p>\n<p>六、自己的路</p>\n<p>linux/unix (c , bash(shell) , 工具(vi, gcc, make) , 内核机制 , python(高级语言) , 开源)</p>\n<p>设计理念，系统管理，unix环境，服务器，嵌入式，桌面，移动设备</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一、linux之路，路漫漫其修远兮，吾将上下而求索！先上经典书籍！</p>\n<p>1.入门篇</p>\n<p>《LINUX权威指南》书不错，写的很全面也比较广，涉及的不深，做为入门书籍不错，可以比较全面的了解linux 。另外比较热门的也可以看看《鸟哥的私房菜》等书，偏管理类的书。如果想做server方向的可以找来看看。</p>\n<p>2.驱动篇</p>\n<p>《LINUX设备驱动程序 》就是网上说的“LDD”，经典之作，必备书籍。国产经典《Linux驱动详细解》也是一本非常不错的书，很实用，书中源代码 分析比较多，基于2440的，对linux外围驱动有很全面的讲解。</p>\n<p>3.内核篇</p>\n<p>浙江大学的《LINUX内核源代码情景分析》，外国的《UNIX源代码分析》还有《深入理解linux内核》都是出名的经典巨作。</p>\n<p>4.shell篇</p>\n<p>《LINUX与UNIX Shell编程指南》</p>\n<p>5.应用编程</p>\n<p>不用说了肯定是《unix环境高级编程》被称为unix编程的圣经。</p>\n<p>6.TCP/IP篇</p>\n<p>《TCP/IP详解》作者W.Richard Stevens也是《unix环境高级编程》的作者，牛人出的书没有一本不是经典的。但是英年早逝，默哀一下。</p>\n<p>7.c语言</p>\n<p>《The C Programming Language》正是作者造出来的c语言，书能垃圾就怪了。<br>《c和指针》和《c缺陷和陷阱》两本必备。包含了c语言最容易出错的地方，加深c语言功力的好材料。</p>\n<p>c专家编程，c语言技术手册， Practice c Programming 等。</p>\n<p>8.算法</p>\n<p>《算法导论》，床头必备喝</p>\n<p>注：这些经典的书是经得起反复琢磨的，知识并不是一蹴而就的，需要反复实践，反复理解！千万不要妄想一口吃个胖子！</p>\n<p>二、如何学习linux</p>\n<p>Linux操作系统主要就是一些配置文件（/etc）和命令行工具（/bin /sbin /usr/bin /usr/sbin），要掌握操作系统的主要目录结构和配置文件，运用系统的命令行工具（shell脚本）完成常规的操作系统维护工作，监控工作。进而可 以安装部署一些企业应用，进行监控、管理等等。</p>\n<p>1.重要的命令：find，sed，awk，正则……</p>\n<p>2.工具：gnu下的著名软件 gcc，gdb，vi，make……</p>\n<p>3.unix编程，编译等。xwin开发方式，gtk，qt……</p>\n<p>4.文件系统，/dev下的设备（会用），/var下重要的东西，/etc 下的配置（常用服务配置apache, ftpd, sshd, xinetd, squid, natd, named），系统启动顺序，配置相应服务等……</p>\n<p>5.c，python，php等高级语言……</p>\n<p>三、个人水平定位</p>\n<p>1.初级：熟练使用命令、熟悉Shell编程、能配置简单的服务，清楚各类服务相关的配置文件的位置， 能看懂并可修改系统提供的配置脚本（/etc/<em>.</em>）。推荐书籍：<br>《鸟哥的私房菜基础篇、高级篇》<br>《Advanced Bash Shell》<br>2.中级：熟悉TCP/IP原理、OS原理、熟练使用C语言、Linux系统编程、网络编程。 推荐书籍：<br>《The C Programming Language》<br>《Unix环境高级编程》<br>《Linux程序设计》<br>《TCP/IP协议详解卷一》<br>《Unix网络高级编程》<br>3.高级： 内核，驱动级别。推荐书籍：<br>《Linux Device Driver》<br>《深入理解Linux内核》<br>《深入理解计算机系统》<br>《深入理解LINUX网络内幕》</p>\n<p>四、学习途径</p>\n<p>1.Help System  帮助文档（man）</p>\n<p>2.online books  在线文档（wiki ，blogs）</p>\n<p>3.Training Guide   培训教程</p>\n<p>4.Topic Collections  专题</p>\n<p>5.Forms           论坛</p>\n<p>6.名家的书籍</p>\n<p>7.IRC，邮件列表等</p>\n<p>8.理论与理论中的实践的差别并不如理论与实践中的实践差别那样大！</p>\n<p>五、其他的书</p>\n<p>javascript基础教程，～高级程序设计，～权威指南，～DOM编程艺术，～设计模式，～入门经典</p>\n<p>UNIX in a Nutshell，The unix programming environment，unix技术手册</p>\n<p>managing projects with make</p>\n<p>applying RCS and SCCS</p>\n<p>六、自己的路</p>\n<p>linux/unix (c , bash(shell) , 工具(vi, gcc, make) , 内核机制 , python(高级语言) , 开源)</p>\n<p>设计理念，系统管理，unix环境，服务器，嵌入式，桌面，移动设备</p>\n"},{"layout":"post","title":"Java send get or post","date":"2016-08-09T16:00:00.000Z","description":"Java send get or post","_content":"\n```\npackage wzh.Http;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HttpRequest {\n    /**\n     * 向指定URL发送GET方法的请求\n     * \n     * @param url\n     *            发送请求的URL\n     * @param param\n     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。\n     * @return URL 所代表远程资源的响应结果\n     */\n    public static String sendGet(String url, String param) {\n        String result = \"\";\n        BufferedReader in = null;\n        try {\n            String urlNameString = url + \"?\" + param;\n            URL realUrl = new URL(urlNameString);\n            // 打开和URL之间的连接\n            URLConnection connection = realUrl.openConnection();\n            // 设置通用的请求属性\n            connection.setRequestProperty(\"accept\", \"*/*\");\n            connection.setRequestProperty(\"connection\", \"Keep-Alive\");\n            connection.setRequestProperty(\"user-agent\",\n                    \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\");\n            // 建立实际的连接\n            connection.connect();\n            // 获取所有响应头字段\n            Map<String, List<String>> map = connection.getHeaderFields();\n            // 遍历所有的响应头字段\n            for (String key : map.keySet()) {\n                System.out.println(key + \"--->\" + map.get(key));\n            }\n            // 定义 BufferedReader输入流来读取URL的响应\n            in = new BufferedReader(new InputStreamReader(\n                    connection.getInputStream()));\n            String line;\n            while ((line = in.readLine()) != null) {\n                result += line;\n            }\n        } catch (Exception e) {\n            System.out.println(\"发送GET请求出现异常！\" + e);\n            e.printStackTrace();\n        }\n        // 使用finally块来关闭输入流\n        finally {\n            try {\n                if (in != null) {\n                    in.close();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n            }\n        }\n        return result;\n    }\n\n    /**\n     * 向指定 URL 发送POST方法的请求\n     * \n     * @param url\n     *            发送请求的 URL\n     * @param param\n     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。\n     * @return 所代表远程资源的响应结果\n     */\n    public static String sendPost(String url, String param) {\n        PrintWriter out = null;\n        BufferedReader in = null;\n        String result = \"\";\n        try {\n            URL realUrl = new URL(url);\n            // 打开和URL之间的连接\n            URLConnection conn = realUrl.openConnection();\n            // 设置通用的请求属性\n            conn.setRequestProperty(\"accept\", \"*/*\");\n            conn.setRequestProperty(\"connection\", \"Keep-Alive\");\n            conn.setRequestProperty(\"user-agent\",\n                    \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\");\n            // 发送POST请求必须设置如下两行\n            conn.setDoOutput(true);\n            conn.setDoInput(true);\n            // 获取URLConnection对象对应的输出流\n            out = new PrintWriter(conn.getOutputStream());\n            // 发送请求参数\n            out.print(param);\n            // flush输出流的缓冲\n            out.flush();\n            // 定义BufferedReader输入流来读取URL的响应\n            in = new BufferedReader(\n                    new InputStreamReader(conn.getInputStream()));\n            String line;\n            while ((line = in.readLine()) != null) {\n                result += line;\n            }\n        } catch (Exception e) {\n            System.out.println(\"发送 POST 请求出现异常！\"+e);\n            e.printStackTrace();\n        }\n        //使用finally块来关闭输出流、输入流\n        finally{\n            try{\n                if(out!=null){\n                    out.close();\n                }\n                if(in!=null){\n                    in.close();\n                }\n            }\n            catch(IOException ex){\n                ex.printStackTrace();\n            }\n        }\n        return result;\n    }    \n}\n```\n\n```\npublic static void main(String[] args) {\n        //发送 GET 请求\n        String s=HttpRequest.sendGet(\"http://localhost:6144/Home/RequestString\", \"key=123&v=456\");\n        System.out.println(s);\n        \n        //发送 POST 请求\n        String sr=HttpRequest.sendPost(\"http://localhost:6144/Home/RequestPostString\", \"key=123&v=456\");\n        System.out.println(sr);\n    }\n```","source":"_posts/Java-send-get-or-post.md","raw":"---\nlayout: post\ntitle: \"Java send get or post\"\ndate:   2016-08-10\ndescription: Java send get or post\ncategories: Java\ntags: java\n---\n\n```\npackage wzh.Http;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.List;\nimport java.util.Map;\n\npublic class HttpRequest {\n    /**\n     * 向指定URL发送GET方法的请求\n     * \n     * @param url\n     *            发送请求的URL\n     * @param param\n     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。\n     * @return URL 所代表远程资源的响应结果\n     */\n    public static String sendGet(String url, String param) {\n        String result = \"\";\n        BufferedReader in = null;\n        try {\n            String urlNameString = url + \"?\" + param;\n            URL realUrl = new URL(urlNameString);\n            // 打开和URL之间的连接\n            URLConnection connection = realUrl.openConnection();\n            // 设置通用的请求属性\n            connection.setRequestProperty(\"accept\", \"*/*\");\n            connection.setRequestProperty(\"connection\", \"Keep-Alive\");\n            connection.setRequestProperty(\"user-agent\",\n                    \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\");\n            // 建立实际的连接\n            connection.connect();\n            // 获取所有响应头字段\n            Map<String, List<String>> map = connection.getHeaderFields();\n            // 遍历所有的响应头字段\n            for (String key : map.keySet()) {\n                System.out.println(key + \"--->\" + map.get(key));\n            }\n            // 定义 BufferedReader输入流来读取URL的响应\n            in = new BufferedReader(new InputStreamReader(\n                    connection.getInputStream()));\n            String line;\n            while ((line = in.readLine()) != null) {\n                result += line;\n            }\n        } catch (Exception e) {\n            System.out.println(\"发送GET请求出现异常！\" + e);\n            e.printStackTrace();\n        }\n        // 使用finally块来关闭输入流\n        finally {\n            try {\n                if (in != null) {\n                    in.close();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n            }\n        }\n        return result;\n    }\n\n    /**\n     * 向指定 URL 发送POST方法的请求\n     * \n     * @param url\n     *            发送请求的 URL\n     * @param param\n     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。\n     * @return 所代表远程资源的响应结果\n     */\n    public static String sendPost(String url, String param) {\n        PrintWriter out = null;\n        BufferedReader in = null;\n        String result = \"\";\n        try {\n            URL realUrl = new URL(url);\n            // 打开和URL之间的连接\n            URLConnection conn = realUrl.openConnection();\n            // 设置通用的请求属性\n            conn.setRequestProperty(\"accept\", \"*/*\");\n            conn.setRequestProperty(\"connection\", \"Keep-Alive\");\n            conn.setRequestProperty(\"user-agent\",\n                    \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\");\n            // 发送POST请求必须设置如下两行\n            conn.setDoOutput(true);\n            conn.setDoInput(true);\n            // 获取URLConnection对象对应的输出流\n            out = new PrintWriter(conn.getOutputStream());\n            // 发送请求参数\n            out.print(param);\n            // flush输出流的缓冲\n            out.flush();\n            // 定义BufferedReader输入流来读取URL的响应\n            in = new BufferedReader(\n                    new InputStreamReader(conn.getInputStream()));\n            String line;\n            while ((line = in.readLine()) != null) {\n                result += line;\n            }\n        } catch (Exception e) {\n            System.out.println(\"发送 POST 请求出现异常！\"+e);\n            e.printStackTrace();\n        }\n        //使用finally块来关闭输出流、输入流\n        finally{\n            try{\n                if(out!=null){\n                    out.close();\n                }\n                if(in!=null){\n                    in.close();\n                }\n            }\n            catch(IOException ex){\n                ex.printStackTrace();\n            }\n        }\n        return result;\n    }    \n}\n```\n\n```\npublic static void main(String[] args) {\n        //发送 GET 请求\n        String s=HttpRequest.sendGet(\"http://localhost:6144/Home/RequestString\", \"key=123&v=456\");\n        System.out.println(s);\n        \n        //发送 POST 请求\n        String sr=HttpRequest.sendPost(\"http://localhost:6144/Home/RequestPostString\", \"key=123&v=456\");\n        System.out.println(sr);\n    }\n```","slug":"Java-send-get-or-post","published":1,"updated":"2020-06-14T15:57:16.318Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11k000pmp845wxv4553","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package wzh.Http;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.BufferedReader;</span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.io.InputStreamReader;</span><br><span class=\"line\">import java.io.PrintWriter;</span><br><span class=\"line\">import java.net.URL;</span><br><span class=\"line\">import java.net.URLConnection;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\">public class HttpRequest &#123;</span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 向指定URL发送GET方法的请求</span><br><span class=\"line\">     * </span><br><span class=\"line\">     * @param url</span><br><span class=\"line\">     *            发送请求的URL</span><br><span class=\"line\">     * @param param</span><br><span class=\"line\">     *            请求参数，请求参数应该是 name1&#x3D;value1&amp;name2&#x3D;value2 的形式。</span><br><span class=\"line\">     * @return URL 所代表远程资源的响应结果</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    public static String sendGet(String url, String param) &#123;</span><br><span class=\"line\">        String result &#x3D; &quot;&quot;;</span><br><span class=\"line\">        BufferedReader in &#x3D; null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String urlNameString &#x3D; url + &quot;?&quot; + param;</span><br><span class=\"line\">            URL realUrl &#x3D; new URL(urlNameString);</span><br><span class=\"line\">            &#x2F;&#x2F; 打开和URL之间的连接</span><br><span class=\"line\">            URLConnection connection &#x3D; realUrl.openConnection();</span><br><span class=\"line\">            &#x2F;&#x2F; 设置通用的请求属性</span><br><span class=\"line\">            connection.setRequestProperty(&quot;accept&quot;, &quot;*&#x2F;*&quot;);</span><br><span class=\"line\">            connection.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class=\"line\">            connection.setRequestProperty(&quot;user-agent&quot;,</span><br><span class=\"line\">                    &quot;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; 建立实际的连接</span><br><span class=\"line\">            connection.connect();</span><br><span class=\"line\">            &#x2F;&#x2F; 获取所有响应头字段</span><br><span class=\"line\">            Map&lt;String, List&lt;String&gt;&gt; map &#x3D; connection.getHeaderFields();</span><br><span class=\"line\">            &#x2F;&#x2F; 遍历所有的响应头字段</span><br><span class=\"line\">            for (String key : map.keySet()) &#123;</span><br><span class=\"line\">                System.out.println(key + &quot;---&gt;&quot; + map.get(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#x2F;&#x2F; 定义 BufferedReader输入流来读取URL的响应</span><br><span class=\"line\">            in &#x3D; new BufferedReader(new InputStreamReader(</span><br><span class=\"line\">                    connection.getInputStream()));</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            while ((line &#x3D; in.readLine()) !&#x3D; null) &#123;</span><br><span class=\"line\">                result +&#x3D; line;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(&quot;发送GET请求出现异常！&quot; + e);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用finally块来关闭输入流</span><br><span class=\"line\">        finally &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                if (in !&#x3D; null) &#123;</span><br><span class=\"line\">                    in.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; catch (Exception e2) &#123;</span><br><span class=\"line\">                e2.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 向指定 URL 发送POST方法的请求</span><br><span class=\"line\">     * </span><br><span class=\"line\">     * @param url</span><br><span class=\"line\">     *            发送请求的 URL</span><br><span class=\"line\">     * @param param</span><br><span class=\"line\">     *            请求参数，请求参数应该是 name1&#x3D;value1&amp;name2&#x3D;value2 的形式。</span><br><span class=\"line\">     * @return 所代表远程资源的响应结果</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    public static String sendPost(String url, String param) &#123;</span><br><span class=\"line\">        PrintWriter out &#x3D; null;</span><br><span class=\"line\">        BufferedReader in &#x3D; null;</span><br><span class=\"line\">        String result &#x3D; &quot;&quot;;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            URL realUrl &#x3D; new URL(url);</span><br><span class=\"line\">            &#x2F;&#x2F; 打开和URL之间的连接</span><br><span class=\"line\">            URLConnection conn &#x3D; realUrl.openConnection();</span><br><span class=\"line\">            &#x2F;&#x2F; 设置通用的请求属性</span><br><span class=\"line\">            conn.setRequestProperty(&quot;accept&quot;, &quot;*&#x2F;*&quot;);</span><br><span class=\"line\">            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class=\"line\">            conn.setRequestProperty(&quot;user-agent&quot;,</span><br><span class=\"line\">                    &quot;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; 发送POST请求必须设置如下两行</span><br><span class=\"line\">            conn.setDoOutput(true);</span><br><span class=\"line\">            conn.setDoInput(true);</span><br><span class=\"line\">            &#x2F;&#x2F; 获取URLConnection对象对应的输出流</span><br><span class=\"line\">            out &#x3D; new PrintWriter(conn.getOutputStream());</span><br><span class=\"line\">            &#x2F;&#x2F; 发送请求参数</span><br><span class=\"line\">            out.print(param);</span><br><span class=\"line\">            &#x2F;&#x2F; flush输出流的缓冲</span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">            &#x2F;&#x2F; 定义BufferedReader输入流来读取URL的响应</span><br><span class=\"line\">            in &#x3D; new BufferedReader(</span><br><span class=\"line\">                    new InputStreamReader(conn.getInputStream()));</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            while ((line &#x3D; in.readLine()) !&#x3D; null) &#123;</span><br><span class=\"line\">                result +&#x3D; line;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(&quot;发送 POST 请求出现异常！&quot;+e);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F;使用finally块来关闭输出流、输入流</span><br><span class=\"line\">        finally&#123;</span><br><span class=\"line\">            try&#123;</span><br><span class=\"line\">                if(out!&#x3D;null)&#123;</span><br><span class=\"line\">                    out.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(in!&#x3D;null)&#123;</span><br><span class=\"line\">                    in.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            catch(IOException ex)&#123;</span><br><span class=\"line\">                ex.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;发送 GET 请求</span><br><span class=\"line\">        String s&#x3D;HttpRequest.sendGet(&quot;http:&#x2F;&#x2F;localhost:6144&#x2F;Home&#x2F;RequestString&quot;, &quot;key&#x3D;123&amp;v&#x3D;456&quot;);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F;发送 POST 请求</span><br><span class=\"line\">        String sr&#x3D;HttpRequest.sendPost(&quot;http:&#x2F;&#x2F;localhost:6144&#x2F;Home&#x2F;RequestPostString&quot;, &quot;key&#x3D;123&amp;v&#x3D;456&quot;);</span><br><span class=\"line\">        System.out.println(sr);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package wzh.Http;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.BufferedReader;</span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.io.InputStreamReader;</span><br><span class=\"line\">import java.io.PrintWriter;</span><br><span class=\"line\">import java.net.URL;</span><br><span class=\"line\">import java.net.URLConnection;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\">public class HttpRequest &#123;</span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 向指定URL发送GET方法的请求</span><br><span class=\"line\">     * </span><br><span class=\"line\">     * @param url</span><br><span class=\"line\">     *            发送请求的URL</span><br><span class=\"line\">     * @param param</span><br><span class=\"line\">     *            请求参数，请求参数应该是 name1&#x3D;value1&amp;name2&#x3D;value2 的形式。</span><br><span class=\"line\">     * @return URL 所代表远程资源的响应结果</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    public static String sendGet(String url, String param) &#123;</span><br><span class=\"line\">        String result &#x3D; &quot;&quot;;</span><br><span class=\"line\">        BufferedReader in &#x3D; null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String urlNameString &#x3D; url + &quot;?&quot; + param;</span><br><span class=\"line\">            URL realUrl &#x3D; new URL(urlNameString);</span><br><span class=\"line\">            &#x2F;&#x2F; 打开和URL之间的连接</span><br><span class=\"line\">            URLConnection connection &#x3D; realUrl.openConnection();</span><br><span class=\"line\">            &#x2F;&#x2F; 设置通用的请求属性</span><br><span class=\"line\">            connection.setRequestProperty(&quot;accept&quot;, &quot;*&#x2F;*&quot;);</span><br><span class=\"line\">            connection.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class=\"line\">            connection.setRequestProperty(&quot;user-agent&quot;,</span><br><span class=\"line\">                    &quot;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; 建立实际的连接</span><br><span class=\"line\">            connection.connect();</span><br><span class=\"line\">            &#x2F;&#x2F; 获取所有响应头字段</span><br><span class=\"line\">            Map&lt;String, List&lt;String&gt;&gt; map &#x3D; connection.getHeaderFields();</span><br><span class=\"line\">            &#x2F;&#x2F; 遍历所有的响应头字段</span><br><span class=\"line\">            for (String key : map.keySet()) &#123;</span><br><span class=\"line\">                System.out.println(key + &quot;---&gt;&quot; + map.get(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#x2F;&#x2F; 定义 BufferedReader输入流来读取URL的响应</span><br><span class=\"line\">            in &#x3D; new BufferedReader(new InputStreamReader(</span><br><span class=\"line\">                    connection.getInputStream()));</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            while ((line &#x3D; in.readLine()) !&#x3D; null) &#123;</span><br><span class=\"line\">                result +&#x3D; line;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(&quot;发送GET请求出现异常！&quot; + e);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F; 使用finally块来关闭输入流</span><br><span class=\"line\">        finally &#123;</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                if (in !&#x3D; null) &#123;</span><br><span class=\"line\">                    in.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; catch (Exception e2) &#123;</span><br><span class=\"line\">                e2.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;**</span><br><span class=\"line\">     * 向指定 URL 发送POST方法的请求</span><br><span class=\"line\">     * </span><br><span class=\"line\">     * @param url</span><br><span class=\"line\">     *            发送请求的 URL</span><br><span class=\"line\">     * @param param</span><br><span class=\"line\">     *            请求参数，请求参数应该是 name1&#x3D;value1&amp;name2&#x3D;value2 的形式。</span><br><span class=\"line\">     * @return 所代表远程资源的响应结果</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    public static String sendPost(String url, String param) &#123;</span><br><span class=\"line\">        PrintWriter out &#x3D; null;</span><br><span class=\"line\">        BufferedReader in &#x3D; null;</span><br><span class=\"line\">        String result &#x3D; &quot;&quot;;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            URL realUrl &#x3D; new URL(url);</span><br><span class=\"line\">            &#x2F;&#x2F; 打开和URL之间的连接</span><br><span class=\"line\">            URLConnection conn &#x3D; realUrl.openConnection();</span><br><span class=\"line\">            &#x2F;&#x2F; 设置通用的请求属性</span><br><span class=\"line\">            conn.setRequestProperty(&quot;accept&quot;, &quot;*&#x2F;*&quot;);</span><br><span class=\"line\">            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class=\"line\">            conn.setRequestProperty(&quot;user-agent&quot;,</span><br><span class=\"line\">                    &quot;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; 发送POST请求必须设置如下两行</span><br><span class=\"line\">            conn.setDoOutput(true);</span><br><span class=\"line\">            conn.setDoInput(true);</span><br><span class=\"line\">            &#x2F;&#x2F; 获取URLConnection对象对应的输出流</span><br><span class=\"line\">            out &#x3D; new PrintWriter(conn.getOutputStream());</span><br><span class=\"line\">            &#x2F;&#x2F; 发送请求参数</span><br><span class=\"line\">            out.print(param);</span><br><span class=\"line\">            &#x2F;&#x2F; flush输出流的缓冲</span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">            &#x2F;&#x2F; 定义BufferedReader输入流来读取URL的响应</span><br><span class=\"line\">            in &#x3D; new BufferedReader(</span><br><span class=\"line\">                    new InputStreamReader(conn.getInputStream()));</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            while ((line &#x3D; in.readLine()) !&#x3D; null) &#123;</span><br><span class=\"line\">                result +&#x3D; line;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(&quot;发送 POST 请求出现异常！&quot;+e);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F;使用finally块来关闭输出流、输入流</span><br><span class=\"line\">        finally&#123;</span><br><span class=\"line\">            try&#123;</span><br><span class=\"line\">                if(out!&#x3D;null)&#123;</span><br><span class=\"line\">                    out.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if(in!&#x3D;null)&#123;</span><br><span class=\"line\">                    in.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            catch(IOException ex)&#123;</span><br><span class=\"line\">                ex.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;发送 GET 请求</span><br><span class=\"line\">        String s&#x3D;HttpRequest.sendGet(&quot;http:&#x2F;&#x2F;localhost:6144&#x2F;Home&#x2F;RequestString&quot;, &quot;key&#x3D;123&amp;v&#x3D;456&quot;);</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#x2F;&#x2F;发送 POST 请求</span><br><span class=\"line\">        String sr&#x3D;HttpRequest.sendPost(&quot;http:&#x2F;&#x2F;localhost:6144&#x2F;Home&#x2F;RequestPostString&quot;, &quot;key&#x3D;123&amp;v&#x3D;456&quot;);</span><br><span class=\"line\">        System.out.println(sr);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"PHP security function","date":"2015-03-22T16:00:00.000Z","description":"PHP security function","_content":"\n**mysql_real_escape_string( string sqlQuery )**\n\n转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集。一个非常有用的函数，可以有效地避免 SQL 注入。\n\n以下字符会被转换：\n\n\\x00，\\n，\\r，\\，’，”，\\x1a\n\n在执行sql语句之前，对要将执行的sql query 使用该函数处理，会将一些危 险扼杀在摇篮中。\n\n但是现在一般在较为成熟的项目中，一般比较推荐使用类似 PDO 这样的数据库持久层来处理所有的数据库操作。他们代表着更为先进的数据库操作处理技术，在安全性，数据读写的速度上逗比那些古老的 mysql_* api 强大了不少。\n\n**addslashes()**\n\n  在将一些数据插入到数据库中时，这个函数会非常有用，它可以在单引号前加上反斜杠，使得数据在插入时不会出现错误。但是它的使用与php.ini 中的一项设置有关系 — magic_quotes_gpc\n\n  1. 对于PHP magic_quotes_gpc=on的情况， 我们可以不对输入和输出数据库的字符串数据作addslashes()和stripslashes()的操作,数据也会正常显示。\n\n  如果此时你对输入的数据作了addslashes()处理，那么在输出的时候就必须使用stripslashes()去掉多余的反斜杠。\n\n  2. 对于PHP magic_quotes_gpc=off 的情况\n\n  必须使用addslashes()对输入数据进行处理，但并不需要使用stripslashes()格式化输出，因为addslashes()并未将反斜杠一起写入数据库，只是帮助mysql完成了sql语句的执行。\n\n  【stripslashes() ：删除由 addslashes() 函数添加的反斜杠。】\n  \n\n**htmlentities()**\n\n  一个非常有用的用来处理输出的函数。它用来将一些可能导致XXS攻击的字符转化为html实体，这些字符在浏览器显示的时候是正常的，但是当你查看它的源代码时，实际上这些特殊字符必不会是他显示的那样，例如\n\n  输出：\n\n```\n  John & ‘Adams’\n```\n  源码：\n\n```\n  John&nbsp;&amp;&nbsp;'Adams';\n```\n  输出：\n\n```\n  <>\n```\n  源码：\n\n```\n  &lt;&gt;gt;\n```\n\n  编码这些符号，有效地避免了XSS 攻击。\n  \n\n**htmlspecialchars()**\n\n和上面的函数是一样的，但是它更常用一些，因为 htmlentities() 是将所有的有在html 标准中定义了的字符转换成他们对应的html实体，这样会是你的输出缺乏易读性（html 实体列表 http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用 htmlspecialchars() 只是将一些 预定义的字符(就是会导致出现问题的)转换为html实体。例如：\n\n```\n  & （和号） 成为 &\n  ” （双引号） 成为 ”\n  ‘ （单引号） 成为 ‘\n  < （小于） 成为 <\n  > （大于） 成为 >\n```\n\n  所以，在一些项目中，我还是常常使用 htmlspecialchars() 来处理html 的输出的。他在安全这一方面做得更具体一些。\n\n  strip_tags(): 一般在输出时使用，将HTML、XML 以及 PHP 的标签剥去。\n\n  函数原型： strip_tags(string,allow)\n\n  String 代表输入的字符串，allow 代表 不删除的标签，你可以通过 allow 来自定义过需要滤掉的标签\n  \n\n**md5()**\n\n  一个将字符串转换为一个32位的哈希值的函数（不能逆向解密），任何一个字符串都能通过这个函数获得一个唯一的32位字符串。但是，现在使用这个函数时，需要注意有一些数据库记录了大量的md5 值，通过暴力枚举的方式来破解你的密码，所以在使用的时候，你可以先将你的原字符串加一层密，然后再使用md5()哈希，会获得更好的效果。\n\n**sha1()**\n\n  和md5() 和相似的一个函数，但是他使用不同的算法生成一个 40个字符的字符串。可以在项目中考虑使用\n\n**intval()**\n\n  也许你认为这个函数不是一个 security function。但是它在某些情况下可以很好地保护你的code。对从用户收集到的\n","source":"_posts/PHP-security-function.md","raw":"---\nlayout: post\ntitle: \"PHP security function\"\ndate:   2015-03-23\ndescription: PHP security function\ncategories: PHP\ntags: php\n---\n\n**mysql_real_escape_string( string sqlQuery )**\n\n转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集。一个非常有用的函数，可以有效地避免 SQL 注入。\n\n以下字符会被转换：\n\n\\x00，\\n，\\r，\\，’，”，\\x1a\n\n在执行sql语句之前，对要将执行的sql query 使用该函数处理，会将一些危 险扼杀在摇篮中。\n\n但是现在一般在较为成熟的项目中，一般比较推荐使用类似 PDO 这样的数据库持久层来处理所有的数据库操作。他们代表着更为先进的数据库操作处理技术，在安全性，数据读写的速度上逗比那些古老的 mysql_* api 强大了不少。\n\n**addslashes()**\n\n  在将一些数据插入到数据库中时，这个函数会非常有用，它可以在单引号前加上反斜杠，使得数据在插入时不会出现错误。但是它的使用与php.ini 中的一项设置有关系 — magic_quotes_gpc\n\n  1. 对于PHP magic_quotes_gpc=on的情况， 我们可以不对输入和输出数据库的字符串数据作addslashes()和stripslashes()的操作,数据也会正常显示。\n\n  如果此时你对输入的数据作了addslashes()处理，那么在输出的时候就必须使用stripslashes()去掉多余的反斜杠。\n\n  2. 对于PHP magic_quotes_gpc=off 的情况\n\n  必须使用addslashes()对输入数据进行处理，但并不需要使用stripslashes()格式化输出，因为addslashes()并未将反斜杠一起写入数据库，只是帮助mysql完成了sql语句的执行。\n\n  【stripslashes() ：删除由 addslashes() 函数添加的反斜杠。】\n  \n\n**htmlentities()**\n\n  一个非常有用的用来处理输出的函数。它用来将一些可能导致XXS攻击的字符转化为html实体，这些字符在浏览器显示的时候是正常的，但是当你查看它的源代码时，实际上这些特殊字符必不会是他显示的那样，例如\n\n  输出：\n\n```\n  John & ‘Adams’\n```\n  源码：\n\n```\n  John&nbsp;&amp;&nbsp;'Adams';\n```\n  输出：\n\n```\n  <>\n```\n  源码：\n\n```\n  &lt;&gt;gt;\n```\n\n  编码这些符号，有效地避免了XSS 攻击。\n  \n\n**htmlspecialchars()**\n\n和上面的函数是一样的，但是它更常用一些，因为 htmlentities() 是将所有的有在html 标准中定义了的字符转换成他们对应的html实体，这样会是你的输出缺乏易读性（html 实体列表 http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用 htmlspecialchars() 只是将一些 预定义的字符(就是会导致出现问题的)转换为html实体。例如：\n\n```\n  & （和号） 成为 &\n  ” （双引号） 成为 ”\n  ‘ （单引号） 成为 ‘\n  < （小于） 成为 <\n  > （大于） 成为 >\n```\n\n  所以，在一些项目中，我还是常常使用 htmlspecialchars() 来处理html 的输出的。他在安全这一方面做得更具体一些。\n\n  strip_tags(): 一般在输出时使用，将HTML、XML 以及 PHP 的标签剥去。\n\n  函数原型： strip_tags(string,allow)\n\n  String 代表输入的字符串，allow 代表 不删除的标签，你可以通过 allow 来自定义过需要滤掉的标签\n  \n\n**md5()**\n\n  一个将字符串转换为一个32位的哈希值的函数（不能逆向解密），任何一个字符串都能通过这个函数获得一个唯一的32位字符串。但是，现在使用这个函数时，需要注意有一些数据库记录了大量的md5 值，通过暴力枚举的方式来破解你的密码，所以在使用的时候，你可以先将你的原字符串加一层密，然后再使用md5()哈希，会获得更好的效果。\n\n**sha1()**\n\n  和md5() 和相似的一个函数，但是他使用不同的算法生成一个 40个字符的字符串。可以在项目中考虑使用\n\n**intval()**\n\n  也许你认为这个函数不是一个 security function。但是它在某些情况下可以很好地保护你的code。对从用户收集到的\n","slug":"PHP-security-function","published":1,"updated":"2020-06-14T15:57:16.320Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11m000rmp84ewndbx0v","content":"<p><strong>mysql_real_escape_string( string sqlQuery )</strong></p>\n<p>转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集。一个非常有用的函数，可以有效地避免 SQL 注入。</p>\n<p>以下字符会被转换：</p>\n<p>\\x00，\\n，\\r，\\，’，”，\\x1a</p>\n<p>在执行sql语句之前，对要将执行的sql query 使用该函数处理，会将一些危 险扼杀在摇篮中。</p>\n<p>但是现在一般在较为成熟的项目中，一般比较推荐使用类似 PDO 这样的数据库持久层来处理所有的数据库操作。他们代表着更为先进的数据库操作处理技术，在安全性，数据读写的速度上逗比那些古老的 mysql_* api 强大了不少。</p>\n<p><strong>addslashes()</strong></p>\n<p>  在将一些数据插入到数据库中时，这个函数会非常有用，它可以在单引号前加上反斜杠，使得数据在插入时不会出现错误。但是它的使用与php.ini 中的一项设置有关系 — magic_quotes_gpc</p>\n<ol>\n<li><p>对于PHP magic_quotes_gpc=on的情况， 我们可以不对输入和输出数据库的字符串数据作addslashes()和stripslashes()的操作,数据也会正常显示。</p>\n<p>如果此时你对输入的数据作了addslashes()处理，那么在输出的时候就必须使用stripslashes()去掉多余的反斜杠。</p>\n</li>\n<li><p>对于PHP magic_quotes_gpc=off 的情况</p>\n<p>必须使用addslashes()对输入数据进行处理，但并不需要使用stripslashes()格式化输出，因为addslashes()并未将反斜杠一起写入数据库，只是帮助mysql完成了sql语句的执行。</p>\n<p>【stripslashes() ：删除由 addslashes() 函数添加的反斜杠。】</p>\n</li>\n</ol>\n<p><strong>htmlentities()</strong></p>\n<p>  一个非常有用的用来处理输出的函数。它用来将一些可能导致XXS攻击的字符转化为html实体，这些字符在浏览器显示的时候是正常的，但是当你查看它的源代码时，实际上这些特殊字符必不会是他显示的那样，例如</p>\n<p>  输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">John &amp; ‘Adams’</span><br></pre></td></tr></table></figure>\n<p>  源码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">John&amp;nbsp;&amp;&amp;nbsp;&#39;Adams&#39;;</span><br></pre></td></tr></table></figure>\n<p>  输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&gt;</span><br></pre></td></tr></table></figure>\n<p>  源码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&gt;gt;</span><br></pre></td></tr></table></figure>\n\n<p>  编码这些符号，有效地避免了XSS 攻击。</p>\n<p><strong>htmlspecialchars()</strong></p>\n<p>和上面的函数是一样的，但是它更常用一些，因为 htmlentities() 是将所有的有在html 标准中定义了的字符转换成他们对应的html实体，这样会是你的输出缺乏易读性（html 实体列表 <a href=\"http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用</a> htmlspecialchars() 只是将一些 预定义的字符(就是会导致出现问题的)转换为html实体。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp; （和号） 成为 &amp;</span><br><span class=\"line\">” （双引号） 成为 ”</span><br><span class=\"line\">‘ （单引号） 成为 ‘</span><br><span class=\"line\">&lt; （小于） 成为 &lt;</span><br><span class=\"line\">&gt; （大于） 成为 &gt;</span><br></pre></td></tr></table></figure>\n\n<p>  所以，在一些项目中，我还是常常使用 htmlspecialchars() 来处理html 的输出的。他在安全这一方面做得更具体一些。</p>\n<p>  strip_tags(): 一般在输出时使用，将HTML、XML 以及 PHP 的标签剥去。</p>\n<p>  函数原型： strip_tags(string,allow)</p>\n<p>  String 代表输入的字符串，allow 代表 不删除的标签，你可以通过 allow 来自定义过需要滤掉的标签</p>\n<p><strong>md5()</strong></p>\n<p>  一个将字符串转换为一个32位的哈希值的函数（不能逆向解密），任何一个字符串都能通过这个函数获得一个唯一的32位字符串。但是，现在使用这个函数时，需要注意有一些数据库记录了大量的md5 值，通过暴力枚举的方式来破解你的密码，所以在使用的时候，你可以先将你的原字符串加一层密，然后再使用md5()哈希，会获得更好的效果。</p>\n<p><strong>sha1()</strong></p>\n<p>  和md5() 和相似的一个函数，但是他使用不同的算法生成一个 40个字符的字符串。可以在项目中考虑使用</p>\n<p><strong>intval()</strong></p>\n<p>  也许你认为这个函数不是一个 security function。但是它在某些情况下可以很好地保护你的code。对从用户收集到的</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>mysql_real_escape_string( string sqlQuery )</strong></p>\n<p>转义 SQL 语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集。一个非常有用的函数，可以有效地避免 SQL 注入。</p>\n<p>以下字符会被转换：</p>\n<p>\\x00，\\n，\\r，\\，’，”，\\x1a</p>\n<p>在执行sql语句之前，对要将执行的sql query 使用该函数处理，会将一些危 险扼杀在摇篮中。</p>\n<p>但是现在一般在较为成熟的项目中，一般比较推荐使用类似 PDO 这样的数据库持久层来处理所有的数据库操作。他们代表着更为先进的数据库操作处理技术，在安全性，数据读写的速度上逗比那些古老的 mysql_* api 强大了不少。</p>\n<p><strong>addslashes()</strong></p>\n<p>  在将一些数据插入到数据库中时，这个函数会非常有用，它可以在单引号前加上反斜杠，使得数据在插入时不会出现错误。但是它的使用与php.ini 中的一项设置有关系 — magic_quotes_gpc</p>\n<ol>\n<li><p>对于PHP magic_quotes_gpc=on的情况， 我们可以不对输入和输出数据库的字符串数据作addslashes()和stripslashes()的操作,数据也会正常显示。</p>\n<p>如果此时你对输入的数据作了addslashes()处理，那么在输出的时候就必须使用stripslashes()去掉多余的反斜杠。</p>\n</li>\n<li><p>对于PHP magic_quotes_gpc=off 的情况</p>\n<p>必须使用addslashes()对输入数据进行处理，但并不需要使用stripslashes()格式化输出，因为addslashes()并未将反斜杠一起写入数据库，只是帮助mysql完成了sql语句的执行。</p>\n<p>【stripslashes() ：删除由 addslashes() 函数添加的反斜杠。】</p>\n</li>\n</ol>\n<p><strong>htmlentities()</strong></p>\n<p>  一个非常有用的用来处理输出的函数。它用来将一些可能导致XXS攻击的字符转化为html实体，这些字符在浏览器显示的时候是正常的，但是当你查看它的源代码时，实际上这些特殊字符必不会是他显示的那样，例如</p>\n<p>  输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">John &amp; ‘Adams’</span><br></pre></td></tr></table></figure>\n<p>  源码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">John&amp;nbsp;&amp;&amp;nbsp;&#39;Adams&#39;;</span><br></pre></td></tr></table></figure>\n<p>  输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&gt;</span><br></pre></td></tr></table></figure>\n<p>  源码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&gt;gt;</span><br></pre></td></tr></table></figure>\n\n<p>  编码这些符号，有效地避免了XSS 攻击。</p>\n<p><strong>htmlspecialchars()</strong></p>\n<p>和上面的函数是一样的，但是它更常用一些，因为 htmlentities() 是将所有的有在html 标准中定义了的字符转换成他们对应的html实体，这样会是你的输出缺乏易读性（html 实体列表 <a href=\"http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tags/html_ref_entities.html）。所以呢，使用</a> htmlspecialchars() 只是将一些 预定义的字符(就是会导致出现问题的)转换为html实体。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp; （和号） 成为 &amp;</span><br><span class=\"line\">” （双引号） 成为 ”</span><br><span class=\"line\">‘ （单引号） 成为 ‘</span><br><span class=\"line\">&lt; （小于） 成为 &lt;</span><br><span class=\"line\">&gt; （大于） 成为 &gt;</span><br></pre></td></tr></table></figure>\n\n<p>  所以，在一些项目中，我还是常常使用 htmlspecialchars() 来处理html 的输出的。他在安全这一方面做得更具体一些。</p>\n<p>  strip_tags(): 一般在输出时使用，将HTML、XML 以及 PHP 的标签剥去。</p>\n<p>  函数原型： strip_tags(string,allow)</p>\n<p>  String 代表输入的字符串，allow 代表 不删除的标签，你可以通过 allow 来自定义过需要滤掉的标签</p>\n<p><strong>md5()</strong></p>\n<p>  一个将字符串转换为一个32位的哈希值的函数（不能逆向解密），任何一个字符串都能通过这个函数获得一个唯一的32位字符串。但是，现在使用这个函数时，需要注意有一些数据库记录了大量的md5 值，通过暴力枚举的方式来破解你的密码，所以在使用的时候，你可以先将你的原字符串加一层密，然后再使用md5()哈希，会获得更好的效果。</p>\n<p><strong>sha1()</strong></p>\n<p>  和md5() 和相似的一个函数，但是他使用不同的算法生成一个 40个字符的字符串。可以在项目中考虑使用</p>\n<p><strong>intval()</strong></p>\n<p>  也许你认为这个函数不是一个 security function。但是它在某些情况下可以很好地保护你的code。对从用户收集到的</p>\n"},{"layout":"post","title":"RDD编程","date":"2016-11-22T16:00:00.000Z","description":"RDD编程","_content":"\nRDD(Resilient Distributed Dataset弹性分布式数据集)其实就是分布式的元素集合。用户可以使用两种方式创建RDD：读取一个外部数据集，或在驱动器程序里分发驱动器程序中的对象集合（list和set）。\n\n```\n//读取一个外部数据集\nvar lines = sc.textFile(\"/path/to/README.md\")\n//在驱动器程序里分发驱动器程序中的对象集合\nvar lines = sc.parallelize(List(\"pandas\", \"dogs\"))\n```\n\n创建出来后，RDD支持两种类型的操作：转化操作（transformation）和行动操作（action）。转化操作会有一个RDD生成一个新的RDD。行动操作会对RDD计算出一个结果，并把结果返回到驱动器程序中，或者把结果存储到外部存储系统中（如HDFS）\n\n### 常见的转化操作\n**示例数据{1，2，3，3}**\n\n- map\n\n> 目的：将函数应用于RDD中的每个元素, 将返回值构成新的RDD<br />\n> 示例：rdd.map(x=>x+1)<br />\n> 结果：{2,3,4,4}\n\n- flatMap\n\n> 目的：将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词<br />\n> 示例：rdd.flatMap(x => x.to(3))<br />\n> 结果：{1,2,3,2,3,3}\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|map()|将函数应用于RDD中的每个元素, 将返回值构成新的RDD|rdd.map(x=>x+1)|{2,3,4,4}||\n|flatMap()|将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词|rdd.flatMap(x => x.to(3))|{1,2,3,2,3,3}||\n|filter()|返回一个由通过传给filter()的函数的元素组成的RDD|rdd.filter(x => x!=1)|{2,3,3}||\n|distinct()|去重|rdd.distinct()|{1,2,3}|开销很大，因为需要将所有数据通过网络进行混洗|\n|sample(withReplacement, fraction, [seed])|对RDD采样，以及是否替换|rdd.sample(false, 0.5)|非确定||\n\n**示例数据{1,2,3}{3,4,5}**\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|union()|生成一个包含两个RDD中所有元素的RDD|rdd.union(other)|{1,2,3,3,4,5}||\n|intersection()|求两个RDD共同元素的RDD|rdd.intersection(other)|{3}|性能差，需要网络混洗数据来发现共同元素|\n|subtract()|移除一个RDD中的内容|rdd.subtract(other)|{1,2}|需要数据混洗|\n|cartesian()|与另一个RDD的笛卡尔积|rdd.cartesian(other)|{ {1,3},{1,4},...,{3,5} }|求大规模RDD开销巨大|\n\n### 常见的行为操作\n**示例数据{1,2,3,3}**\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|collect()|返回RDD中的所有元素|rdd.collect()|{1,2,3,3}||\n|count()|RDD中的元素个数|rdd.count()|4||\n|countByValue()|各元素在RDD中出现的次数|rdd.countByValue()|{(1,1),(2,1),(3,2)}||\n|take(num)|从RDD中返回num个元素|rdd.take(2)|{1,2}||\n|top(num)|从RDD中返回最前面的num个元素|rdd.top(2)|{3,3}||\n|takeOrdered(num)(ordering)|从RDD中按照提供的顺序返回最前面的num个元素|rdd.takeOrdered(2)(myOrdering)|(3,3)||\n|takeSample(withReplacement, num, [seed])|从RDD中返回任意一些元素|rdd.takeSample(false, 1)|||\n|reduce(func)|并行整合RDD中所有数据(例如sum)|rdd.reduce((x,y)=>x+y)|9||\n|fold(zero)(func)|和reduce一样，但需要提供初始值|rdd.fold(0)((x,y)=>x+y)|9||\n|**aggregate(zeroValue)(seqOp, combOp)**|和reduce相似，但通常不返回同类型的函数|rdd.aggregate(0,0)((x,y)=>(x.\\_1+y,x.\\_2+1),(x,y)=>(x.\\_1+y.\\_1,x.\\_2+y.\\_2))|{9,4}||\n|foreach(func)|对RDD中的每个元素使用给定的函数|rdd.foreach(func)|||\n\n### 持久化\n```\nval result = input.map(x => x * x) \nresult.persist(StorageLevel.DISK_ ONLY) \nprintln(result.count()) \nprintln(result.collect().mkString(\",\"))\n```\n|级别|使用的空间|CPU时间|是否在内存中|是否在硬盘中|备注|\n|---|---|---|---|---|---|\n|MEMORY_ONLY|高|低|是|否||\n|MEMORY_ONLY_SER|低|高|是|否||\n|MEMORY_AND_DISK|高|中等|部分|部分|如果数据在内存中放不下，<br />则溢写到磁盘上|\n|MEMORY_AND_DISK_SER|低|高|部分|部分|如果数据在内存中放不下，<br />则溢写到磁盘上。在内存中存放序列化后的数据|\n|DISK_ONLY|低|高|否|是||\t","source":"_posts/RDD编程.md","raw":"---\nlayout: post\ntitle: \"RDD编程\"\ndate:   2016-11-23\ndescription: RDD编程\ncategories: Spark\ntags: spark\n---\n\nRDD(Resilient Distributed Dataset弹性分布式数据集)其实就是分布式的元素集合。用户可以使用两种方式创建RDD：读取一个外部数据集，或在驱动器程序里分发驱动器程序中的对象集合（list和set）。\n\n```\n//读取一个外部数据集\nvar lines = sc.textFile(\"/path/to/README.md\")\n//在驱动器程序里分发驱动器程序中的对象集合\nvar lines = sc.parallelize(List(\"pandas\", \"dogs\"))\n```\n\n创建出来后，RDD支持两种类型的操作：转化操作（transformation）和行动操作（action）。转化操作会有一个RDD生成一个新的RDD。行动操作会对RDD计算出一个结果，并把结果返回到驱动器程序中，或者把结果存储到外部存储系统中（如HDFS）\n\n### 常见的转化操作\n**示例数据{1，2，3，3}**\n\n- map\n\n> 目的：将函数应用于RDD中的每个元素, 将返回值构成新的RDD<br />\n> 示例：rdd.map(x=>x+1)<br />\n> 结果：{2,3,4,4}\n\n- flatMap\n\n> 目的：将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词<br />\n> 示例：rdd.flatMap(x => x.to(3))<br />\n> 结果：{1,2,3,2,3,3}\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|map()|将函数应用于RDD中的每个元素, 将返回值构成新的RDD|rdd.map(x=>x+1)|{2,3,4,4}||\n|flatMap()|将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词|rdd.flatMap(x => x.to(3))|{1,2,3,2,3,3}||\n|filter()|返回一个由通过传给filter()的函数的元素组成的RDD|rdd.filter(x => x!=1)|{2,3,3}||\n|distinct()|去重|rdd.distinct()|{1,2,3}|开销很大，因为需要将所有数据通过网络进行混洗|\n|sample(withReplacement, fraction, [seed])|对RDD采样，以及是否替换|rdd.sample(false, 0.5)|非确定||\n\n**示例数据{1,2,3}{3,4,5}**\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|union()|生成一个包含两个RDD中所有元素的RDD|rdd.union(other)|{1,2,3,3,4,5}||\n|intersection()|求两个RDD共同元素的RDD|rdd.intersection(other)|{3}|性能差，需要网络混洗数据来发现共同元素|\n|subtract()|移除一个RDD中的内容|rdd.subtract(other)|{1,2}|需要数据混洗|\n|cartesian()|与另一个RDD的笛卡尔积|rdd.cartesian(other)|{ {1,3},{1,4},...,{3,5} }|求大规模RDD开销巨大|\n\n### 常见的行为操作\n**示例数据{1,2,3,3}**\n\n|函数名|目的|示例|结果|备注|\n|---|---|---|---|---|\n|collect()|返回RDD中的所有元素|rdd.collect()|{1,2,3,3}||\n|count()|RDD中的元素个数|rdd.count()|4||\n|countByValue()|各元素在RDD中出现的次数|rdd.countByValue()|{(1,1),(2,1),(3,2)}||\n|take(num)|从RDD中返回num个元素|rdd.take(2)|{1,2}||\n|top(num)|从RDD中返回最前面的num个元素|rdd.top(2)|{3,3}||\n|takeOrdered(num)(ordering)|从RDD中按照提供的顺序返回最前面的num个元素|rdd.takeOrdered(2)(myOrdering)|(3,3)||\n|takeSample(withReplacement, num, [seed])|从RDD中返回任意一些元素|rdd.takeSample(false, 1)|||\n|reduce(func)|并行整合RDD中所有数据(例如sum)|rdd.reduce((x,y)=>x+y)|9||\n|fold(zero)(func)|和reduce一样，但需要提供初始值|rdd.fold(0)((x,y)=>x+y)|9||\n|**aggregate(zeroValue)(seqOp, combOp)**|和reduce相似，但通常不返回同类型的函数|rdd.aggregate(0,0)((x,y)=>(x.\\_1+y,x.\\_2+1),(x,y)=>(x.\\_1+y.\\_1,x.\\_2+y.\\_2))|{9,4}||\n|foreach(func)|对RDD中的每个元素使用给定的函数|rdd.foreach(func)|||\n\n### 持久化\n```\nval result = input.map(x => x * x) \nresult.persist(StorageLevel.DISK_ ONLY) \nprintln(result.count()) \nprintln(result.collect().mkString(\",\"))\n```\n|级别|使用的空间|CPU时间|是否在内存中|是否在硬盘中|备注|\n|---|---|---|---|---|---|\n|MEMORY_ONLY|高|低|是|否||\n|MEMORY_ONLY_SER|低|高|是|否||\n|MEMORY_AND_DISK|高|中等|部分|部分|如果数据在内存中放不下，<br />则溢写到磁盘上|\n|MEMORY_AND_DISK_SER|低|高|部分|部分|如果数据在内存中放不下，<br />则溢写到磁盘上。在内存中存放序列化后的数据|\n|DISK_ONLY|低|高|否|是||\t","slug":"RDD编程","published":1,"updated":"2020-06-14T15:57:16.313Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11o000vmp8476if6y45","content":"<p>RDD(Resilient Distributed Dataset弹性分布式数据集)其实就是分布式的元素集合。用户可以使用两种方式创建RDD：读取一个外部数据集，或在驱动器程序里分发驱动器程序中的对象集合（list和set）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;读取一个外部数据集</span><br><span class=\"line\">var lines &#x3D; sc.textFile(&quot;&#x2F;path&#x2F;to&#x2F;README.md&quot;)</span><br><span class=\"line\">&#x2F;&#x2F;在驱动器程序里分发驱动器程序中的对象集合</span><br><span class=\"line\">var lines &#x3D; sc.parallelize(List(&quot;pandas&quot;, &quot;dogs&quot;))</span><br></pre></td></tr></table></figure>\n\n<p>创建出来后，RDD支持两种类型的操作：转化操作（transformation）和行动操作（action）。转化操作会有一个RDD生成一个新的RDD。行动操作会对RDD计算出一个结果，并把结果返回到驱动器程序中，或者把结果存储到外部存储系统中（如HDFS）</p>\n<h3 id=\"常见的转化操作\"><a href=\"#常见的转化操作\" class=\"headerlink\" title=\"常见的转化操作\"></a>常见的转化操作</h3><p><strong>示例数据{1，2，3，3}</strong></p>\n<ul>\n<li>map</li>\n</ul>\n<blockquote>\n<p>目的：将函数应用于RDD中的每个元素, 将返回值构成新的RDD<br /><br>示例：rdd.map(x=&gt;x+1)<br /><br>结果：{2,3,4,4}</p>\n</blockquote>\n<ul>\n<li>flatMap</li>\n</ul>\n<blockquote>\n<p>目的：将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词<br /><br>示例：rdd.flatMap(x =&gt; x.to(3))<br /><br>结果：{1,2,3,2,3,3}</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>map()</td>\n<td>将函数应用于RDD中的每个元素, 将返回值构成新的RDD</td>\n<td>rdd.map(x=&gt;x+1)</td>\n<td>{2,3,4,4}</td>\n<td></td>\n</tr>\n<tr>\n<td>flatMap()</td>\n<td>将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词</td>\n<td>rdd.flatMap(x =&gt; x.to(3))</td>\n<td>{1,2,3,2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>filter()</td>\n<td>返回一个由通过传给filter()的函数的元素组成的RDD</td>\n<td>rdd.filter(x =&gt; x!=1)</td>\n<td>{2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>distinct()</td>\n<td>去重</td>\n<td>rdd.distinct()</td>\n<td>{1,2,3}</td>\n<td>开销很大，因为需要将所有数据通过网络进行混洗</td>\n</tr>\n<tr>\n<td>sample(withReplacement, fraction, [seed])</td>\n<td>对RDD采样，以及是否替换</td>\n<td>rdd.sample(false, 0.5)</td>\n<td>非确定</td>\n<td></td>\n</tr>\n</tbody></table>\n<p><strong>示例数据{1,2,3}{3,4,5}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>union()</td>\n<td>生成一个包含两个RDD中所有元素的RDD</td>\n<td>rdd.union(other)</td>\n<td>{1,2,3,3,4,5}</td>\n<td></td>\n</tr>\n<tr>\n<td>intersection()</td>\n<td>求两个RDD共同元素的RDD</td>\n<td>rdd.intersection(other)</td>\n<td>{3}</td>\n<td>性能差，需要网络混洗数据来发现共同元素</td>\n</tr>\n<tr>\n<td>subtract()</td>\n<td>移除一个RDD中的内容</td>\n<td>rdd.subtract(other)</td>\n<td>{1,2}</td>\n<td>需要数据混洗</td>\n</tr>\n<tr>\n<td>cartesian()</td>\n<td>与另一个RDD的笛卡尔积</td>\n<td>rdd.cartesian(other)</td>\n<td>{ {1,3},{1,4},…,{3,5} }</td>\n<td>求大规模RDD开销巨大</td>\n</tr>\n</tbody></table>\n<h3 id=\"常见的行为操作\"><a href=\"#常见的行为操作\" class=\"headerlink\" title=\"常见的行为操作\"></a>常见的行为操作</h3><p><strong>示例数据{1,2,3,3}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>collect()</td>\n<td>返回RDD中的所有元素</td>\n<td>rdd.collect()</td>\n<td>{1,2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>count()</td>\n<td>RDD中的元素个数</td>\n<td>rdd.count()</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>countByValue()</td>\n<td>各元素在RDD中出现的次数</td>\n<td>rdd.countByValue()</td>\n<td>{(1,1),(2,1),(3,2)}</td>\n<td></td>\n</tr>\n<tr>\n<td>take(num)</td>\n<td>从RDD中返回num个元素</td>\n<td>rdd.take(2)</td>\n<td>{1,2}</td>\n<td></td>\n</tr>\n<tr>\n<td>top(num)</td>\n<td>从RDD中返回最前面的num个元素</td>\n<td>rdd.top(2)</td>\n<td>{3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>takeOrdered(num)(ordering)</td>\n<td>从RDD中按照提供的顺序返回最前面的num个元素</td>\n<td>rdd.takeOrdered(2)(myOrdering)</td>\n<td>(3,3)</td>\n<td></td>\n</tr>\n<tr>\n<td>takeSample(withReplacement, num, [seed])</td>\n<td>从RDD中返回任意一些元素</td>\n<td>rdd.takeSample(false, 1)</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>reduce(func)</td>\n<td>并行整合RDD中所有数据(例如sum)</td>\n<td>rdd.reduce((x,y)=&gt;x+y)</td>\n<td>9</td>\n<td></td>\n</tr>\n<tr>\n<td>fold(zero)(func)</td>\n<td>和reduce一样，但需要提供初始值</td>\n<td>rdd.fold(0)((x,y)=&gt;x+y)</td>\n<td>9</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>aggregate(zeroValue)(seqOp, combOp)</strong></td>\n<td>和reduce相似，但通常不返回同类型的函数</td>\n<td>rdd.aggregate(0,0)((x,y)=&gt;(x._1+y,x._2+1),(x,y)=&gt;(x._1+y._1,x._2+y._2))</td>\n<td>{9,4}</td>\n<td></td>\n</tr>\n<tr>\n<td>foreach(func)</td>\n<td>对RDD中的每个元素使用给定的函数</td>\n<td>rdd.foreach(func)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"持久化\"><a href=\"#持久化\" class=\"headerlink\" title=\"持久化\"></a>持久化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val result &#x3D; input.map(x &#x3D;&gt; x * x) </span><br><span class=\"line\">result.persist(StorageLevel.DISK_ ONLY) </span><br><span class=\"line\">println(result.count()) </span><br><span class=\"line\">println(result.collect().mkString(&quot;,&quot;))</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>级别</th>\n<th>使用的空间</th>\n<th>CPU时间</th>\n<th>是否在内存中</th>\n<th>是否在硬盘中</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>MEMORY_ONLY</td>\n<td>高</td>\n<td>低</td>\n<td>是</td>\n<td>否</td>\n<td></td>\n</tr>\n<tr>\n<td>MEMORY_ONLY_SER</td>\n<td>低</td>\n<td>高</td>\n<td>是</td>\n<td>否</td>\n<td></td>\n</tr>\n<tr>\n<td>MEMORY_AND_DISK</td>\n<td>高</td>\n<td>中等</td>\n<td>部分</td>\n<td>部分</td>\n<td>如果数据在内存中放不下，<br />则溢写到磁盘上</td>\n</tr>\n<tr>\n<td>MEMORY_AND_DISK_SER</td>\n<td>低</td>\n<td>高</td>\n<td>部分</td>\n<td>部分</td>\n<td>如果数据在内存中放不下，<br />则溢写到磁盘上。在内存中存放序列化后的数据</td>\n</tr>\n<tr>\n<td>DISK_ONLY</td>\n<td>低</td>\n<td>高</td>\n<td>否</td>\n<td>是</td>\n<td></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<p>RDD(Resilient Distributed Dataset弹性分布式数据集)其实就是分布式的元素集合。用户可以使用两种方式创建RDD：读取一个外部数据集，或在驱动器程序里分发驱动器程序中的对象集合（list和set）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;读取一个外部数据集</span><br><span class=\"line\">var lines &#x3D; sc.textFile(&quot;&#x2F;path&#x2F;to&#x2F;README.md&quot;)</span><br><span class=\"line\">&#x2F;&#x2F;在驱动器程序里分发驱动器程序中的对象集合</span><br><span class=\"line\">var lines &#x3D; sc.parallelize(List(&quot;pandas&quot;, &quot;dogs&quot;))</span><br></pre></td></tr></table></figure>\n\n<p>创建出来后，RDD支持两种类型的操作：转化操作（transformation）和行动操作（action）。转化操作会有一个RDD生成一个新的RDD。行动操作会对RDD计算出一个结果，并把结果返回到驱动器程序中，或者把结果存储到外部存储系统中（如HDFS）</p>\n<h3 id=\"常见的转化操作\"><a href=\"#常见的转化操作\" class=\"headerlink\" title=\"常见的转化操作\"></a>常见的转化操作</h3><p><strong>示例数据{1，2，3，3}</strong></p>\n<ul>\n<li>map</li>\n</ul>\n<blockquote>\n<p>目的：将函数应用于RDD中的每个元素, 将返回值构成新的RDD<br /><br>示例：rdd.map(x=&gt;x+1)<br /><br>结果：{2,3,4,4}</p>\n</blockquote>\n<ul>\n<li>flatMap</li>\n</ul>\n<blockquote>\n<p>目的：将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词<br /><br>示例：rdd.flatMap(x =&gt; x.to(3))<br /><br>结果：{1,2,3,2,3,3}</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>map()</td>\n<td>将函数应用于RDD中的每个元素, 将返回值构成新的RDD</td>\n<td>rdd.map(x=&gt;x+1)</td>\n<td>{2,3,4,4}</td>\n<td></td>\n</tr>\n<tr>\n<td>flatMap()</td>\n<td>将函数应用于RDD中的每个元素, 将返回的迭代器的所有内容构成新的RDD。通常用来切分单词</td>\n<td>rdd.flatMap(x =&gt; x.to(3))</td>\n<td>{1,2,3,2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>filter()</td>\n<td>返回一个由通过传给filter()的函数的元素组成的RDD</td>\n<td>rdd.filter(x =&gt; x!=1)</td>\n<td>{2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>distinct()</td>\n<td>去重</td>\n<td>rdd.distinct()</td>\n<td>{1,2,3}</td>\n<td>开销很大，因为需要将所有数据通过网络进行混洗</td>\n</tr>\n<tr>\n<td>sample(withReplacement, fraction, [seed])</td>\n<td>对RDD采样，以及是否替换</td>\n<td>rdd.sample(false, 0.5)</td>\n<td>非确定</td>\n<td></td>\n</tr>\n</tbody></table>\n<p><strong>示例数据{1,2,3}{3,4,5}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>union()</td>\n<td>生成一个包含两个RDD中所有元素的RDD</td>\n<td>rdd.union(other)</td>\n<td>{1,2,3,3,4,5}</td>\n<td></td>\n</tr>\n<tr>\n<td>intersection()</td>\n<td>求两个RDD共同元素的RDD</td>\n<td>rdd.intersection(other)</td>\n<td>{3}</td>\n<td>性能差，需要网络混洗数据来发现共同元素</td>\n</tr>\n<tr>\n<td>subtract()</td>\n<td>移除一个RDD中的内容</td>\n<td>rdd.subtract(other)</td>\n<td>{1,2}</td>\n<td>需要数据混洗</td>\n</tr>\n<tr>\n<td>cartesian()</td>\n<td>与另一个RDD的笛卡尔积</td>\n<td>rdd.cartesian(other)</td>\n<td>{ {1,3},{1,4},…,{3,5} }</td>\n<td>求大规模RDD开销巨大</td>\n</tr>\n</tbody></table>\n<h3 id=\"常见的行为操作\"><a href=\"#常见的行为操作\" class=\"headerlink\" title=\"常见的行为操作\"></a>常见的行为操作</h3><p><strong>示例数据{1,2,3,3}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>collect()</td>\n<td>返回RDD中的所有元素</td>\n<td>rdd.collect()</td>\n<td>{1,2,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>count()</td>\n<td>RDD中的元素个数</td>\n<td>rdd.count()</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>countByValue()</td>\n<td>各元素在RDD中出现的次数</td>\n<td>rdd.countByValue()</td>\n<td>{(1,1),(2,1),(3,2)}</td>\n<td></td>\n</tr>\n<tr>\n<td>take(num)</td>\n<td>从RDD中返回num个元素</td>\n<td>rdd.take(2)</td>\n<td>{1,2}</td>\n<td></td>\n</tr>\n<tr>\n<td>top(num)</td>\n<td>从RDD中返回最前面的num个元素</td>\n<td>rdd.top(2)</td>\n<td>{3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>takeOrdered(num)(ordering)</td>\n<td>从RDD中按照提供的顺序返回最前面的num个元素</td>\n<td>rdd.takeOrdered(2)(myOrdering)</td>\n<td>(3,3)</td>\n<td></td>\n</tr>\n<tr>\n<td>takeSample(withReplacement, num, [seed])</td>\n<td>从RDD中返回任意一些元素</td>\n<td>rdd.takeSample(false, 1)</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>reduce(func)</td>\n<td>并行整合RDD中所有数据(例如sum)</td>\n<td>rdd.reduce((x,y)=&gt;x+y)</td>\n<td>9</td>\n<td></td>\n</tr>\n<tr>\n<td>fold(zero)(func)</td>\n<td>和reduce一样，但需要提供初始值</td>\n<td>rdd.fold(0)((x,y)=&gt;x+y)</td>\n<td>9</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>aggregate(zeroValue)(seqOp, combOp)</strong></td>\n<td>和reduce相似，但通常不返回同类型的函数</td>\n<td>rdd.aggregate(0,0)((x,y)=&gt;(x._1+y,x._2+1),(x,y)=&gt;(x._1+y._1,x._2+y._2))</td>\n<td>{9,4}</td>\n<td></td>\n</tr>\n<tr>\n<td>foreach(func)</td>\n<td>对RDD中的每个元素使用给定的函数</td>\n<td>rdd.foreach(func)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"持久化\"><a href=\"#持久化\" class=\"headerlink\" title=\"持久化\"></a>持久化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val result &#x3D; input.map(x &#x3D;&gt; x * x) </span><br><span class=\"line\">result.persist(StorageLevel.DISK_ ONLY) </span><br><span class=\"line\">println(result.count()) </span><br><span class=\"line\">println(result.collect().mkString(&quot;,&quot;))</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>级别</th>\n<th>使用的空间</th>\n<th>CPU时间</th>\n<th>是否在内存中</th>\n<th>是否在硬盘中</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>MEMORY_ONLY</td>\n<td>高</td>\n<td>低</td>\n<td>是</td>\n<td>否</td>\n<td></td>\n</tr>\n<tr>\n<td>MEMORY_ONLY_SER</td>\n<td>低</td>\n<td>高</td>\n<td>是</td>\n<td>否</td>\n<td></td>\n</tr>\n<tr>\n<td>MEMORY_AND_DISK</td>\n<td>高</td>\n<td>中等</td>\n<td>部分</td>\n<td>部分</td>\n<td>如果数据在内存中放不下，<br />则溢写到磁盘上</td>\n</tr>\n<tr>\n<td>MEMORY_AND_DISK_SER</td>\n<td>低</td>\n<td>高</td>\n<td>部分</td>\n<td>部分</td>\n<td>如果数据在内存中放不下，<br />则溢写到磁盘上。在内存中存放序列化后的数据</td>\n</tr>\n<tr>\n<td>DISK_ONLY</td>\n<td>低</td>\n<td>高</td>\n<td>否</td>\n<td>是</td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"layout":"post","title":"Redis安装补充","date":"2015-12-10T16:00:00.000Z","description":"Redis安装补充","_content":"\n前两天[知名博主](http://stenote.com)问我为什么要用源码安装Redis，我一下子蒙住了，为什么啊？我从来没有问过，好像就是看了一下以前写的blog，然后把脚本写到shell里就随便pull到代码中了。这两天回顾了一下当初看的那本书。才想起书中确实推荐源码安装，源码下还有很多东西，有redis默认配置模板redis.conf，还有一个utils文件夹，下面有很多脚本，其中有一个官方推荐的启动redis脚本（书中写的官方推荐，我又懒了没考证过）redis_init_script\n\n当我们设置好Redis的[配置](https://github.com/kiddlee/myutils/tree/master/linux/redis)，直接run一下命令\n\n```\n./redis_init_script start\n```\n\n这样我们不用在启动的时候考虑我的配置文件的问题\n\n感谢博主，你的Challenge使我在技术的道路上越走越远，尽情的Challenge我吧!!!\n","source":"_posts/Redis-Install-Comment.md","raw":"---\nlayout: post\ntitle: \"Redis安装补充\"\ndate:   2015-12-11\ndescription: Redis安装补充\ncategories:\n- DataBase\n- Redis\ntags: redis\n---\n\n前两天[知名博主](http://stenote.com)问我为什么要用源码安装Redis，我一下子蒙住了，为什么啊？我从来没有问过，好像就是看了一下以前写的blog，然后把脚本写到shell里就随便pull到代码中了。这两天回顾了一下当初看的那本书。才想起书中确实推荐源码安装，源码下还有很多东西，有redis默认配置模板redis.conf，还有一个utils文件夹，下面有很多脚本，其中有一个官方推荐的启动redis脚本（书中写的官方推荐，我又懒了没考证过）redis_init_script\n\n当我们设置好Redis的[配置](https://github.com/kiddlee/myutils/tree/master/linux/redis)，直接run一下命令\n\n```\n./redis_init_script start\n```\n\n这样我们不用在启动的时候考虑我的配置文件的问题\n\n感谢博主，你的Challenge使我在技术的道路上越走越远，尽情的Challenge我吧!!!\n","slug":"Redis-Install-Comment","published":1,"updated":"2020-06-14T15:57:16.321Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11p000wmp8454nwajrf","content":"<p>前两天<a href=\"http://stenote.com\" target=\"_blank\" rel=\"noopener\">知名博主</a>问我为什么要用源码安装Redis，我一下子蒙住了，为什么啊？我从来没有问过，好像就是看了一下以前写的blog，然后把脚本写到shell里就随便pull到代码中了。这两天回顾了一下当初看的那本书。才想起书中确实推荐源码安装，源码下还有很多东西，有redis默认配置模板redis.conf，还有一个utils文件夹，下面有很多脚本，其中有一个官方推荐的启动redis脚本（书中写的官方推荐，我又懒了没考证过）redis_init_script</p>\n<p>当我们设置好Redis的<a href=\"https://github.com/kiddlee/myutils/tree/master/linux/redis\" target=\"_blank\" rel=\"noopener\">配置</a>，直接run一下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;redis_init_script start</span><br></pre></td></tr></table></figure>\n\n<p>这样我们不用在启动的时候考虑我的配置文件的问题</p>\n<p>感谢博主，你的Challenge使我在技术的道路上越走越远，尽情的Challenge我吧!!!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前两天<a href=\"http://stenote.com\" target=\"_blank\" rel=\"noopener\">知名博主</a>问我为什么要用源码安装Redis，我一下子蒙住了，为什么啊？我从来没有问过，好像就是看了一下以前写的blog，然后把脚本写到shell里就随便pull到代码中了。这两天回顾了一下当初看的那本书。才想起书中确实推荐源码安装，源码下还有很多东西，有redis默认配置模板redis.conf，还有一个utils文件夹，下面有很多脚本，其中有一个官方推荐的启动redis脚本（书中写的官方推荐，我又懒了没考证过）redis_init_script</p>\n<p>当我们设置好Redis的<a href=\"https://github.com/kiddlee/myutils/tree/master/linux/redis\" target=\"_blank\" rel=\"noopener\">配置</a>，直接run一下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;redis_init_script start</span><br></pre></td></tr></table></figure>\n\n<p>这样我们不用在启动的时候考虑我的配置文件的问题</p>\n<p>感谢博主，你的Challenge使我在技术的道路上越走越远，尽情的Challenge我吧!!!</p>\n"},{"layout":"post","title":"Read & Write file with multiple request","date":"2015-03-23T16:00:00.000Z","description":"Read & Write file with multiple request","_content":"\n\nThese days, I got an issue. It was the file’s content would be emptied sometime. After checked code, we think the problem should happen when multiple request occur. Read and Write file were not in same lock. Actually we just add lock for write. So we change code as follow:\n\n             $filename = APP_PATH . \"filename\";\n             $fp = fopen($filename, 'c+');\n             $vistor_count;\n             if ($fp) {\n                  flock($fp, LOCK_EX);\n                  $vistor_count = intval(fread($fp, filesize($filename))) + 1;\n                  //ftruncate($fp, 0);\n                  rewind($fp);\n                  fwrite($fp, strval($vistor_count));\n                  fflush($fp);\n                  flock($fp, LOCK_UN);\n                  fclose($fp);\n             }\n","source":"_posts/Read-Write-file-with-multiple-request.md","raw":"---\nlayout: post\ntitle: \"Read & Write file with multiple request\"\ndate:   2015-03-24\ndescription: Read & Write file with multiple request\ncategories: PHP\ntags: php\n---\n\n\nThese days, I got an issue. It was the file’s content would be emptied sometime. After checked code, we think the problem should happen when multiple request occur. Read and Write file were not in same lock. Actually we just add lock for write. So we change code as follow:\n\n             $filename = APP_PATH . \"filename\";\n             $fp = fopen($filename, 'c+');\n             $vistor_count;\n             if ($fp) {\n                  flock($fp, LOCK_EX);\n                  $vistor_count = intval(fread($fp, filesize($filename))) + 1;\n                  //ftruncate($fp, 0);\n                  rewind($fp);\n                  fwrite($fp, strval($vistor_count));\n                  fflush($fp);\n                  flock($fp, LOCK_UN);\n                  fclose($fp);\n             }\n","slug":"Read-Write-file-with-multiple-request","published":1,"updated":"2020-06-14T15:57:16.311Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11q000xmp84c2ece29y","content":"<p>These days, I got an issue. It was the file’s content would be emptied sometime. After checked code, we think the problem should happen when multiple request occur. Read and Write file were not in same lock. Actually we just add lock for write. So we change code as follow:</p>\n<pre><code>$filename = APP_PATH . &quot;filename&quot;;\n$fp = fopen($filename, &apos;c+&apos;);\n$vistor_count;\nif ($fp) {\n     flock($fp, LOCK_EX);\n     $vistor_count = intval(fread($fp, filesize($filename))) + 1;\n     //ftruncate($fp, 0);\n     rewind($fp);\n     fwrite($fp, strval($vistor_count));\n     fflush($fp);\n     flock($fp, LOCK_UN);\n     fclose($fp);\n}</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>These days, I got an issue. It was the file’s content would be emptied sometime. After checked code, we think the problem should happen when multiple request occur. Read and Write file were not in same lock. Actually we just add lock for write. So we change code as follow:</p>\n<pre><code>$filename = APP_PATH . &quot;filename&quot;;\n$fp = fopen($filename, &apos;c+&apos;);\n$vistor_count;\nif ($fp) {\n     flock($fp, LOCK_EX);\n     $vistor_count = intval(fread($fp, filesize($filename))) + 1;\n     //ftruncate($fp, 0);\n     rewind($fp);\n     fwrite($fp, strval($vistor_count));\n     fflush($fp);\n     flock($fp, LOCK_UN);\n     fclose($fp);\n}</code></pre>"},{"layout":"post","title":"Redis自学 1","date":"2015-08-11T16:00:00.000Z","description":"Redis自学 1","_content":"\n## 安装\n```\nwget http://download.redis.io/redis-stable.tar.gz\ntar xzf redis-stable.tar.gz\ncd redis-stable\nmake\nmake install\n```\n\n* 编译后源代码目录的src文件夹中可以找到若干个可执行程序，make install命令将这些可执行程序复制到/usr/local/bin目录中\n* 可以使用make test命令测试Redis是否编译正确。但是在实践过程中遇到了缺少tcl8.5的情况，直接运行apt-get install tcl就可以。然后再执行make test.\n\n## 启动\n```\nredis-server [/path/to/redis.conf]\n```\n## 客户端\n```\n//查看链接是否正常\nredis-cli ping\n\n//链接\nredis-cli -h localhost -p 6379\n```","source":"_posts/Redis自学-1.md","raw":"---\nlayout: post\ntitle: \"Redis自学 1\"\ndate:   2015-08-12\ndescription: Redis自学 1\ncategories:\n- DataBase\n- Redis\ntags: redis\n---\n\n## 安装\n```\nwget http://download.redis.io/redis-stable.tar.gz\ntar xzf redis-stable.tar.gz\ncd redis-stable\nmake\nmake install\n```\n\n* 编译后源代码目录的src文件夹中可以找到若干个可执行程序，make install命令将这些可执行程序复制到/usr/local/bin目录中\n* 可以使用make test命令测试Redis是否编译正确。但是在实践过程中遇到了缺少tcl8.5的情况，直接运行apt-get install tcl就可以。然后再执行make test.\n\n## 启动\n```\nredis-server [/path/to/redis.conf]\n```\n## 客户端\n```\n//查看链接是否正常\nredis-cli ping\n\n//链接\nredis-cli -h localhost -p 6379\n```","slug":"Redis自学-1","published":1,"updated":"2020-06-14T15:57:16.322Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11s0011mp84hw5udnfs","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;download.redis.io&#x2F;redis-stable.tar.gz</span><br><span class=\"line\">tar xzf redis-stable.tar.gz</span><br><span class=\"line\">cd redis-stable</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译后源代码目录的src文件夹中可以找到若干个可执行程序，make install命令将这些可执行程序复制到/usr/local/bin目录中</li>\n<li>可以使用make test命令测试Redis是否编译正确。但是在实践过程中遇到了缺少tcl8.5的情况，直接运行apt-get install tcl就可以。然后再执行make test.</li>\n</ul>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server [&#x2F;path&#x2F;to&#x2F;redis.conf]</span><br></pre></td></tr></table></figure>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看链接是否正常</span><br><span class=\"line\">redis-cli ping</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;链接</span><br><span class=\"line\">redis-cli -h localhost -p 6379</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;download.redis.io&#x2F;redis-stable.tar.gz</span><br><span class=\"line\">tar xzf redis-stable.tar.gz</span><br><span class=\"line\">cd redis-stable</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译后源代码目录的src文件夹中可以找到若干个可执行程序，make install命令将这些可执行程序复制到/usr/local/bin目录中</li>\n<li>可以使用make test命令测试Redis是否编译正确。但是在实践过程中遇到了缺少tcl8.5的情况，直接运行apt-get install tcl就可以。然后再执行make test.</li>\n</ul>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server [&#x2F;path&#x2F;to&#x2F;redis.conf]</span><br></pre></td></tr></table></figure>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;查看链接是否正常</span><br><span class=\"line\">redis-cli ping</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;链接</span><br><span class=\"line\">redis-cli -h localhost -p 6379</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Redis自学 2","date":"2015-08-11T16:00:00.000Z","description":"Redis自学 2","_content":"\n## 四种数据类型\n* 字符串类型\n\t* 介绍：字符串类型是Redis中的基本数据类型，它能存储任何形式的字符串，包括二进制数据。可以用其存储用户邮箱、JSON化的对象甚至是一张图片。一个字符串类型键的数据最大容量是512MB\n\t* 命令：\n\t\t* SET key value\t\t//赋值\n\t\t* GET key\t\t\t\t//取值\n\t\t* INCR key\t\t\t//自增\n\t\t* INCRBY key increment\t//增加指定整数\n\t\t* DECR key\t\t\t//自减\n\t\t* DECRBY key decrement\t//减少指定整数\n\t\t* INCRBYFLOAT key increment\t//增加指定浮点数\n\t\t* APPEND key value\t\t//向尾部追加值\n\t\t* STRLEN key\t\t\t\t//获取字符串长度\n\t\t* MGET\tkey [key ...]\t//同时获得多个键值\n\t\t* MSET key value [key value ...] //通知设置多个键值\n\t\t* GETBIT key offset\t//获得一个字符串类型指定位置的二进制位的值\n\t\t* SETBIT key offset value //设置字符串类型键指定位置的二进制位的值\n\t\t* BITCOUNT key [start][end] //获得字符串类型键中值是1的二进制位个数\n\t\t* BITOP operation destkey key [key ...] //可以对多个字符串类型键进行位运算，并将结果存储在destkey参数指定的键中。支持AND OR XOR NOT运算\n* 散列类型\n\t* 介绍：Redis是采用字典结构已键值对的形式存储数据，散列类型（hash）的键值也是一种字典结构，其存储了字段和字段值的映射，但字段值只能是字符串，不支持其他数据类型。一个散列类型键可以包含之多232个字段\n\t* 命令：\n\t\t* HSET key field value\n\t\t* HGET key field\n\t\t* HMSET key field value [field value ...]\n\t\t* HMGET key field [field ...]\n\t\t* HGETALL key //获取键中所有字段和字段值\n\t\t* HEXISTS key field //判断字段是否存在\n\t\t* HSETNX key field value //当字段不存在时赋值\n\t\t* HINCRBY key field increment\n\t\t* HDEL key field [field ...]\n\t\t* HKEYS\\HVALS key //获取字段名\\字段值\n\t\t* HLEN key //获得字段数量\n* 列表类型\n\t* 介绍：可以存储一个有序的字符串列表，常用的操作是向列表两端添加一个元素，或者获得列表的摸一个片段\n\t* 命令：\n\t\t* LPUSH key value [value ...]\n\t\t* RPUSH key value [value ...]\n\t\t* LPOP key\n\t\t* RPOP key\n\t\t* LLEN key\n\t\t* LRANGE key start stop //获得列表片段\n\t\t* LREM key count value //删除列表中前count个值为value的元素，返回值是实际删除的元素个数\n\t\t* LINDEX key index //获取指定索引的元素值\n\t\t* LSET key index value //设定指定索引的元素值\n\t\t* LTRIM key start end //只保留列表指定片段\n\t\t* LINSERT key BEFORE|AFTER pivot value //向列表中插入元素，LINSERT命令首先会在列表中从左到右查找值为pivot的元素，然后根据第二个参数是BEFORE还是AFTER来决定将value插入到钙元素的前面还是后面\n\t\t* RPOPLPUSH source destination //将元素从一个列表转到另一个列表，此命令会先从source列表类型键的右边弹出一个元素，然后加入到destination列表类型键的左边，并返回这个元素的值。\n* 集合类型\n\t* 介绍：集合中每个元素都是不同的，且没有顺序。一个集合类型键可以存储之多232-1个字符串。集合与列表的区别在于集合是无序唯一的，列表是有序不唯一的\n\t* 命令：\n\t\t* SADD key member [member...]\n\t\t* SREM key member [member...]\n\t\t* SMEMBERS key //获得集合中所有元素\n\t\t* SISMEMBER key member //判断元素是否在集合中\n\t\t* SDIFF key [key...]/SINTER key [key...]/SUNION key [key...] //集合间运算\n\t\t* SCARD key //获得集合中元素个数\n\t\t* SDIFFSOTRE/SINTERSTORE/SUNIONSTORE destionation key [key...]\n\t\t* SRANDMEMBER key [count] //随机获取集合中的元素\n\t\t* SPOP key //从集合中弹出一个元素\n* 有序集合类型\n\t* 介绍：在集合类型的基础上有序集合类型为集合中每个元素都关联了一个分数，是的我们不仅可以完成插入、删除和判断元素是否存在等集合类型支持的操作，还能狗获得分数最高（或最低）的前N个元素，获得只能分数范围内的元素等与分数有关的操作。\n\t* 命令：\n\t\t* ZADD key score member [score member...] //添加元素\n\t\t* ZSCORE key member //忽的元素的分数\n\t\t* ZRANGE/ZREVRANGE key start stop[WITHSCORES] //获得排名在某个分为的元素列表\n\t\t* ZRANGEBYSCORE key min max [WITHSCORES][LIMIT offset count]\t//获取指定分数范围的元素\n\t\t* ZINCRBY key increment member //增加某个元素的分数\n\t\t* ZCARD key //获得集合中元素的数量\n\t\t* ZCOUNT key min max //获得指定分数范围内的元素个数\n\t\t* ZREM key member [member...] //删除一个或多个元素\n\t\t* ZREMRANGBYRANK key start stop //按照排名范围删除元素\n\t\t* ZREMRANGEBYSCORE key min max //按照分数范围删除元素\n\t\t* ZRANK key member //获得元素的排名\n\t\t* ZINTERSTORE destination numkeys key [key...] [WEIGHTS weight [weight...] [AGGREGATE] //计算有序集合的交集","source":"_posts/Redis自学-2.md","raw":"---\nlayout: post\ntitle: \"Redis自学 2\"\ndate:   2015-08-12\ndescription: Redis自学 2\ncategories:\n- DataBase\n- Redis\ntags: redis\n---\n\n## 四种数据类型\n* 字符串类型\n\t* 介绍：字符串类型是Redis中的基本数据类型，它能存储任何形式的字符串，包括二进制数据。可以用其存储用户邮箱、JSON化的对象甚至是一张图片。一个字符串类型键的数据最大容量是512MB\n\t* 命令：\n\t\t* SET key value\t\t//赋值\n\t\t* GET key\t\t\t\t//取值\n\t\t* INCR key\t\t\t//自增\n\t\t* INCRBY key increment\t//增加指定整数\n\t\t* DECR key\t\t\t//自减\n\t\t* DECRBY key decrement\t//减少指定整数\n\t\t* INCRBYFLOAT key increment\t//增加指定浮点数\n\t\t* APPEND key value\t\t//向尾部追加值\n\t\t* STRLEN key\t\t\t\t//获取字符串长度\n\t\t* MGET\tkey [key ...]\t//同时获得多个键值\n\t\t* MSET key value [key value ...] //通知设置多个键值\n\t\t* GETBIT key offset\t//获得一个字符串类型指定位置的二进制位的值\n\t\t* SETBIT key offset value //设置字符串类型键指定位置的二进制位的值\n\t\t* BITCOUNT key [start][end] //获得字符串类型键中值是1的二进制位个数\n\t\t* BITOP operation destkey key [key ...] //可以对多个字符串类型键进行位运算，并将结果存储在destkey参数指定的键中。支持AND OR XOR NOT运算\n* 散列类型\n\t* 介绍：Redis是采用字典结构已键值对的形式存储数据，散列类型（hash）的键值也是一种字典结构，其存储了字段和字段值的映射，但字段值只能是字符串，不支持其他数据类型。一个散列类型键可以包含之多232个字段\n\t* 命令：\n\t\t* HSET key field value\n\t\t* HGET key field\n\t\t* HMSET key field value [field value ...]\n\t\t* HMGET key field [field ...]\n\t\t* HGETALL key //获取键中所有字段和字段值\n\t\t* HEXISTS key field //判断字段是否存在\n\t\t* HSETNX key field value //当字段不存在时赋值\n\t\t* HINCRBY key field increment\n\t\t* HDEL key field [field ...]\n\t\t* HKEYS\\HVALS key //获取字段名\\字段值\n\t\t* HLEN key //获得字段数量\n* 列表类型\n\t* 介绍：可以存储一个有序的字符串列表，常用的操作是向列表两端添加一个元素，或者获得列表的摸一个片段\n\t* 命令：\n\t\t* LPUSH key value [value ...]\n\t\t* RPUSH key value [value ...]\n\t\t* LPOP key\n\t\t* RPOP key\n\t\t* LLEN key\n\t\t* LRANGE key start stop //获得列表片段\n\t\t* LREM key count value //删除列表中前count个值为value的元素，返回值是实际删除的元素个数\n\t\t* LINDEX key index //获取指定索引的元素值\n\t\t* LSET key index value //设定指定索引的元素值\n\t\t* LTRIM key start end //只保留列表指定片段\n\t\t* LINSERT key BEFORE|AFTER pivot value //向列表中插入元素，LINSERT命令首先会在列表中从左到右查找值为pivot的元素，然后根据第二个参数是BEFORE还是AFTER来决定将value插入到钙元素的前面还是后面\n\t\t* RPOPLPUSH source destination //将元素从一个列表转到另一个列表，此命令会先从source列表类型键的右边弹出一个元素，然后加入到destination列表类型键的左边，并返回这个元素的值。\n* 集合类型\n\t* 介绍：集合中每个元素都是不同的，且没有顺序。一个集合类型键可以存储之多232-1个字符串。集合与列表的区别在于集合是无序唯一的，列表是有序不唯一的\n\t* 命令：\n\t\t* SADD key member [member...]\n\t\t* SREM key member [member...]\n\t\t* SMEMBERS key //获得集合中所有元素\n\t\t* SISMEMBER key member //判断元素是否在集合中\n\t\t* SDIFF key [key...]/SINTER key [key...]/SUNION key [key...] //集合间运算\n\t\t* SCARD key //获得集合中元素个数\n\t\t* SDIFFSOTRE/SINTERSTORE/SUNIONSTORE destionation key [key...]\n\t\t* SRANDMEMBER key [count] //随机获取集合中的元素\n\t\t* SPOP key //从集合中弹出一个元素\n* 有序集合类型\n\t* 介绍：在集合类型的基础上有序集合类型为集合中每个元素都关联了一个分数，是的我们不仅可以完成插入、删除和判断元素是否存在等集合类型支持的操作，还能狗获得分数最高（或最低）的前N个元素，获得只能分数范围内的元素等与分数有关的操作。\n\t* 命令：\n\t\t* ZADD key score member [score member...] //添加元素\n\t\t* ZSCORE key member //忽的元素的分数\n\t\t* ZRANGE/ZREVRANGE key start stop[WITHSCORES] //获得排名在某个分为的元素列表\n\t\t* ZRANGEBYSCORE key min max [WITHSCORES][LIMIT offset count]\t//获取指定分数范围的元素\n\t\t* ZINCRBY key increment member //增加某个元素的分数\n\t\t* ZCARD key //获得集合中元素的数量\n\t\t* ZCOUNT key min max //获得指定分数范围内的元素个数\n\t\t* ZREM key member [member...] //删除一个或多个元素\n\t\t* ZREMRANGBYRANK key start stop //按照排名范围删除元素\n\t\t* ZREMRANGEBYSCORE key min max //按照分数范围删除元素\n\t\t* ZRANK key member //获得元素的排名\n\t\t* ZINTERSTORE destination numkeys key [key...] [WEIGHTS weight [weight...] [AGGREGATE] //计算有序集合的交集","slug":"Redis自学-2","published":1,"updated":"2020-06-14T15:57:16.325Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11t0012mp84a9gq2bqd","content":"<h2 id=\"四种数据类型\"><a href=\"#四种数据类型\" class=\"headerlink\" title=\"四种数据类型\"></a>四种数据类型</h2><ul>\n<li>字符串类型<ul>\n<li>介绍：字符串类型是Redis中的基本数据类型，它能存储任何形式的字符串，包括二进制数据。可以用其存储用户邮箱、JSON化的对象甚至是一张图片。一个字符串类型键的数据最大容量是512MB</li>\n<li>命令：<ul>\n<li>SET key value        //赋值</li>\n<li>GET key                //取值</li>\n<li>INCR key            //自增</li>\n<li>INCRBY key increment    //增加指定整数</li>\n<li>DECR key            //自减</li>\n<li>DECRBY key decrement    //减少指定整数</li>\n<li>INCRBYFLOAT key increment    //增加指定浮点数</li>\n<li>APPEND key value        //向尾部追加值</li>\n<li>STRLEN key                //获取字符串长度</li>\n<li>MGET    key [key …]    //同时获得多个键值</li>\n<li>MSET key value [key value …] //通知设置多个键值</li>\n<li>GETBIT key offset    //获得一个字符串类型指定位置的二进制位的值</li>\n<li>SETBIT key offset value //设置字符串类型键指定位置的二进制位的值</li>\n<li>BITCOUNT key [start][end] //获得字符串类型键中值是1的二进制位个数</li>\n<li>BITOP operation destkey key [key …] //可以对多个字符串类型键进行位运算，并将结果存储在destkey参数指定的键中。支持AND OR XOR NOT运算</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>散列类型<ul>\n<li>介绍：Redis是采用字典结构已键值对的形式存储数据，散列类型（hash）的键值也是一种字典结构，其存储了字段和字段值的映射，但字段值只能是字符串，不支持其他数据类型。一个散列类型键可以包含之多232个字段</li>\n<li>命令：<ul>\n<li>HSET key field value</li>\n<li>HGET key field</li>\n<li>HMSET key field value [field value …]</li>\n<li>HMGET key field [field …]</li>\n<li>HGETALL key //获取键中所有字段和字段值</li>\n<li>HEXISTS key field //判断字段是否存在</li>\n<li>HSETNX key field value //当字段不存在时赋值</li>\n<li>HINCRBY key field increment</li>\n<li>HDEL key field [field …]</li>\n<li>HKEYS\\HVALS key //获取字段名\\字段值</li>\n<li>HLEN key //获得字段数量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>列表类型<ul>\n<li>介绍：可以存储一个有序的字符串列表，常用的操作是向列表两端添加一个元素，或者获得列表的摸一个片段</li>\n<li>命令：<ul>\n<li>LPUSH key value [value …]</li>\n<li>RPUSH key value [value …]</li>\n<li>LPOP key</li>\n<li>RPOP key</li>\n<li>LLEN key</li>\n<li>LRANGE key start stop //获得列表片段</li>\n<li>LREM key count value //删除列表中前count个值为value的元素，返回值是实际删除的元素个数</li>\n<li>LINDEX key index //获取指定索引的元素值</li>\n<li>LSET key index value //设定指定索引的元素值</li>\n<li>LTRIM key start end //只保留列表指定片段</li>\n<li>LINSERT key BEFORE|AFTER pivot value //向列表中插入元素，LINSERT命令首先会在列表中从左到右查找值为pivot的元素，然后根据第二个参数是BEFORE还是AFTER来决定将value插入到钙元素的前面还是后面</li>\n<li>RPOPLPUSH source destination //将元素从一个列表转到另一个列表，此命令会先从source列表类型键的右边弹出一个元素，然后加入到destination列表类型键的左边，并返回这个元素的值。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>集合类型<ul>\n<li>介绍：集合中每个元素都是不同的，且没有顺序。一个集合类型键可以存储之多232-1个字符串。集合与列表的区别在于集合是无序唯一的，列表是有序不唯一的</li>\n<li>命令：<ul>\n<li>SADD key member [member…]</li>\n<li>SREM key member [member…]</li>\n<li>SMEMBERS key //获得集合中所有元素</li>\n<li>SISMEMBER key member //判断元素是否在集合中</li>\n<li>SDIFF key [key…]/SINTER key [key…]/SUNION key [key…] //集合间运算</li>\n<li>SCARD key //获得集合中元素个数</li>\n<li>SDIFFSOTRE/SINTERSTORE/SUNIONSTORE destionation key [key…]</li>\n<li>SRANDMEMBER key [count] //随机获取集合中的元素</li>\n<li>SPOP key //从集合中弹出一个元素</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>有序集合类型<ul>\n<li>介绍：在集合类型的基础上有序集合类型为集合中每个元素都关联了一个分数，是的我们不仅可以完成插入、删除和判断元素是否存在等集合类型支持的操作，还能狗获得分数最高（或最低）的前N个元素，获得只能分数范围内的元素等与分数有关的操作。</li>\n<li>命令：<ul>\n<li>ZADD key score member [score member…] //添加元素</li>\n<li>ZSCORE key member //忽的元素的分数</li>\n<li>ZRANGE/ZREVRANGE key start stop[WITHSCORES] //获得排名在某个分为的元素列表</li>\n<li>ZRANGEBYSCORE key min max [WITHSCORES][LIMIT offset count]    //获取指定分数范围的元素</li>\n<li>ZINCRBY key increment member //增加某个元素的分数</li>\n<li>ZCARD key //获得集合中元素的数量</li>\n<li>ZCOUNT key min max //获得指定分数范围内的元素个数</li>\n<li>ZREM key member [member…] //删除一个或多个元素</li>\n<li>ZREMRANGBYRANK key start stop //按照排名范围删除元素</li>\n<li>ZREMRANGEBYSCORE key min max //按照分数范围删除元素</li>\n<li>ZRANK key member //获得元素的排名</li>\n<li>ZINTERSTORE destination numkeys key [key…] [WEIGHTS weight [weight…] [AGGREGATE] //计算有序集合的交集</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"四种数据类型\"><a href=\"#四种数据类型\" class=\"headerlink\" title=\"四种数据类型\"></a>四种数据类型</h2><ul>\n<li>字符串类型<ul>\n<li>介绍：字符串类型是Redis中的基本数据类型，它能存储任何形式的字符串，包括二进制数据。可以用其存储用户邮箱、JSON化的对象甚至是一张图片。一个字符串类型键的数据最大容量是512MB</li>\n<li>命令：<ul>\n<li>SET key value        //赋值</li>\n<li>GET key                //取值</li>\n<li>INCR key            //自增</li>\n<li>INCRBY key increment    //增加指定整数</li>\n<li>DECR key            //自减</li>\n<li>DECRBY key decrement    //减少指定整数</li>\n<li>INCRBYFLOAT key increment    //增加指定浮点数</li>\n<li>APPEND key value        //向尾部追加值</li>\n<li>STRLEN key                //获取字符串长度</li>\n<li>MGET    key [key …]    //同时获得多个键值</li>\n<li>MSET key value [key value …] //通知设置多个键值</li>\n<li>GETBIT key offset    //获得一个字符串类型指定位置的二进制位的值</li>\n<li>SETBIT key offset value //设置字符串类型键指定位置的二进制位的值</li>\n<li>BITCOUNT key [start][end] //获得字符串类型键中值是1的二进制位个数</li>\n<li>BITOP operation destkey key [key …] //可以对多个字符串类型键进行位运算，并将结果存储在destkey参数指定的键中。支持AND OR XOR NOT运算</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>散列类型<ul>\n<li>介绍：Redis是采用字典结构已键值对的形式存储数据，散列类型（hash）的键值也是一种字典结构，其存储了字段和字段值的映射，但字段值只能是字符串，不支持其他数据类型。一个散列类型键可以包含之多232个字段</li>\n<li>命令：<ul>\n<li>HSET key field value</li>\n<li>HGET key field</li>\n<li>HMSET key field value [field value …]</li>\n<li>HMGET key field [field …]</li>\n<li>HGETALL key //获取键中所有字段和字段值</li>\n<li>HEXISTS key field //判断字段是否存在</li>\n<li>HSETNX key field value //当字段不存在时赋值</li>\n<li>HINCRBY key field increment</li>\n<li>HDEL key field [field …]</li>\n<li>HKEYS\\HVALS key //获取字段名\\字段值</li>\n<li>HLEN key //获得字段数量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>列表类型<ul>\n<li>介绍：可以存储一个有序的字符串列表，常用的操作是向列表两端添加一个元素，或者获得列表的摸一个片段</li>\n<li>命令：<ul>\n<li>LPUSH key value [value …]</li>\n<li>RPUSH key value [value …]</li>\n<li>LPOP key</li>\n<li>RPOP key</li>\n<li>LLEN key</li>\n<li>LRANGE key start stop //获得列表片段</li>\n<li>LREM key count value //删除列表中前count个值为value的元素，返回值是实际删除的元素个数</li>\n<li>LINDEX key index //获取指定索引的元素值</li>\n<li>LSET key index value //设定指定索引的元素值</li>\n<li>LTRIM key start end //只保留列表指定片段</li>\n<li>LINSERT key BEFORE|AFTER pivot value //向列表中插入元素，LINSERT命令首先会在列表中从左到右查找值为pivot的元素，然后根据第二个参数是BEFORE还是AFTER来决定将value插入到钙元素的前面还是后面</li>\n<li>RPOPLPUSH source destination //将元素从一个列表转到另一个列表，此命令会先从source列表类型键的右边弹出一个元素，然后加入到destination列表类型键的左边，并返回这个元素的值。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>集合类型<ul>\n<li>介绍：集合中每个元素都是不同的，且没有顺序。一个集合类型键可以存储之多232-1个字符串。集合与列表的区别在于集合是无序唯一的，列表是有序不唯一的</li>\n<li>命令：<ul>\n<li>SADD key member [member…]</li>\n<li>SREM key member [member…]</li>\n<li>SMEMBERS key //获得集合中所有元素</li>\n<li>SISMEMBER key member //判断元素是否在集合中</li>\n<li>SDIFF key [key…]/SINTER key [key…]/SUNION key [key…] //集合间运算</li>\n<li>SCARD key //获得集合中元素个数</li>\n<li>SDIFFSOTRE/SINTERSTORE/SUNIONSTORE destionation key [key…]</li>\n<li>SRANDMEMBER key [count] //随机获取集合中的元素</li>\n<li>SPOP key //从集合中弹出一个元素</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>有序集合类型<ul>\n<li>介绍：在集合类型的基础上有序集合类型为集合中每个元素都关联了一个分数，是的我们不仅可以完成插入、删除和判断元素是否存在等集合类型支持的操作，还能狗获得分数最高（或最低）的前N个元素，获得只能分数范围内的元素等与分数有关的操作。</li>\n<li>命令：<ul>\n<li>ZADD key score member [score member…] //添加元素</li>\n<li>ZSCORE key member //忽的元素的分数</li>\n<li>ZRANGE/ZREVRANGE key start stop[WITHSCORES] //获得排名在某个分为的元素列表</li>\n<li>ZRANGEBYSCORE key min max [WITHSCORES][LIMIT offset count]    //获取指定分数范围的元素</li>\n<li>ZINCRBY key increment member //增加某个元素的分数</li>\n<li>ZCARD key //获得集合中元素的数量</li>\n<li>ZCOUNT key min max //获得指定分数范围内的元素个数</li>\n<li>ZREM key member [member…] //删除一个或多个元素</li>\n<li>ZREMRANGBYRANK key start stop //按照排名范围删除元素</li>\n<li>ZREMRANGEBYSCORE key min max //按照分数范围删除元素</li>\n<li>ZRANK key member //获得元素的排名</li>\n<li>ZINTERSTORE destination numkeys key [key…] [WEIGHTS weight [weight…] [AGGREGATE] //计算有序集合的交集</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"post","title":"Spark基本概念","date":"2016-11-22T16:00:00.000Z","description":"Spark基本概念","_content":"\nSpark是一个用于集群计算的通用计算框架，数据科学应用和数据处理。\nSpark项目包含多个紧密集成的组建。Spark的核心是一个对由很多计算任务组成的、运行在多个工作机器或者是一个计算集群上的应用进行调度、分发以及监控的**计算引擎**\n\n### spark-core\n实现了Spark的基本功能，包括任务调度，内存管理，错误恢复，存储系统交互以及对弹性分布式数据集(RDD)的API定义\n\n### spark-sql\n是Spark用来操作结构化数据的程序包\n\n### spark-streaming 实时计算 \n是Spark对实时数据进行流式计算的组件\n\n### MLlib\nSpark中的机器学习（ML）功能的程序库\n\n### GraphX\n操作图（如社交网络的朋友关系图）的程序库\n\n### 集群管理器\nSpark支持在各种**集群管理器(cluster manager)**上运行，包括Hadoop YARN、Apache Mesos，以及Spark自带的一个简易调度器\n\n### RDD 弹性分布式数据集 Resillient Distributed Dataset\n\n通过对分布式数据集的操作来表达我们的计算意图，这些计算会自动的在集群上并行进行。RDD是Spark对分布数据和计算的基本抽象","source":"_posts/Spark基本概念.md","raw":"---\nlayout: post\ntitle: \"Spark基本概念\"\ndate:   2016-11-23\ndescription: Spark基本概念\ncategories: Spark\ntags: spark\n---\n\nSpark是一个用于集群计算的通用计算框架，数据科学应用和数据处理。\nSpark项目包含多个紧密集成的组建。Spark的核心是一个对由很多计算任务组成的、运行在多个工作机器或者是一个计算集群上的应用进行调度、分发以及监控的**计算引擎**\n\n### spark-core\n实现了Spark的基本功能，包括任务调度，内存管理，错误恢复，存储系统交互以及对弹性分布式数据集(RDD)的API定义\n\n### spark-sql\n是Spark用来操作结构化数据的程序包\n\n### spark-streaming 实时计算 \n是Spark对实时数据进行流式计算的组件\n\n### MLlib\nSpark中的机器学习（ML）功能的程序库\n\n### GraphX\n操作图（如社交网络的朋友关系图）的程序库\n\n### 集群管理器\nSpark支持在各种**集群管理器(cluster manager)**上运行，包括Hadoop YARN、Apache Mesos，以及Spark自带的一个简易调度器\n\n### RDD 弹性分布式数据集 Resillient Distributed Dataset\n\n通过对分布式数据集的操作来表达我们的计算意图，这些计算会自动的在集群上并行进行。RDD是Spark对分布数据和计算的基本抽象","slug":"Spark基本概念","published":1,"updated":"2020-06-14T15:57:16.325Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11v0016mp84daow7eh8","content":"<p>Spark是一个用于集群计算的通用计算框架，数据科学应用和数据处理。<br>Spark项目包含多个紧密集成的组建。Spark的核心是一个对由很多计算任务组成的、运行在多个工作机器或者是一个计算集群上的应用进行调度、分发以及监控的<strong>计算引擎</strong></p>\n<h3 id=\"spark-core\"><a href=\"#spark-core\" class=\"headerlink\" title=\"spark-core\"></a>spark-core</h3><p>实现了Spark的基本功能，包括任务调度，内存管理，错误恢复，存储系统交互以及对弹性分布式数据集(RDD)的API定义</p>\n<h3 id=\"spark-sql\"><a href=\"#spark-sql\" class=\"headerlink\" title=\"spark-sql\"></a>spark-sql</h3><p>是Spark用来操作结构化数据的程序包</p>\n<h3 id=\"spark-streaming-实时计算\"><a href=\"#spark-streaming-实时计算\" class=\"headerlink\" title=\"spark-streaming 实时计算\"></a>spark-streaming 实时计算</h3><p>是Spark对实时数据进行流式计算的组件</p>\n<h3 id=\"MLlib\"><a href=\"#MLlib\" class=\"headerlink\" title=\"MLlib\"></a>MLlib</h3><p>Spark中的机器学习（ML）功能的程序库</p>\n<h3 id=\"GraphX\"><a href=\"#GraphX\" class=\"headerlink\" title=\"GraphX\"></a>GraphX</h3><p>操作图（如社交网络的朋友关系图）的程序库</p>\n<h3 id=\"集群管理器\"><a href=\"#集群管理器\" class=\"headerlink\" title=\"集群管理器\"></a>集群管理器</h3><p>Spark支持在各种<strong>集群管理器(cluster manager)</strong>上运行，包括Hadoop YARN、Apache Mesos，以及Spark自带的一个简易调度器</p>\n<h3 id=\"RDD-弹性分布式数据集-Resillient-Distributed-Dataset\"><a href=\"#RDD-弹性分布式数据集-Resillient-Distributed-Dataset\" class=\"headerlink\" title=\"RDD 弹性分布式数据集 Resillient Distributed Dataset\"></a>RDD 弹性分布式数据集 Resillient Distributed Dataset</h3><p>通过对分布式数据集的操作来表达我们的计算意图，这些计算会自动的在集群上并行进行。RDD是Spark对分布数据和计算的基本抽象</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Spark是一个用于集群计算的通用计算框架，数据科学应用和数据处理。<br>Spark项目包含多个紧密集成的组建。Spark的核心是一个对由很多计算任务组成的、运行在多个工作机器或者是一个计算集群上的应用进行调度、分发以及监控的<strong>计算引擎</strong></p>\n<h3 id=\"spark-core\"><a href=\"#spark-core\" class=\"headerlink\" title=\"spark-core\"></a>spark-core</h3><p>实现了Spark的基本功能，包括任务调度，内存管理，错误恢复，存储系统交互以及对弹性分布式数据集(RDD)的API定义</p>\n<h3 id=\"spark-sql\"><a href=\"#spark-sql\" class=\"headerlink\" title=\"spark-sql\"></a>spark-sql</h3><p>是Spark用来操作结构化数据的程序包</p>\n<h3 id=\"spark-streaming-实时计算\"><a href=\"#spark-streaming-实时计算\" class=\"headerlink\" title=\"spark-streaming 实时计算\"></a>spark-streaming 实时计算</h3><p>是Spark对实时数据进行流式计算的组件</p>\n<h3 id=\"MLlib\"><a href=\"#MLlib\" class=\"headerlink\" title=\"MLlib\"></a>MLlib</h3><p>Spark中的机器学习（ML）功能的程序库</p>\n<h3 id=\"GraphX\"><a href=\"#GraphX\" class=\"headerlink\" title=\"GraphX\"></a>GraphX</h3><p>操作图（如社交网络的朋友关系图）的程序库</p>\n<h3 id=\"集群管理器\"><a href=\"#集群管理器\" class=\"headerlink\" title=\"集群管理器\"></a>集群管理器</h3><p>Spark支持在各种<strong>集群管理器(cluster manager)</strong>上运行，包括Hadoop YARN、Apache Mesos，以及Spark自带的一个简易调度器</p>\n<h3 id=\"RDD-弹性分布式数据集-Resillient-Distributed-Dataset\"><a href=\"#RDD-弹性分布式数据集-Resillient-Distributed-Dataset\" class=\"headerlink\" title=\"RDD 弹性分布式数据集 Resillient Distributed Dataset\"></a>RDD 弹性分布式数据集 Resillient Distributed Dataset</h3><p>通过对分布式数据集的操作来表达我们的计算意图，这些计算会自动的在集群上并行进行。RDD是Spark对分布数据和计算的基本抽象</p>\n"},{"layout":"post","title":"Vim Commands","date":"2015-03-29T16:00:00.000Z","description":"Vim Commands","_content":"\n## Vim Commands\n### 基本命令\n\n|Commands|Description|\n|-----|-----|\n|:e filename|\tOpen filename for edition|\n|:w\t|Save file|\n|:q\t|Exit Vim|\n|:q!|\tQuit without saving|\n|:x\t|Write file (if changes has been made) and exit|\n|:sav filename|\tSaves file as filename|\n|.\t|Repeats the last change made in normal mode|\n|5.\t|Repeats 5 times the last change made in normal mode|\n\n### 在文件中移动\n\n|Commands|Description|\n|-----|-----|\n|k| or Up Arrow\tmove the cursor up one line|\n|j| or Down Arrow\tmove the cursor down one line|\n|e|\tmove the cursor to the end of the word|\n|b|\tmove the cursor to the beginning of the word|\n|0|\tmove the cursor to the beginning of the line|\n|G|\tmove the cursor to the end of the file|\n|gg|\tmove the cursor to the beginning of the file|\n|L|\tmove the cursor to the bottom of the screen|\n|:59|\tmove cursor to line 59. Replace 59 by the desired line number.|\n|20\\||\tmove cursor to column 20.|\n|%|\tMove cursor to matching parenthesis|\n|[[|\tJump to function start|\n|[{| Jump to block start|\n\n### 剪切、拷贝和粘贴\n\n|Commands|Description|\n|-----|-----|\n|y\t|Copy the selected text to clipboard|\n|p\t|Paste clipboard contents|\n|dd\t|Cut current line|\n|yy\t|Copy current line|\n|y$|\tCopy to end of line|\n|D|\tCut to end of line|\n\n### 搜索\n\n|Commands|Description|\n|-----|-----|\n|/word|\tSearch word from top to bottom|\n|?word|\tSearch word from bottom to top|\n|*\t|Search the word under cursor|\n|/\\\\cstring|\tSearch STRING or string, case insensitive|\n|/jo[ha]n|\tSearch john or joan|\n|/\\\\< the|\tSearch the, theatre or then|\n|/the\\\\>|\tSearch the or breathe|\n|/\\\\< the\\\\>|\tSearch the|\n|/\\\\< ¦.\\\\>\t|Search all words of 4 letters|\n|/\\\\/|\tSearch fred but not alfred or frederick|\n|/fred\\\\|joe\tSearch fred or joe|\n|/\\\\<\\d\\d\\d\\d\\>|\tSearch exactly 4 digits|\n|/^\\n\\{3}|\tFind 3 empty lines|\n|:bufdo /searchstr/\t|Search in all open files|\n|bufdo %s/something/somethingelse/g|\tSearch something in all the open buffers and replace it with somethingelse|\n\n### 替换\n\n|Commands|Description|\n|-----|-----|\n|:%s/old/new/g|\tReplace all occurrences of old by new in file|\n|:%s/onward/forward/gi|\tReplace onward by forward, case unsensitive|\n|:%s/old/new/gc|\tReplace all occurrences with confirmation\n|:2,35s/old/new/g|\tReplace all occurrences between lines 2 and 35|\n|:5,$s/old/new/g|\tReplace all occurrences from line 5 to EOF|\n|:%s/^/hello/g|\tReplace the beginning of each line by hello|\n|:%s/$/Harry/g|\tReplace the end of each line by Harry|\n|:%s/onward/forward/gi|\tReplace onward by forward, case unsensitive|\n|:%s/ \\*$//g|\tDelete all white spaces|\n|:g/string/d|\tDelete all lines containing string|\n|:v/string/d|\tDelete all lines containing which didn’t contain string|\n|:s/Bill/Steve/|\tReplace the first occurrence of Bill by Steve in current line|\n|:s/Bill/Steve/g\t|Replace Bill by Steve in current line|\n|:%s/Bill/Steve/g|\tReplace Bill by Steve in all the file|\n|:%s/^M//g|\tDelete DOS carriage returns (^M)|\n|:%s/\\r/\\r/g|\tTransform DOS carriage returns in returns|\n|:%s#<[^>]\\+>##g|\tDelete HTML tags but keeps text|\n|:%s/^\\(.*\\)\\n\\1$/\\1/|\tDelete lines which appears twice|\n|Ctrl+a|\tIncrement number under the cursor|\n|Ctrl+x|\tDecrement number under cursor|\n|ggVGg?|\tChange text to Rot13|\n\n### 大小写\n\n|Commands|Description|\n|-----|-----|\n|Vu|\tLowercase line|\n|VU|\tUppercase line|\n|g~~|\tInvert case|\n|vEU|\tSwitch word to uppercase|\n|vE~|\tModify word case|\n|ggguG|\tSet all text to lowercase|\n|gggUG|\tSet all text to uppercase|\n|:set ignorecase|\tIgnore case in searches|\n|:set smartcase|\tIgnore case in searches excepted if an uppercase letter is used|\n|:%s/\\<./\\u&/g|\tSets first letter of each word to uppercase|\n|:%s/\\<./\\l&/g|\tSets first letter of each word to lowercase|\n|:%s/.\\*/\\u&|\tSets first letter of each line to uppercase|\n|:%s/.*/\\l&|\tSets first letter of each line to lowercase|\n\n### 读写文件\n|Commands|Description|\n|-----|-----|\n|:1,10 w outfile|\tSaves lines 1 to 10 in outfile|\n|:1,10 w >> outfile\t|Appends lines 1 to 10 to outfile|\n|:r infile\t|Insert the content of infile|\n|:23r infile\t|Insert the content of infile under l|\n\n### 文件浏览器\n\n|Commands|Description|\n|-----|-----|\n|:e .\t|Open integrated file explorer|\n|:Sex\t|Split window and open integrated file explorer|\n|:Sex!\t|Same as :Sex but split window vertically|\n|:browse e|\tGraphical file explorer|\n|:ls\t|List buffers|\n|:cd ..|\tMove to parent directory|\n|:args\t|List files|\n|:args *.php\t|Open file list|\n|:grep expression *.php|\tReturns a list of .php files contening expression|\n|gf\t|Open file name under cursor|\n\n### 和 Unix 系统交互\n\n|Commands|Description|\n|-----|-----|\n|:!pwd|\tExecute the pwd unix command, then returns to Vi|\n|!!pwd|\tExecute the pwd unix command and insert output in file|\n|:sh|\tTemporary returns to Unix|\n|$exit|\tRetourns to Vi|\n\n### 对齐\n\n|Commands|Description|\n|-----|-----|\n|:%!fmt\t|Align all lines|\n|!}fmt\t|Align all lines at the current position|\n|5!!fmt|\tAlign the next 5 lines|\n\n### 选项卡/窗口\n\n|Commands|Description|\n|-----|-----|\n|:tabnew\t|Creates a new tab|\n|gt\t|Show next tab|\n|:tabfirst|\tShow first tab|\n|:tablast\t|Show last tab|\n|:tabm n(position)|\tRearrange tabs|\n|:tabdo %s/foo/bar/g|\tExecute a command in all tabs|\n|:tab ball|\tPuts all open files in tabs|\n|:new abc.txt|\tEdit abc.txt in new window|\n\n### 分屏显示\n\n|Commands|Description|\n|-----|-----|\n|:e filename\t|Edit filename in current window|\n|:split filename\t|Split the window and open filename|\n|ctrl-w up arrow\t|Puts cursor in top window|\n|ctrl-w ctrl-w\t|Puts cursor in next window|\n|ctrl-w_\t|Maximize current window vertically|\n|ctrl-w\\|\t|Maximize current window horizontally|\n|ctrl-w=\t|Gives the same size to all windows|\n|10 ctrl-w+|\tAdd 10 lines to current window|\n|:vsplit |file\tSplit window vertically|\n|:sview |file\tSame as :split in readonly mode|\n|:hide\t|Close current window|\n|:­nly\t|Close all windows, excepted current|\n|:b 2\t|Open #2 in this window|\n\n### 自动完成\n\n|Commands|Description|\n|-----|-----|\n|Ctrl+n Ctrl+p (in insert mode)|\tComplete word|\n|Ctrl+x Ctrl+l|\tComplete line|\n|:set dictionary=dict|\tDefine dict as a dictionnary|\n|Ctrl+x Ctrl+k|\tComplete with dictionnary|\n\n### 标记\n\n|Commands|Description|\n|-----|-----|\nm {a-z}\tMarks current position as {a-z}\n' {a-z}\tMove to position {a-z}\n''\tMove to previous position\n\n### 缩写\n\n|Commands|Description|\n|-----|-----|\n|:ab mail mail@provider.org\t|Define mail as abbreviation of mail@provider.org|\n\n### 文本缩进\n\n|Commands|Description|\n|-----|-----|\n|:set autoindent|\tTurn on auto-indent|\n|:set smartindent|\tTurn on intelligent auto-indent|\n|:set shiftwidth=4|\tDefines 4 spaces as indent size|\n|ctrl-t, ctrl-d|\tIndent/un-indent in insert mode|\n|>>|\tIndent|\n|<<|\tUn-indent|\n|=%|\tIndent the code between parenthesis|\n|1GVG=\t|Indent the whole file|\n\n### 代码高亮\n\n|Commands|Description|\n|-----|-----|\n|:syntax on|\tTurn on syntax highlighting|\n|:syntax off|\tTurn off syntax highlighting|\n|:set syntax=perl|\tForce syntax highlighting|\n\n### 多屏操作\n\n* vim -On file1 file2 ...：垂直分屏打开多个文件\n* vim -on file1 file2 ...：水平分屏打开多个文件\n* ctrl+w s：上下分割当前文件\n* ctrl+w v：水平分割当前文件\n* :sp filename：上下分割打开新文件\n* :vsp filename：水平分割打开新文件\n\n需要切换工作屏幕时可以使用命令ctrl+w h/j/k/l/w，其中h/j/k/l是按照方向移动，w是移动到下一个屏幕！当你觉得屏幕的顺序有点不爽时可以使用ctrl+w H/J/K/L来移动分屏。另外也可以调整屏幕大小：\n\n* ctrl+w =：所有屏幕都一样的高度\n* ctrl+w -：降低高度\n* ctrl+w +：增加高度\n \n在编辑的时候可以在分屏中浏览目录：\n* :He：上下分屏，在下面（:He!则在上面）浏览目录\n* :Ve：左右分屏，在左面（:Ve!则在右面）浏览目录\n\n","source":"_posts/Vim-commands.md","raw":"---\nlayout: post\ntitle: \"Vim Commands\"\ndate:   2015-03-30\ndescription: Vim Commands\ncategories: Linux\ntags:\n- linux\n- vim\n---\n\n## Vim Commands\n### 基本命令\n\n|Commands|Description|\n|-----|-----|\n|:e filename|\tOpen filename for edition|\n|:w\t|Save file|\n|:q\t|Exit Vim|\n|:q!|\tQuit without saving|\n|:x\t|Write file (if changes has been made) and exit|\n|:sav filename|\tSaves file as filename|\n|.\t|Repeats the last change made in normal mode|\n|5.\t|Repeats 5 times the last change made in normal mode|\n\n### 在文件中移动\n\n|Commands|Description|\n|-----|-----|\n|k| or Up Arrow\tmove the cursor up one line|\n|j| or Down Arrow\tmove the cursor down one line|\n|e|\tmove the cursor to the end of the word|\n|b|\tmove the cursor to the beginning of the word|\n|0|\tmove the cursor to the beginning of the line|\n|G|\tmove the cursor to the end of the file|\n|gg|\tmove the cursor to the beginning of the file|\n|L|\tmove the cursor to the bottom of the screen|\n|:59|\tmove cursor to line 59. Replace 59 by the desired line number.|\n|20\\||\tmove cursor to column 20.|\n|%|\tMove cursor to matching parenthesis|\n|[[|\tJump to function start|\n|[{| Jump to block start|\n\n### 剪切、拷贝和粘贴\n\n|Commands|Description|\n|-----|-----|\n|y\t|Copy the selected text to clipboard|\n|p\t|Paste clipboard contents|\n|dd\t|Cut current line|\n|yy\t|Copy current line|\n|y$|\tCopy to end of line|\n|D|\tCut to end of line|\n\n### 搜索\n\n|Commands|Description|\n|-----|-----|\n|/word|\tSearch word from top to bottom|\n|?word|\tSearch word from bottom to top|\n|*\t|Search the word under cursor|\n|/\\\\cstring|\tSearch STRING or string, case insensitive|\n|/jo[ha]n|\tSearch john or joan|\n|/\\\\< the|\tSearch the, theatre or then|\n|/the\\\\>|\tSearch the or breathe|\n|/\\\\< the\\\\>|\tSearch the|\n|/\\\\< ¦.\\\\>\t|Search all words of 4 letters|\n|/\\\\/|\tSearch fred but not alfred or frederick|\n|/fred\\\\|joe\tSearch fred or joe|\n|/\\\\<\\d\\d\\d\\d\\>|\tSearch exactly 4 digits|\n|/^\\n\\{3}|\tFind 3 empty lines|\n|:bufdo /searchstr/\t|Search in all open files|\n|bufdo %s/something/somethingelse/g|\tSearch something in all the open buffers and replace it with somethingelse|\n\n### 替换\n\n|Commands|Description|\n|-----|-----|\n|:%s/old/new/g|\tReplace all occurrences of old by new in file|\n|:%s/onward/forward/gi|\tReplace onward by forward, case unsensitive|\n|:%s/old/new/gc|\tReplace all occurrences with confirmation\n|:2,35s/old/new/g|\tReplace all occurrences between lines 2 and 35|\n|:5,$s/old/new/g|\tReplace all occurrences from line 5 to EOF|\n|:%s/^/hello/g|\tReplace the beginning of each line by hello|\n|:%s/$/Harry/g|\tReplace the end of each line by Harry|\n|:%s/onward/forward/gi|\tReplace onward by forward, case unsensitive|\n|:%s/ \\*$//g|\tDelete all white spaces|\n|:g/string/d|\tDelete all lines containing string|\n|:v/string/d|\tDelete all lines containing which didn’t contain string|\n|:s/Bill/Steve/|\tReplace the first occurrence of Bill by Steve in current line|\n|:s/Bill/Steve/g\t|Replace Bill by Steve in current line|\n|:%s/Bill/Steve/g|\tReplace Bill by Steve in all the file|\n|:%s/^M//g|\tDelete DOS carriage returns (^M)|\n|:%s/\\r/\\r/g|\tTransform DOS carriage returns in returns|\n|:%s#<[^>]\\+>##g|\tDelete HTML tags but keeps text|\n|:%s/^\\(.*\\)\\n\\1$/\\1/|\tDelete lines which appears twice|\n|Ctrl+a|\tIncrement number under the cursor|\n|Ctrl+x|\tDecrement number under cursor|\n|ggVGg?|\tChange text to Rot13|\n\n### 大小写\n\n|Commands|Description|\n|-----|-----|\n|Vu|\tLowercase line|\n|VU|\tUppercase line|\n|g~~|\tInvert case|\n|vEU|\tSwitch word to uppercase|\n|vE~|\tModify word case|\n|ggguG|\tSet all text to lowercase|\n|gggUG|\tSet all text to uppercase|\n|:set ignorecase|\tIgnore case in searches|\n|:set smartcase|\tIgnore case in searches excepted if an uppercase letter is used|\n|:%s/\\<./\\u&/g|\tSets first letter of each word to uppercase|\n|:%s/\\<./\\l&/g|\tSets first letter of each word to lowercase|\n|:%s/.\\*/\\u&|\tSets first letter of each line to uppercase|\n|:%s/.*/\\l&|\tSets first letter of each line to lowercase|\n\n### 读写文件\n|Commands|Description|\n|-----|-----|\n|:1,10 w outfile|\tSaves lines 1 to 10 in outfile|\n|:1,10 w >> outfile\t|Appends lines 1 to 10 to outfile|\n|:r infile\t|Insert the content of infile|\n|:23r infile\t|Insert the content of infile under l|\n\n### 文件浏览器\n\n|Commands|Description|\n|-----|-----|\n|:e .\t|Open integrated file explorer|\n|:Sex\t|Split window and open integrated file explorer|\n|:Sex!\t|Same as :Sex but split window vertically|\n|:browse e|\tGraphical file explorer|\n|:ls\t|List buffers|\n|:cd ..|\tMove to parent directory|\n|:args\t|List files|\n|:args *.php\t|Open file list|\n|:grep expression *.php|\tReturns a list of .php files contening expression|\n|gf\t|Open file name under cursor|\n\n### 和 Unix 系统交互\n\n|Commands|Description|\n|-----|-----|\n|:!pwd|\tExecute the pwd unix command, then returns to Vi|\n|!!pwd|\tExecute the pwd unix command and insert output in file|\n|:sh|\tTemporary returns to Unix|\n|$exit|\tRetourns to Vi|\n\n### 对齐\n\n|Commands|Description|\n|-----|-----|\n|:%!fmt\t|Align all lines|\n|!}fmt\t|Align all lines at the current position|\n|5!!fmt|\tAlign the next 5 lines|\n\n### 选项卡/窗口\n\n|Commands|Description|\n|-----|-----|\n|:tabnew\t|Creates a new tab|\n|gt\t|Show next tab|\n|:tabfirst|\tShow first tab|\n|:tablast\t|Show last tab|\n|:tabm n(position)|\tRearrange tabs|\n|:tabdo %s/foo/bar/g|\tExecute a command in all tabs|\n|:tab ball|\tPuts all open files in tabs|\n|:new abc.txt|\tEdit abc.txt in new window|\n\n### 分屏显示\n\n|Commands|Description|\n|-----|-----|\n|:e filename\t|Edit filename in current window|\n|:split filename\t|Split the window and open filename|\n|ctrl-w up arrow\t|Puts cursor in top window|\n|ctrl-w ctrl-w\t|Puts cursor in next window|\n|ctrl-w_\t|Maximize current window vertically|\n|ctrl-w\\|\t|Maximize current window horizontally|\n|ctrl-w=\t|Gives the same size to all windows|\n|10 ctrl-w+|\tAdd 10 lines to current window|\n|:vsplit |file\tSplit window vertically|\n|:sview |file\tSame as :split in readonly mode|\n|:hide\t|Close current window|\n|:­nly\t|Close all windows, excepted current|\n|:b 2\t|Open #2 in this window|\n\n### 自动完成\n\n|Commands|Description|\n|-----|-----|\n|Ctrl+n Ctrl+p (in insert mode)|\tComplete word|\n|Ctrl+x Ctrl+l|\tComplete line|\n|:set dictionary=dict|\tDefine dict as a dictionnary|\n|Ctrl+x Ctrl+k|\tComplete with dictionnary|\n\n### 标记\n\n|Commands|Description|\n|-----|-----|\nm {a-z}\tMarks current position as {a-z}\n' {a-z}\tMove to position {a-z}\n''\tMove to previous position\n\n### 缩写\n\n|Commands|Description|\n|-----|-----|\n|:ab mail mail@provider.org\t|Define mail as abbreviation of mail@provider.org|\n\n### 文本缩进\n\n|Commands|Description|\n|-----|-----|\n|:set autoindent|\tTurn on auto-indent|\n|:set smartindent|\tTurn on intelligent auto-indent|\n|:set shiftwidth=4|\tDefines 4 spaces as indent size|\n|ctrl-t, ctrl-d|\tIndent/un-indent in insert mode|\n|>>|\tIndent|\n|<<|\tUn-indent|\n|=%|\tIndent the code between parenthesis|\n|1GVG=\t|Indent the whole file|\n\n### 代码高亮\n\n|Commands|Description|\n|-----|-----|\n|:syntax on|\tTurn on syntax highlighting|\n|:syntax off|\tTurn off syntax highlighting|\n|:set syntax=perl|\tForce syntax highlighting|\n\n### 多屏操作\n\n* vim -On file1 file2 ...：垂直分屏打开多个文件\n* vim -on file1 file2 ...：水平分屏打开多个文件\n* ctrl+w s：上下分割当前文件\n* ctrl+w v：水平分割当前文件\n* :sp filename：上下分割打开新文件\n* :vsp filename：水平分割打开新文件\n\n需要切换工作屏幕时可以使用命令ctrl+w h/j/k/l/w，其中h/j/k/l是按照方向移动，w是移动到下一个屏幕！当你觉得屏幕的顺序有点不爽时可以使用ctrl+w H/J/K/L来移动分屏。另外也可以调整屏幕大小：\n\n* ctrl+w =：所有屏幕都一样的高度\n* ctrl+w -：降低高度\n* ctrl+w +：增加高度\n \n在编辑的时候可以在分屏中浏览目录：\n* :He：上下分屏，在下面（:He!则在上面）浏览目录\n* :Ve：左右分屏，在左面（:Ve!则在右面）浏览目录\n\n","slug":"Vim-commands","published":1,"updated":"2020-06-14T15:57:16.315Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11w0018mp84103kbrae","content":"<h2 id=\"Vim-Commands\"><a href=\"#Vim-Commands\" class=\"headerlink\" title=\"Vim Commands\"></a>Vim Commands</h2><h3 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e filename</td>\n<td>Open filename for edition</td>\n</tr>\n<tr>\n<td>:w</td>\n<td>Save file</td>\n</tr>\n<tr>\n<td>:q</td>\n<td>Exit Vim</td>\n</tr>\n<tr>\n<td>:q!</td>\n<td>Quit without saving</td>\n</tr>\n<tr>\n<td>:x</td>\n<td>Write file (if changes has been made) and exit</td>\n</tr>\n<tr>\n<td>:sav filename</td>\n<td>Saves file as filename</td>\n</tr>\n<tr>\n<td>.</td>\n<td>Repeats the last change made in normal mode</td>\n</tr>\n<tr>\n<td>5.</td>\n<td>Repeats 5 times the last change made in normal mode</td>\n</tr>\n</tbody></table>\n<h3 id=\"在文件中移动\"><a href=\"#在文件中移动\" class=\"headerlink\" title=\"在文件中移动\"></a>在文件中移动</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>k</td>\n<td>or Up Arrow    move the cursor up one line</td>\n</tr>\n<tr>\n<td>j</td>\n<td>or Down Arrow    move the cursor down one line</td>\n</tr>\n<tr>\n<td>e</td>\n<td>move the cursor to the end of the word</td>\n</tr>\n<tr>\n<td>b</td>\n<td>move the cursor to the beginning of the word</td>\n</tr>\n<tr>\n<td>0</td>\n<td>move the cursor to the beginning of the line</td>\n</tr>\n<tr>\n<td>G</td>\n<td>move the cursor to the end of the file</td>\n</tr>\n<tr>\n<td>gg</td>\n<td>move the cursor to the beginning of the file</td>\n</tr>\n<tr>\n<td>L</td>\n<td>move the cursor to the bottom of the screen</td>\n</tr>\n<tr>\n<td>:59</td>\n<td>move cursor to line 59. Replace 59 by the desired line number.</td>\n</tr>\n<tr>\n<td>20|</td>\n<td>move cursor to column 20.</td>\n</tr>\n<tr>\n<td>%</td>\n<td>Move cursor to matching parenthesis</td>\n</tr>\n<tr>\n<td>[[</td>\n<td>Jump to function start</td>\n</tr>\n<tr>\n<td>[{</td>\n<td>Jump to block start</td>\n</tr>\n</tbody></table>\n<h3 id=\"剪切、拷贝和粘贴\"><a href=\"#剪切、拷贝和粘贴\" class=\"headerlink\" title=\"剪切、拷贝和粘贴\"></a>剪切、拷贝和粘贴</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>y</td>\n<td>Copy the selected text to clipboard</td>\n</tr>\n<tr>\n<td>p</td>\n<td>Paste clipboard contents</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>Cut current line</td>\n</tr>\n<tr>\n<td>yy</td>\n<td>Copy current line</td>\n</tr>\n<tr>\n<td>y$</td>\n<td>Copy to end of line</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Cut to end of line</td>\n</tr>\n</tbody></table>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>/word</td>\n<td>Search word from top to bottom</td>\n</tr>\n<tr>\n<td>?word</td>\n<td>Search word from bottom to top</td>\n</tr>\n<tr>\n<td>*</td>\n<td>Search the word under cursor</td>\n</tr>\n<tr>\n<td>/\\cstring</td>\n<td>Search STRING or string, case insensitive</td>\n</tr>\n<tr>\n<td>/jo[ha]n</td>\n<td>Search john or joan</td>\n</tr>\n<tr>\n<td>/\\&lt; the</td>\n<td>Search the, theatre or then</td>\n</tr>\n<tr>\n<td>/the\\&gt;</td>\n<td>Search the or breathe</td>\n</tr>\n<tr>\n<td>/\\&lt; the\\&gt;</td>\n<td>Search the</td>\n</tr>\n<tr>\n<td>/\\&lt; ¦.\\&gt;</td>\n<td>Search all words of 4 letters</td>\n</tr>\n<tr>\n<td>/\\/</td>\n<td>Search fred but not alfred or frederick</td>\n</tr>\n<tr>\n<td>/fred\\</td>\n<td>joe    Search fred or joe</td>\n</tr>\n<tr>\n<td>/\\&lt;\\d\\d\\d\\d&gt;</td>\n<td>Search exactly 4 digits</td>\n</tr>\n<tr>\n<td>/^\\n{3}</td>\n<td>Find 3 empty lines</td>\n</tr>\n<tr>\n<td>:bufdo /searchstr/</td>\n<td>Search in all open files</td>\n</tr>\n<tr>\n<td>bufdo %s/something/somethingelse/g</td>\n<td>Search something in all the open buffers and replace it with somethingelse</td>\n</tr>\n</tbody></table>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:%s/old/new/g</td>\n<td>Replace all occurrences of old by new in file</td>\n</tr>\n<tr>\n<td>:%s/onward/forward/gi</td>\n<td>Replace onward by forward, case unsensitive</td>\n</tr>\n<tr>\n<td>:%s/old/new/gc</td>\n<td>Replace all occurrences with confirmation</td>\n</tr>\n<tr>\n<td>:2,35s/old/new/g</td>\n<td>Replace all occurrences between lines 2 and 35</td>\n</tr>\n<tr>\n<td>:5,$s/old/new/g</td>\n<td>Replace all occurrences from line 5 to EOF</td>\n</tr>\n<tr>\n<td>:%s/^/hello/g</td>\n<td>Replace the beginning of each line by hello</td>\n</tr>\n<tr>\n<td>:%s/$/Harry/g</td>\n<td>Replace the end of each line by Harry</td>\n</tr>\n<tr>\n<td>:%s/onward/forward/gi</td>\n<td>Replace onward by forward, case unsensitive</td>\n</tr>\n<tr>\n<td>:%s/ *$//g</td>\n<td>Delete all white spaces</td>\n</tr>\n<tr>\n<td>:g/string/d</td>\n<td>Delete all lines containing string</td>\n</tr>\n<tr>\n<td>:v/string/d</td>\n<td>Delete all lines containing which didn’t contain string</td>\n</tr>\n<tr>\n<td>:s/Bill/Steve/</td>\n<td>Replace the first occurrence of Bill by Steve in current line</td>\n</tr>\n<tr>\n<td>:s/Bill/Steve/g</td>\n<td>Replace Bill by Steve in current line</td>\n</tr>\n<tr>\n<td>:%s/Bill/Steve/g</td>\n<td>Replace Bill by Steve in all the file</td>\n</tr>\n<tr>\n<td>:%s/^M//g</td>\n<td>Delete DOS carriage returns (^M)</td>\n</tr>\n<tr>\n<td>:%s/\\r/\\r/g</td>\n<td>Transform DOS carriage returns in returns</td>\n</tr>\n<tr>\n<td>:%s#&lt;[^&gt;]+&gt;##g</td>\n<td>Delete HTML tags but keeps text</td>\n</tr>\n<tr>\n<td>:%s/^(.*)\\n\\1$/\\1/</td>\n<td>Delete lines which appears twice</td>\n</tr>\n<tr>\n<td>Ctrl+a</td>\n<td>Increment number under the cursor</td>\n</tr>\n<tr>\n<td>Ctrl+x</td>\n<td>Decrement number under cursor</td>\n</tr>\n<tr>\n<td>ggVGg?</td>\n<td>Change text to Rot13</td>\n</tr>\n</tbody></table>\n<h3 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Vu</td>\n<td>Lowercase line</td>\n</tr>\n<tr>\n<td>VU</td>\n<td>Uppercase line</td>\n</tr>\n<tr>\n<td>g~~</td>\n<td>Invert case</td>\n</tr>\n<tr>\n<td>vEU</td>\n<td>Switch word to uppercase</td>\n</tr>\n<tr>\n<td>vE~</td>\n<td>Modify word case</td>\n</tr>\n<tr>\n<td>ggguG</td>\n<td>Set all text to lowercase</td>\n</tr>\n<tr>\n<td>gggUG</td>\n<td>Set all text to uppercase</td>\n</tr>\n<tr>\n<td>:set ignorecase</td>\n<td>Ignore case in searches</td>\n</tr>\n<tr>\n<td>:set smartcase</td>\n<td>Ignore case in searches excepted if an uppercase letter is used</td>\n</tr>\n<tr>\n<td>:%s/&lt;./\\u&amp;/g</td>\n<td>Sets first letter of each word to uppercase</td>\n</tr>\n<tr>\n<td>:%s/&lt;./\\l&amp;/g</td>\n<td>Sets first letter of each word to lowercase</td>\n</tr>\n<tr>\n<td>:%s/.*/\\u&amp;</td>\n<td>Sets first letter of each line to uppercase</td>\n</tr>\n<tr>\n<td>:%s/.*/\\l&amp;</td>\n<td>Sets first letter of each line to lowercase</td>\n</tr>\n</tbody></table>\n<h3 id=\"读写文件\"><a href=\"#读写文件\" class=\"headerlink\" title=\"读写文件\"></a>读写文件</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:1,10 w outfile</td>\n<td>Saves lines 1 to 10 in outfile</td>\n</tr>\n<tr>\n<td>:1,10 w &gt;&gt; outfile</td>\n<td>Appends lines 1 to 10 to outfile</td>\n</tr>\n<tr>\n<td>:r infile</td>\n<td>Insert the content of infile</td>\n</tr>\n<tr>\n<td>:23r infile</td>\n<td>Insert the content of infile under l</td>\n</tr>\n</tbody></table>\n<h3 id=\"文件浏览器\"><a href=\"#文件浏览器\" class=\"headerlink\" title=\"文件浏览器\"></a>文件浏览器</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e .</td>\n<td>Open integrated file explorer</td>\n</tr>\n<tr>\n<td>:Sex</td>\n<td>Split window and open integrated file explorer</td>\n</tr>\n<tr>\n<td>:Sex!</td>\n<td>Same as :Sex but split window vertically</td>\n</tr>\n<tr>\n<td>:browse e</td>\n<td>Graphical file explorer</td>\n</tr>\n<tr>\n<td>:ls</td>\n<td>List buffers</td>\n</tr>\n<tr>\n<td>:cd ..</td>\n<td>Move to parent directory</td>\n</tr>\n<tr>\n<td>:args</td>\n<td>List files</td>\n</tr>\n<tr>\n<td>:args *.php</td>\n<td>Open file list</td>\n</tr>\n<tr>\n<td>:grep expression *.php</td>\n<td>Returns a list of .php files contening expression</td>\n</tr>\n<tr>\n<td>gf</td>\n<td>Open file name under cursor</td>\n</tr>\n</tbody></table>\n<h3 id=\"和-Unix-系统交互\"><a href=\"#和-Unix-系统交互\" class=\"headerlink\" title=\"和 Unix 系统交互\"></a>和 Unix 系统交互</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:!pwd</td>\n<td>Execute the pwd unix command, then returns to Vi</td>\n</tr>\n<tr>\n<td>!!pwd</td>\n<td>Execute the pwd unix command and insert output in file</td>\n</tr>\n<tr>\n<td>:sh</td>\n<td>Temporary returns to Unix</td>\n</tr>\n<tr>\n<td>$exit</td>\n<td>Retourns to Vi</td>\n</tr>\n</tbody></table>\n<h3 id=\"对齐\"><a href=\"#对齐\" class=\"headerlink\" title=\"对齐\"></a>对齐</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:%!fmt</td>\n<td>Align all lines</td>\n</tr>\n<tr>\n<td>!}fmt</td>\n<td>Align all lines at the current position</td>\n</tr>\n<tr>\n<td>5!!fmt</td>\n<td>Align the next 5 lines</td>\n</tr>\n</tbody></table>\n<h3 id=\"选项卡-窗口\"><a href=\"#选项卡-窗口\" class=\"headerlink\" title=\"选项卡/窗口\"></a>选项卡/窗口</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:tabnew</td>\n<td>Creates a new tab</td>\n</tr>\n<tr>\n<td>gt</td>\n<td>Show next tab</td>\n</tr>\n<tr>\n<td>:tabfirst</td>\n<td>Show first tab</td>\n</tr>\n<tr>\n<td>:tablast</td>\n<td>Show last tab</td>\n</tr>\n<tr>\n<td>:tabm n(position)</td>\n<td>Rearrange tabs</td>\n</tr>\n<tr>\n<td>:tabdo %s/foo/bar/g</td>\n<td>Execute a command in all tabs</td>\n</tr>\n<tr>\n<td>:tab ball</td>\n<td>Puts all open files in tabs</td>\n</tr>\n<tr>\n<td>:new abc.txt</td>\n<td>Edit abc.txt in new window</td>\n</tr>\n</tbody></table>\n<h3 id=\"分屏显示\"><a href=\"#分屏显示\" class=\"headerlink\" title=\"分屏显示\"></a>分屏显示</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e filename</td>\n<td>Edit filename in current window</td>\n</tr>\n<tr>\n<td>:split filename</td>\n<td>Split the window and open filename</td>\n</tr>\n<tr>\n<td>ctrl-w up arrow</td>\n<td>Puts cursor in top window</td>\n</tr>\n<tr>\n<td>ctrl-w ctrl-w</td>\n<td>Puts cursor in next window</td>\n</tr>\n<tr>\n<td>ctrl-w_</td>\n<td>Maximize current window vertically</td>\n</tr>\n<tr>\n<td>ctrl-w|</td>\n<td>Maximize current window horizontally</td>\n</tr>\n<tr>\n<td>ctrl-w=</td>\n<td>Gives the same size to all windows</td>\n</tr>\n<tr>\n<td>10 ctrl-w+</td>\n<td>Add 10 lines to current window</td>\n</tr>\n<tr>\n<td>:vsplit</td>\n<td>file    Split window vertically</td>\n</tr>\n<tr>\n<td>:sview</td>\n<td>file    Same as :split in readonly mode</td>\n</tr>\n<tr>\n<td>:hide</td>\n<td>Close current window</td>\n</tr>\n<tr>\n<td>:­nly</td>\n<td>Close all windows, excepted current</td>\n</tr>\n<tr>\n<td>:b 2</td>\n<td>Open #2 in this window</td>\n</tr>\n</tbody></table>\n<h3 id=\"自动完成\"><a href=\"#自动完成\" class=\"headerlink\" title=\"自动完成\"></a>自动完成</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ctrl+n Ctrl+p (in insert mode)</td>\n<td>Complete word</td>\n</tr>\n<tr>\n<td>Ctrl+x Ctrl+l</td>\n<td>Complete line</td>\n</tr>\n<tr>\n<td>:set dictionary=dict</td>\n<td>Define dict as a dictionnary</td>\n</tr>\n<tr>\n<td>Ctrl+x Ctrl+k</td>\n<td>Complete with dictionnary</td>\n</tr>\n</tbody></table>\n<h3 id=\"标记\"><a href=\"#标记\" class=\"headerlink\" title=\"标记\"></a>标记</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>m {a-z}    Marks current position as {a-z}</td>\n<td></td>\n</tr>\n<tr>\n<td>‘ {a-z}    Move to position {a-z}</td>\n<td></td>\n</tr>\n<tr>\n<td>‘’    Move to previous position</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:ab mail <a href=\"mailto:mail@provider.org\">mail@provider.org</a></td>\n<td>Define mail as abbreviation of <a href=\"mailto:mail@provider.org\">mail@provider.org</a></td>\n</tr>\n</tbody></table>\n<h3 id=\"文本缩进\"><a href=\"#文本缩进\" class=\"headerlink\" title=\"文本缩进\"></a>文本缩进</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:set autoindent</td>\n<td>Turn on auto-indent</td>\n</tr>\n<tr>\n<td>:set smartindent</td>\n<td>Turn on intelligent auto-indent</td>\n</tr>\n<tr>\n<td>:set shiftwidth=4</td>\n<td>Defines 4 spaces as indent size</td>\n</tr>\n<tr>\n<td>ctrl-t, ctrl-d</td>\n<td>Indent/un-indent in insert mode</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>Indent</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>Un-indent</td>\n</tr>\n<tr>\n<td>=%</td>\n<td>Indent the code between parenthesis</td>\n</tr>\n<tr>\n<td>1GVG=</td>\n<td>Indent the whole file</td>\n</tr>\n</tbody></table>\n<h3 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:syntax on</td>\n<td>Turn on syntax highlighting</td>\n</tr>\n<tr>\n<td>:syntax off</td>\n<td>Turn off syntax highlighting</td>\n</tr>\n<tr>\n<td>:set syntax=perl</td>\n<td>Force syntax highlighting</td>\n</tr>\n</tbody></table>\n<h3 id=\"多屏操作\"><a href=\"#多屏操作\" class=\"headerlink\" title=\"多屏操作\"></a>多屏操作</h3><ul>\n<li>vim -On file1 file2 …：垂直分屏打开多个文件</li>\n<li>vim -on file1 file2 …：水平分屏打开多个文件</li>\n<li>ctrl+w s：上下分割当前文件</li>\n<li>ctrl+w v：水平分割当前文件</li>\n<li>:sp filename：上下分割打开新文件</li>\n<li>:vsp filename：水平分割打开新文件</li>\n</ul>\n<p>需要切换工作屏幕时可以使用命令ctrl+w h/j/k/l/w，其中h/j/k/l是按照方向移动，w是移动到下一个屏幕！当你觉得屏幕的顺序有点不爽时可以使用ctrl+w H/J/K/L来移动分屏。另外也可以调整屏幕大小：</p>\n<ul>\n<li>ctrl+w =：所有屏幕都一样的高度</li>\n<li>ctrl+w -：降低高度</li>\n<li>ctrl+w +：增加高度</li>\n</ul>\n<p>在编辑的时候可以在分屏中浏览目录：</p>\n<ul>\n<li>:He：上下分屏，在下面（:He!则在上面）浏览目录</li>\n<li>:Ve：左右分屏，在左面（:Ve!则在右面）浏览目录</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Vim-Commands\"><a href=\"#Vim-Commands\" class=\"headerlink\" title=\"Vim Commands\"></a>Vim Commands</h2><h3 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e filename</td>\n<td>Open filename for edition</td>\n</tr>\n<tr>\n<td>:w</td>\n<td>Save file</td>\n</tr>\n<tr>\n<td>:q</td>\n<td>Exit Vim</td>\n</tr>\n<tr>\n<td>:q!</td>\n<td>Quit without saving</td>\n</tr>\n<tr>\n<td>:x</td>\n<td>Write file (if changes has been made) and exit</td>\n</tr>\n<tr>\n<td>:sav filename</td>\n<td>Saves file as filename</td>\n</tr>\n<tr>\n<td>.</td>\n<td>Repeats the last change made in normal mode</td>\n</tr>\n<tr>\n<td>5.</td>\n<td>Repeats 5 times the last change made in normal mode</td>\n</tr>\n</tbody></table>\n<h3 id=\"在文件中移动\"><a href=\"#在文件中移动\" class=\"headerlink\" title=\"在文件中移动\"></a>在文件中移动</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>k</td>\n<td>or Up Arrow    move the cursor up one line</td>\n</tr>\n<tr>\n<td>j</td>\n<td>or Down Arrow    move the cursor down one line</td>\n</tr>\n<tr>\n<td>e</td>\n<td>move the cursor to the end of the word</td>\n</tr>\n<tr>\n<td>b</td>\n<td>move the cursor to the beginning of the word</td>\n</tr>\n<tr>\n<td>0</td>\n<td>move the cursor to the beginning of the line</td>\n</tr>\n<tr>\n<td>G</td>\n<td>move the cursor to the end of the file</td>\n</tr>\n<tr>\n<td>gg</td>\n<td>move the cursor to the beginning of the file</td>\n</tr>\n<tr>\n<td>L</td>\n<td>move the cursor to the bottom of the screen</td>\n</tr>\n<tr>\n<td>:59</td>\n<td>move cursor to line 59. Replace 59 by the desired line number.</td>\n</tr>\n<tr>\n<td>20|</td>\n<td>move cursor to column 20.</td>\n</tr>\n<tr>\n<td>%</td>\n<td>Move cursor to matching parenthesis</td>\n</tr>\n<tr>\n<td>[[</td>\n<td>Jump to function start</td>\n</tr>\n<tr>\n<td>[{</td>\n<td>Jump to block start</td>\n</tr>\n</tbody></table>\n<h3 id=\"剪切、拷贝和粘贴\"><a href=\"#剪切、拷贝和粘贴\" class=\"headerlink\" title=\"剪切、拷贝和粘贴\"></a>剪切、拷贝和粘贴</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>y</td>\n<td>Copy the selected text to clipboard</td>\n</tr>\n<tr>\n<td>p</td>\n<td>Paste clipboard contents</td>\n</tr>\n<tr>\n<td>dd</td>\n<td>Cut current line</td>\n</tr>\n<tr>\n<td>yy</td>\n<td>Copy current line</td>\n</tr>\n<tr>\n<td>y$</td>\n<td>Copy to end of line</td>\n</tr>\n<tr>\n<td>D</td>\n<td>Cut to end of line</td>\n</tr>\n</tbody></table>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>/word</td>\n<td>Search word from top to bottom</td>\n</tr>\n<tr>\n<td>?word</td>\n<td>Search word from bottom to top</td>\n</tr>\n<tr>\n<td>*</td>\n<td>Search the word under cursor</td>\n</tr>\n<tr>\n<td>/\\cstring</td>\n<td>Search STRING or string, case insensitive</td>\n</tr>\n<tr>\n<td>/jo[ha]n</td>\n<td>Search john or joan</td>\n</tr>\n<tr>\n<td>/\\&lt; the</td>\n<td>Search the, theatre or then</td>\n</tr>\n<tr>\n<td>/the\\&gt;</td>\n<td>Search the or breathe</td>\n</tr>\n<tr>\n<td>/\\&lt; the\\&gt;</td>\n<td>Search the</td>\n</tr>\n<tr>\n<td>/\\&lt; ¦.\\&gt;</td>\n<td>Search all words of 4 letters</td>\n</tr>\n<tr>\n<td>/\\/</td>\n<td>Search fred but not alfred or frederick</td>\n</tr>\n<tr>\n<td>/fred\\</td>\n<td>joe    Search fred or joe</td>\n</tr>\n<tr>\n<td>/\\&lt;\\d\\d\\d\\d&gt;</td>\n<td>Search exactly 4 digits</td>\n</tr>\n<tr>\n<td>/^\\n{3}</td>\n<td>Find 3 empty lines</td>\n</tr>\n<tr>\n<td>:bufdo /searchstr/</td>\n<td>Search in all open files</td>\n</tr>\n<tr>\n<td>bufdo %s/something/somethingelse/g</td>\n<td>Search something in all the open buffers and replace it with somethingelse</td>\n</tr>\n</tbody></table>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:%s/old/new/g</td>\n<td>Replace all occurrences of old by new in file</td>\n</tr>\n<tr>\n<td>:%s/onward/forward/gi</td>\n<td>Replace onward by forward, case unsensitive</td>\n</tr>\n<tr>\n<td>:%s/old/new/gc</td>\n<td>Replace all occurrences with confirmation</td>\n</tr>\n<tr>\n<td>:2,35s/old/new/g</td>\n<td>Replace all occurrences between lines 2 and 35</td>\n</tr>\n<tr>\n<td>:5,$s/old/new/g</td>\n<td>Replace all occurrences from line 5 to EOF</td>\n</tr>\n<tr>\n<td>:%s/^/hello/g</td>\n<td>Replace the beginning of each line by hello</td>\n</tr>\n<tr>\n<td>:%s/$/Harry/g</td>\n<td>Replace the end of each line by Harry</td>\n</tr>\n<tr>\n<td>:%s/onward/forward/gi</td>\n<td>Replace onward by forward, case unsensitive</td>\n</tr>\n<tr>\n<td>:%s/ *$//g</td>\n<td>Delete all white spaces</td>\n</tr>\n<tr>\n<td>:g/string/d</td>\n<td>Delete all lines containing string</td>\n</tr>\n<tr>\n<td>:v/string/d</td>\n<td>Delete all lines containing which didn’t contain string</td>\n</tr>\n<tr>\n<td>:s/Bill/Steve/</td>\n<td>Replace the first occurrence of Bill by Steve in current line</td>\n</tr>\n<tr>\n<td>:s/Bill/Steve/g</td>\n<td>Replace Bill by Steve in current line</td>\n</tr>\n<tr>\n<td>:%s/Bill/Steve/g</td>\n<td>Replace Bill by Steve in all the file</td>\n</tr>\n<tr>\n<td>:%s/^M//g</td>\n<td>Delete DOS carriage returns (^M)</td>\n</tr>\n<tr>\n<td>:%s/\\r/\\r/g</td>\n<td>Transform DOS carriage returns in returns</td>\n</tr>\n<tr>\n<td>:%s#&lt;[^&gt;]+&gt;##g</td>\n<td>Delete HTML tags but keeps text</td>\n</tr>\n<tr>\n<td>:%s/^(.*)\\n\\1$/\\1/</td>\n<td>Delete lines which appears twice</td>\n</tr>\n<tr>\n<td>Ctrl+a</td>\n<td>Increment number under the cursor</td>\n</tr>\n<tr>\n<td>Ctrl+x</td>\n<td>Decrement number under cursor</td>\n</tr>\n<tr>\n<td>ggVGg?</td>\n<td>Change text to Rot13</td>\n</tr>\n</tbody></table>\n<h3 id=\"大小写\"><a href=\"#大小写\" class=\"headerlink\" title=\"大小写\"></a>大小写</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Vu</td>\n<td>Lowercase line</td>\n</tr>\n<tr>\n<td>VU</td>\n<td>Uppercase line</td>\n</tr>\n<tr>\n<td>g~~</td>\n<td>Invert case</td>\n</tr>\n<tr>\n<td>vEU</td>\n<td>Switch word to uppercase</td>\n</tr>\n<tr>\n<td>vE~</td>\n<td>Modify word case</td>\n</tr>\n<tr>\n<td>ggguG</td>\n<td>Set all text to lowercase</td>\n</tr>\n<tr>\n<td>gggUG</td>\n<td>Set all text to uppercase</td>\n</tr>\n<tr>\n<td>:set ignorecase</td>\n<td>Ignore case in searches</td>\n</tr>\n<tr>\n<td>:set smartcase</td>\n<td>Ignore case in searches excepted if an uppercase letter is used</td>\n</tr>\n<tr>\n<td>:%s/&lt;./\\u&amp;/g</td>\n<td>Sets first letter of each word to uppercase</td>\n</tr>\n<tr>\n<td>:%s/&lt;./\\l&amp;/g</td>\n<td>Sets first letter of each word to lowercase</td>\n</tr>\n<tr>\n<td>:%s/.*/\\u&amp;</td>\n<td>Sets first letter of each line to uppercase</td>\n</tr>\n<tr>\n<td>:%s/.*/\\l&amp;</td>\n<td>Sets first letter of each line to lowercase</td>\n</tr>\n</tbody></table>\n<h3 id=\"读写文件\"><a href=\"#读写文件\" class=\"headerlink\" title=\"读写文件\"></a>读写文件</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:1,10 w outfile</td>\n<td>Saves lines 1 to 10 in outfile</td>\n</tr>\n<tr>\n<td>:1,10 w &gt;&gt; outfile</td>\n<td>Appends lines 1 to 10 to outfile</td>\n</tr>\n<tr>\n<td>:r infile</td>\n<td>Insert the content of infile</td>\n</tr>\n<tr>\n<td>:23r infile</td>\n<td>Insert the content of infile under l</td>\n</tr>\n</tbody></table>\n<h3 id=\"文件浏览器\"><a href=\"#文件浏览器\" class=\"headerlink\" title=\"文件浏览器\"></a>文件浏览器</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e .</td>\n<td>Open integrated file explorer</td>\n</tr>\n<tr>\n<td>:Sex</td>\n<td>Split window and open integrated file explorer</td>\n</tr>\n<tr>\n<td>:Sex!</td>\n<td>Same as :Sex but split window vertically</td>\n</tr>\n<tr>\n<td>:browse e</td>\n<td>Graphical file explorer</td>\n</tr>\n<tr>\n<td>:ls</td>\n<td>List buffers</td>\n</tr>\n<tr>\n<td>:cd ..</td>\n<td>Move to parent directory</td>\n</tr>\n<tr>\n<td>:args</td>\n<td>List files</td>\n</tr>\n<tr>\n<td>:args *.php</td>\n<td>Open file list</td>\n</tr>\n<tr>\n<td>:grep expression *.php</td>\n<td>Returns a list of .php files contening expression</td>\n</tr>\n<tr>\n<td>gf</td>\n<td>Open file name under cursor</td>\n</tr>\n</tbody></table>\n<h3 id=\"和-Unix-系统交互\"><a href=\"#和-Unix-系统交互\" class=\"headerlink\" title=\"和 Unix 系统交互\"></a>和 Unix 系统交互</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:!pwd</td>\n<td>Execute the pwd unix command, then returns to Vi</td>\n</tr>\n<tr>\n<td>!!pwd</td>\n<td>Execute the pwd unix command and insert output in file</td>\n</tr>\n<tr>\n<td>:sh</td>\n<td>Temporary returns to Unix</td>\n</tr>\n<tr>\n<td>$exit</td>\n<td>Retourns to Vi</td>\n</tr>\n</tbody></table>\n<h3 id=\"对齐\"><a href=\"#对齐\" class=\"headerlink\" title=\"对齐\"></a>对齐</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:%!fmt</td>\n<td>Align all lines</td>\n</tr>\n<tr>\n<td>!}fmt</td>\n<td>Align all lines at the current position</td>\n</tr>\n<tr>\n<td>5!!fmt</td>\n<td>Align the next 5 lines</td>\n</tr>\n</tbody></table>\n<h3 id=\"选项卡-窗口\"><a href=\"#选项卡-窗口\" class=\"headerlink\" title=\"选项卡/窗口\"></a>选项卡/窗口</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:tabnew</td>\n<td>Creates a new tab</td>\n</tr>\n<tr>\n<td>gt</td>\n<td>Show next tab</td>\n</tr>\n<tr>\n<td>:tabfirst</td>\n<td>Show first tab</td>\n</tr>\n<tr>\n<td>:tablast</td>\n<td>Show last tab</td>\n</tr>\n<tr>\n<td>:tabm n(position)</td>\n<td>Rearrange tabs</td>\n</tr>\n<tr>\n<td>:tabdo %s/foo/bar/g</td>\n<td>Execute a command in all tabs</td>\n</tr>\n<tr>\n<td>:tab ball</td>\n<td>Puts all open files in tabs</td>\n</tr>\n<tr>\n<td>:new abc.txt</td>\n<td>Edit abc.txt in new window</td>\n</tr>\n</tbody></table>\n<h3 id=\"分屏显示\"><a href=\"#分屏显示\" class=\"headerlink\" title=\"分屏显示\"></a>分屏显示</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:e filename</td>\n<td>Edit filename in current window</td>\n</tr>\n<tr>\n<td>:split filename</td>\n<td>Split the window and open filename</td>\n</tr>\n<tr>\n<td>ctrl-w up arrow</td>\n<td>Puts cursor in top window</td>\n</tr>\n<tr>\n<td>ctrl-w ctrl-w</td>\n<td>Puts cursor in next window</td>\n</tr>\n<tr>\n<td>ctrl-w_</td>\n<td>Maximize current window vertically</td>\n</tr>\n<tr>\n<td>ctrl-w|</td>\n<td>Maximize current window horizontally</td>\n</tr>\n<tr>\n<td>ctrl-w=</td>\n<td>Gives the same size to all windows</td>\n</tr>\n<tr>\n<td>10 ctrl-w+</td>\n<td>Add 10 lines to current window</td>\n</tr>\n<tr>\n<td>:vsplit</td>\n<td>file    Split window vertically</td>\n</tr>\n<tr>\n<td>:sview</td>\n<td>file    Same as :split in readonly mode</td>\n</tr>\n<tr>\n<td>:hide</td>\n<td>Close current window</td>\n</tr>\n<tr>\n<td>:­nly</td>\n<td>Close all windows, excepted current</td>\n</tr>\n<tr>\n<td>:b 2</td>\n<td>Open #2 in this window</td>\n</tr>\n</tbody></table>\n<h3 id=\"自动完成\"><a href=\"#自动完成\" class=\"headerlink\" title=\"自动完成\"></a>自动完成</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ctrl+n Ctrl+p (in insert mode)</td>\n<td>Complete word</td>\n</tr>\n<tr>\n<td>Ctrl+x Ctrl+l</td>\n<td>Complete line</td>\n</tr>\n<tr>\n<td>:set dictionary=dict</td>\n<td>Define dict as a dictionnary</td>\n</tr>\n<tr>\n<td>Ctrl+x Ctrl+k</td>\n<td>Complete with dictionnary</td>\n</tr>\n</tbody></table>\n<h3 id=\"标记\"><a href=\"#标记\" class=\"headerlink\" title=\"标记\"></a>标记</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>m {a-z}    Marks current position as {a-z}</td>\n<td></td>\n</tr>\n<tr>\n<td>‘ {a-z}    Move to position {a-z}</td>\n<td></td>\n</tr>\n<tr>\n<td>‘’    Move to previous position</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:ab mail <a href=\"mailto:mail@provider.org\">mail@provider.org</a></td>\n<td>Define mail as abbreviation of <a href=\"mailto:mail@provider.org\">mail@provider.org</a></td>\n</tr>\n</tbody></table>\n<h3 id=\"文本缩进\"><a href=\"#文本缩进\" class=\"headerlink\" title=\"文本缩进\"></a>文本缩进</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:set autoindent</td>\n<td>Turn on auto-indent</td>\n</tr>\n<tr>\n<td>:set smartindent</td>\n<td>Turn on intelligent auto-indent</td>\n</tr>\n<tr>\n<td>:set shiftwidth=4</td>\n<td>Defines 4 spaces as indent size</td>\n</tr>\n<tr>\n<td>ctrl-t, ctrl-d</td>\n<td>Indent/un-indent in insert mode</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>Indent</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>Un-indent</td>\n</tr>\n<tr>\n<td>=%</td>\n<td>Indent the code between parenthesis</td>\n</tr>\n<tr>\n<td>1GVG=</td>\n<td>Indent the whole file</td>\n</tr>\n</tbody></table>\n<h3 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h3><table>\n<thead>\n<tr>\n<th>Commands</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>:syntax on</td>\n<td>Turn on syntax highlighting</td>\n</tr>\n<tr>\n<td>:syntax off</td>\n<td>Turn off syntax highlighting</td>\n</tr>\n<tr>\n<td>:set syntax=perl</td>\n<td>Force syntax highlighting</td>\n</tr>\n</tbody></table>\n<h3 id=\"多屏操作\"><a href=\"#多屏操作\" class=\"headerlink\" title=\"多屏操作\"></a>多屏操作</h3><ul>\n<li>vim -On file1 file2 …：垂直分屏打开多个文件</li>\n<li>vim -on file1 file2 …：水平分屏打开多个文件</li>\n<li>ctrl+w s：上下分割当前文件</li>\n<li>ctrl+w v：水平分割当前文件</li>\n<li>:sp filename：上下分割打开新文件</li>\n<li>:vsp filename：水平分割打开新文件</li>\n</ul>\n<p>需要切换工作屏幕时可以使用命令ctrl+w h/j/k/l/w，其中h/j/k/l是按照方向移动，w是移动到下一个屏幕！当你觉得屏幕的顺序有点不爽时可以使用ctrl+w H/J/K/L来移动分屏。另外也可以调整屏幕大小：</p>\n<ul>\n<li>ctrl+w =：所有屏幕都一样的高度</li>\n<li>ctrl+w -：降低高度</li>\n<li>ctrl+w +：增加高度</li>\n</ul>\n<p>在编辑的时候可以在分屏中浏览目录：</p>\n<ul>\n<li>:He：上下分屏，在下面（:He!则在上面）浏览目录</li>\n<li>:Ve：左右分屏，在左面（:Ve!则在右面）浏览目录</li>\n</ul>\n"},{"layout":"post","title":"XHprof安装与使用","date":"2015-07-27T16:00:00.000Z","description":"XHprof安装与使用","_content":"\nXHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数据计算的报告/后处理阶段。在数据收集时，XHProfd通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循环。XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。\n\n### 安装\n在Ubuntu下安装XHprof的过程如下：\n\n```\ngit clone https://github.com/facebook/xhprof.git\napt-get upgrade\napt-get install php5-dev\napt-get update\napt-get install php5-dev —fix-missing\ncd extension\nphpize\n./configure -with-php-config=/usr/bin/php-config\nmake&&make install\nmake test\n```\n\n然后找到php.ini添加：\n\n```\n[xhprof]\nextension=xhprof.so\n;#\n;# directory used by default implementation of the iXHProfRuns\n;# interface (namely, the XHProfRuns_Default class) for storing\n;# XHProf runs.\n;#\nxhprof.output_dir=/var/log/xhprof/\n```\n\n创建目录\n\n```\nsudo mkdir /var/log/xhprof\n```\n更改目录权限\n\n```\nsudo chown www-data:www-data /var/log/xhprof\n```\n\n安装graphviz ，以图形形式查看结果\n\n```\napt-get install graphviz\n```\n\n### 检测\n\n检查是否安装成功 通常可使用extension_loaded函数进行检测：\n\n```\n$ php -r \"var_dump(extension_loaded('xhprof'));\"\n```\n返回结果为true表示安装成功。\n或者：\n\n```\n$ php -m | grep xhprof\n```\n如果有匹配结果也表示安装成功了\n或者:web中调用phpinfo查看是否成功安装xhprof（需要重启php服务，如果独立的php-fpm，需重启php-fpm，如果以module挂载在web服务器上，需重启web服务器）\n\n### XHProf测试\n\nXHProf自带了一个sample.php测试的例子,稍微修改一下就可以使用了\n\n```\ncp -rf examples/ [可访问目录]\n```\n修改sample.php让它也显示cpu和内存信息\n\n```\nvim /var/www/html/examples/sample.php\n```\n将xhprof_enable()改为 \n\n```\nxhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY)\n```\n将最后一段echo一行修改为：\n\n```\necho 'count';\n```\n刷新页面后会在/var/log/xhprof中生成新的文件，配置号xhprof/xhprof_html就可以查看\n\n\n### XHProf输出说明\n\n* Inclusive Time ： 包括子函数所有执行时间。\n* Exclusive Time/Self Time ： 函数执行本身花费的时间，不包括子树执行时间。\n* Wall Time ： 花去了的时间或挂钟时间。\n* CPU Time ： 用户耗的时间+ 内核耗的时间\n* Inclusive CPU ： 包括子函数一起所占用的CPU\n* Exclusive CPU ： 函数自身所占用的CPU\n\n\n### 参考资料\n\n* [知名博主：xhprof简介和安装](http://stenote.com/2013/09/xhprof简介和安装/)\n* [php性能测试工具--xhprof](http://blog.chinaunix.net/uid-10449864-id-3013810.html)\n","source":"_posts/XHprof安装与使用.md","raw":"---\nlayout: post\ntitle: \"XHprof安装与使用\"\ndate:   2015-07-28\ndescription: XHprof安装与使用\ncategories: PHP\ntags: php\n---\n\nXHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数据计算的报告/后处理阶段。在数据收集时，XHProfd通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循环。XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。\n\n### 安装\n在Ubuntu下安装XHprof的过程如下：\n\n```\ngit clone https://github.com/facebook/xhprof.git\napt-get upgrade\napt-get install php5-dev\napt-get update\napt-get install php5-dev —fix-missing\ncd extension\nphpize\n./configure -with-php-config=/usr/bin/php-config\nmake&&make install\nmake test\n```\n\n然后找到php.ini添加：\n\n```\n[xhprof]\nextension=xhprof.so\n;#\n;# directory used by default implementation of the iXHProfRuns\n;# interface (namely, the XHProfRuns_Default class) for storing\n;# XHProf runs.\n;#\nxhprof.output_dir=/var/log/xhprof/\n```\n\n创建目录\n\n```\nsudo mkdir /var/log/xhprof\n```\n更改目录权限\n\n```\nsudo chown www-data:www-data /var/log/xhprof\n```\n\n安装graphviz ，以图形形式查看结果\n\n```\napt-get install graphviz\n```\n\n### 检测\n\n检查是否安装成功 通常可使用extension_loaded函数进行检测：\n\n```\n$ php -r \"var_dump(extension_loaded('xhprof'));\"\n```\n返回结果为true表示安装成功。\n或者：\n\n```\n$ php -m | grep xhprof\n```\n如果有匹配结果也表示安装成功了\n或者:web中调用phpinfo查看是否成功安装xhprof（需要重启php服务，如果独立的php-fpm，需重启php-fpm，如果以module挂载在web服务器上，需重启web服务器）\n\n### XHProf测试\n\nXHProf自带了一个sample.php测试的例子,稍微修改一下就可以使用了\n\n```\ncp -rf examples/ [可访问目录]\n```\n修改sample.php让它也显示cpu和内存信息\n\n```\nvim /var/www/html/examples/sample.php\n```\n将xhprof_enable()改为 \n\n```\nxhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY)\n```\n将最后一段echo一行修改为：\n\n```\necho 'count';\n```\n刷新页面后会在/var/log/xhprof中生成新的文件，配置号xhprof/xhprof_html就可以查看\n\n\n### XHProf输出说明\n\n* Inclusive Time ： 包括子函数所有执行时间。\n* Exclusive Time/Self Time ： 函数执行本身花费的时间，不包括子树执行时间。\n* Wall Time ： 花去了的时间或挂钟时间。\n* CPU Time ： 用户耗的时间+ 内核耗的时间\n* Inclusive CPU ： 包括子函数一起所占用的CPU\n* Exclusive CPU ： 函数自身所占用的CPU\n\n\n### 参考资料\n\n* [知名博主：xhprof简介和安装](http://stenote.com/2013/09/xhprof简介和安装/)\n* [php性能测试工具--xhprof](http://blog.chinaunix.net/uid-10449864-id-3013810.html)\n","slug":"XHprof安装与使用","published":1,"updated":"2020-06-14T15:57:16.337Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11x001dmp844ec406zx","content":"<p>XHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数据计算的报告/后处理阶段。在数据收集时，XHProfd通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循环。XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>在Ubuntu下安装XHprof的过程如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;xhprof.git</span><br><span class=\"line\">apt-get upgrade</span><br><span class=\"line\">apt-get install php5-dev</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install php5-dev —fix-missing</span><br><span class=\"line\">cd extension</span><br><span class=\"line\">phpize</span><br><span class=\"line\">.&#x2F;configure -with-php-config&#x3D;&#x2F;usr&#x2F;bin&#x2F;php-config</span><br><span class=\"line\">make&amp;&amp;make install</span><br><span class=\"line\">make test</span><br></pre></td></tr></table></figure>\n\n<p>然后找到php.ini添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xhprof]</span><br><span class=\"line\">extension&#x3D;xhprof.so</span><br><span class=\"line\">;#</span><br><span class=\"line\">;# directory used by default implementation of the iXHProfRuns</span><br><span class=\"line\">;# interface (namely, the XHProfRuns_Default class) for storing</span><br><span class=\"line\">;# XHProf runs.</span><br><span class=\"line\">;#</span><br><span class=\"line\">xhprof.output_dir&#x3D;&#x2F;var&#x2F;log&#x2F;xhprof&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>创建目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir &#x2F;var&#x2F;log&#x2F;xhprof</span><br></pre></td></tr></table></figure>\n<p>更改目录权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown www-data:www-data &#x2F;var&#x2F;log&#x2F;xhprof</span><br></pre></td></tr></table></figure>\n\n<p>安装graphviz ，以图形形式查看结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install graphviz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测\"><a href=\"#检测\" class=\"headerlink\" title=\"检测\"></a>检测</h3><p>检查是否安装成功 通常可使用extension_loaded函数进行检测：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php -r &quot;var_dump(extension_loaded(&#39;xhprof&#39;));&quot;</span><br></pre></td></tr></table></figure>\n<p>返回结果为true表示安装成功。<br>或者：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php -m | grep xhprof</span><br></pre></td></tr></table></figure>\n<p>如果有匹配结果也表示安装成功了<br>或者:web中调用phpinfo查看是否成功安装xhprof（需要重启php服务，如果独立的php-fpm，需重启php-fpm，如果以module挂载在web服务器上，需重启web服务器）</p>\n<h3 id=\"XHProf测试\"><a href=\"#XHProf测试\" class=\"headerlink\" title=\"XHProf测试\"></a>XHProf测试</h3><p>XHProf自带了一个sample.php测试的例子,稍微修改一下就可以使用了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -rf examples&#x2F; [可访问目录]</span><br></pre></td></tr></table></figure>\n<p>修改sample.php让它也显示cpu和内存信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;var&#x2F;www&#x2F;html&#x2F;examples&#x2F;sample.php</span><br></pre></td></tr></table></figure>\n<p>将xhprof_enable()改为 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY)</span><br></pre></td></tr></table></figure>\n<p>将最后一段echo一行修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#39;count&#39;;</span><br></pre></td></tr></table></figure>\n<p>刷新页面后会在/var/log/xhprof中生成新的文件，配置号xhprof/xhprof_html就可以查看</p>\n<h3 id=\"XHProf输出说明\"><a href=\"#XHProf输出说明\" class=\"headerlink\" title=\"XHProf输出说明\"></a>XHProf输出说明</h3><ul>\n<li>Inclusive Time ： 包括子函数所有执行时间。</li>\n<li>Exclusive Time/Self Time ： 函数执行本身花费的时间，不包括子树执行时间。</li>\n<li>Wall Time ： 花去了的时间或挂钟时间。</li>\n<li>CPU Time ： 用户耗的时间+ 内核耗的时间</li>\n<li>Inclusive CPU ： 包括子函数一起所占用的CPU</li>\n<li>Exclusive CPU ： 函数自身所占用的CPU</li>\n</ul>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"http://stenote.com/2013/09/xhprof简介和安装/\" target=\"_blank\" rel=\"noopener\">知名博主：xhprof简介和安装</a></li>\n<li><a href=\"http://blog.chinaunix.net/uid-10449864-id-3013810.html\" target=\"_blank\" rel=\"noopener\">php性能测试工具–xhprof</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>XHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数据计算的报告/后处理阶段。在数据收集时，XHProfd通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循环。XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>在Ubuntu下安装XHprof的过程如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;xhprof.git</span><br><span class=\"line\">apt-get upgrade</span><br><span class=\"line\">apt-get install php5-dev</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install php5-dev —fix-missing</span><br><span class=\"line\">cd extension</span><br><span class=\"line\">phpize</span><br><span class=\"line\">.&#x2F;configure -with-php-config&#x3D;&#x2F;usr&#x2F;bin&#x2F;php-config</span><br><span class=\"line\">make&amp;&amp;make install</span><br><span class=\"line\">make test</span><br></pre></td></tr></table></figure>\n\n<p>然后找到php.ini添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xhprof]</span><br><span class=\"line\">extension&#x3D;xhprof.so</span><br><span class=\"line\">;#</span><br><span class=\"line\">;# directory used by default implementation of the iXHProfRuns</span><br><span class=\"line\">;# interface (namely, the XHProfRuns_Default class) for storing</span><br><span class=\"line\">;# XHProf runs.</span><br><span class=\"line\">;#</span><br><span class=\"line\">xhprof.output_dir&#x3D;&#x2F;var&#x2F;log&#x2F;xhprof&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>创建目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir &#x2F;var&#x2F;log&#x2F;xhprof</span><br></pre></td></tr></table></figure>\n<p>更改目录权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown www-data:www-data &#x2F;var&#x2F;log&#x2F;xhprof</span><br></pre></td></tr></table></figure>\n\n<p>安装graphviz ，以图形形式查看结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install graphviz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检测\"><a href=\"#检测\" class=\"headerlink\" title=\"检测\"></a>检测</h3><p>检查是否安装成功 通常可使用extension_loaded函数进行检测：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php -r &quot;var_dump(extension_loaded(&#39;xhprof&#39;));&quot;</span><br></pre></td></tr></table></figure>\n<p>返回结果为true表示安装成功。<br>或者：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php -m | grep xhprof</span><br></pre></td></tr></table></figure>\n<p>如果有匹配结果也表示安装成功了<br>或者:web中调用phpinfo查看是否成功安装xhprof（需要重启php服务，如果独立的php-fpm，需重启php-fpm，如果以module挂载在web服务器上，需重启web服务器）</p>\n<h3 id=\"XHProf测试\"><a href=\"#XHProf测试\" class=\"headerlink\" title=\"XHProf测试\"></a>XHProf测试</h3><p>XHProf自带了一个sample.php测试的例子,稍微修改一下就可以使用了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -rf examples&#x2F; [可访问目录]</span><br></pre></td></tr></table></figure>\n<p>修改sample.php让它也显示cpu和内存信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;var&#x2F;www&#x2F;html&#x2F;examples&#x2F;sample.php</span><br></pre></td></tr></table></figure>\n<p>将xhprof_enable()改为 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY)</span><br></pre></td></tr></table></figure>\n<p>将最后一段echo一行修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#39;count&#39;;</span><br></pre></td></tr></table></figure>\n<p>刷新页面后会在/var/log/xhprof中生成新的文件，配置号xhprof/xhprof_html就可以查看</p>\n<h3 id=\"XHProf输出说明\"><a href=\"#XHProf输出说明\" class=\"headerlink\" title=\"XHProf输出说明\"></a>XHProf输出说明</h3><ul>\n<li>Inclusive Time ： 包括子函数所有执行时间。</li>\n<li>Exclusive Time/Self Time ： 函数执行本身花费的时间，不包括子树执行时间。</li>\n<li>Wall Time ： 花去了的时间或挂钟时间。</li>\n<li>CPU Time ： 用户耗的时间+ 内核耗的时间</li>\n<li>Inclusive CPU ： 包括子函数一起所占用的CPU</li>\n<li>Exclusive CPU ： 函数自身所占用的CPU</li>\n</ul>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"http://stenote.com/2013/09/xhprof简介和安装/\" target=\"_blank\" rel=\"noopener\">知名博主：xhprof简介和安装</a></li>\n<li><a href=\"http://blog.chinaunix.net/uid-10449864-id-3013810.html\" target=\"_blank\" rel=\"noopener\">php性能测试工具–xhprof</a></li>\n</ul>\n"},{"layout":"post","title":"自动化测试工具之一JMeter","date":"2015-08-17T03:07:00.000Z","description":"JMeter可以用来进行自动化测试以及压力测试","_content":"\n[Mac版本下载地址](http://mac.softpedia.com/get/Developer-Tools/Apache-JMeter.shtml)\n\n# 运行\n安装Java运行环境后，下载解压，直接点击：ApacheJMeter.jar\n\n# 简单尝试\n1. 在Test Plan中添加一个Thread Group, 线程组中可以设定Number of Threads(users), Ramp-Up Period(in seconds)以及Loop Count。\n2. 添加 Sample\\HTTP Request, 在此添加Server Name or IP\n3. 添加 Lisenter\\View Results Tree\n此时点击Start后，可以在View Results Tree查看测试结果","source":"_posts/autotest-tool-jmeter.md","raw":"---\nlayout: post\ntitle: \"自动化测试工具之一JMeter\"\ndate:   2015-08-17 11:07\ndescription: JMeter可以用来进行自动化测试以及压力测试\ncategories: Test\ntags: test\n---\n\n[Mac版本下载地址](http://mac.softpedia.com/get/Developer-Tools/Apache-JMeter.shtml)\n\n# 运行\n安装Java运行环境后，下载解压，直接点击：ApacheJMeter.jar\n\n# 简单尝试\n1. 在Test Plan中添加一个Thread Group, 线程组中可以设定Number of Threads(users), Ramp-Up Period(in seconds)以及Loop Count。\n2. 添加 Sample\\HTTP Request, 在此添加Server Name or IP\n3. 添加 Lisenter\\View Results Tree\n此时点击Start后，可以在View Results Tree查看测试结果","slug":"autotest-tool-jmeter","published":1,"updated":"2020-06-14T15:57:16.313Z","comments":1,"photos":[],"link":"","_id":"ckbfpl11y001fmp845i9kh8uf","content":"<p><a href=\"http://mac.softpedia.com/get/Developer-Tools/Apache-JMeter.shtml\" target=\"_blank\" rel=\"noopener\">Mac版本下载地址</a></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>安装Java运行环境后，下载解压，直接点击：ApacheJMeter.jar</p>\n<h1 id=\"简单尝试\"><a href=\"#简单尝试\" class=\"headerlink\" title=\"简单尝试\"></a>简单尝试</h1><ol>\n<li>在Test Plan中添加一个Thread Group, 线程组中可以设定Number of Threads(users), Ramp-Up Period(in seconds)以及Loop Count。</li>\n<li>添加 Sample\\HTTP Request, 在此添加Server Name or IP</li>\n<li>添加 Lisenter\\View Results Tree<br>此时点击Start后，可以在View Results Tree查看测试结果</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://mac.softpedia.com/get/Developer-Tools/Apache-JMeter.shtml\" target=\"_blank\" rel=\"noopener\">Mac版本下载地址</a></p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>安装Java运行环境后，下载解压，直接点击：ApacheJMeter.jar</p>\n<h1 id=\"简单尝试\"><a href=\"#简单尝试\" class=\"headerlink\" title=\"简单尝试\"></a>简单尝试</h1><ol>\n<li>在Test Plan中添加一个Thread Group, 线程组中可以设定Number of Threads(users), Ramp-Up Period(in seconds)以及Loop Count。</li>\n<li>添加 Sample\\HTTP Request, 在此添加Server Name or IP</li>\n<li>添加 Lisenter\\View Results Tree<br>此时点击Start后，可以在View Results Tree查看测试结果</li>\n</ol>\n"},{"layout":"post","title":"Create Site","date":"2015-03-23T16:00:00.000Z","description":"Create Web Site Base On Laravel5","_content":"\n* Create project\n\n```\ncomposer create-project laravel/laravel learnlaravel5\n```\n* Launch project\n\n```\nphp -S 0.0.0.0:1234\n\n```\nThen you can see the site with http://localhost:1234\n\n* Add simple auth\n\n```\nphp artisan make:auth\n```\nAdd you can see the page as follow:\n\n![add auth](source/posts/images/1/1.jpg)\n\nThen you need create database, configurate database .env file & migrate. \n\nmigrate command: \n```\nphp artisan migrate\n```\n. Now you can register and login the system, but the home page need customer login. That because **HomeController function __construct** add auth as follow:\n\n```\npublic function __construct()\n{\n    $this->middleware('auth');\n}\n```\nThen we need change in file *app/Http/Controllers/Auth/AuthController.php*\n```\nprotected $redirectTo = 'admin';\n```. Sometimes our home page need show to every customer, so just delete this construct.\n\n* Add model\n\n```\nphp artisan make:model ModelName\n```\nThen you will get a model class under folder app as follow:\n\n```\n<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass ModelName extends Model\n{\n    //\n}\n```\n* Create table for model\n\n```\nphp artisan make:migration create_modelname_table\n```\nThen a file named ****\\_create\\_modelname\\_table would be created under folder database/migrations. Modify the function up as follow:\n\n```\npublic function up()\n{\n    Schema::create('articles', function(Blueprint $table)\n    {\n        $table->increments('id');\n        $table->string('title');\n        $table->text('body')->nullable();\n        $table->integer('user_id');\n        $table->timestamps();\n    });\n}\n```\nThen migrant again with\n```\nphp artisan migrate\n```\nYou can see the table in database;\n\n* Add controller\n\n```\nphp artisan make:controller SubFolder/NameController\n```\nAfter that the contorller would be created under app/Http/Controllers. Add the function in the controller as follow: \n\n```\npublic function index()\n{\n    return view('admin/article/index')->withArticles(Article::all());\n}\n```\nFor this controller, you need add *index.blade.php* under *resources/views/admin/article* to show data. If use the model in controller, you need add\n```\nuse App\\Model;\n```\nin the controller.\n\n* Add Router\n\nAdd router for admin model, we need configurate auto and namespace as follow:\n\n```\nRoute::group(['middleware' => 'auth', 'namespace' => 'Admin', 'prefix' => 'admin'], function() {\n    Route::get('/', 'HomeController@index');\n    Route::get('article', 'ArticleController@index');\n});\n```\n\nIf you need search, get, update & delete router, you can add router as follow:\n\n```\nRoute::resource('article', 'ArticleController');\n```\nIt's resource control in laravel, you will get 7 routes in project:\n\n|verb|path|action|\n|----|----|----|\n|GET|/article|index|\n| GET |/article/create|create|\n|POST|/article|store|\n| GET |/article/{article}|show|\n| GET |/article/{article}/edit|edit|\n|PUT/PATCH|/article/{article}|update|\n|DELETE|/article/{article}|delete|\n\n\n\n\n[example code](source/posts/code/1/learnlaravel5.tgz)\n","source":"_posts/create-website-base-on-laravel5.md","raw":"---\nlayout: post\ntitle: \"Create Site\"\ndate:   2015-03-24\ndescription: Create Web Site Base On Laravel5\ncategories: PHP\ntags: \n- php\n- laravel\n---\n\n* Create project\n\n```\ncomposer create-project laravel/laravel learnlaravel5\n```\n* Launch project\n\n```\nphp -S 0.0.0.0:1234\n\n```\nThen you can see the site with http://localhost:1234\n\n* Add simple auth\n\n```\nphp artisan make:auth\n```\nAdd you can see the page as follow:\n\n![add auth](source/posts/images/1/1.jpg)\n\nThen you need create database, configurate database .env file & migrate. \n\nmigrate command: \n```\nphp artisan migrate\n```\n. Now you can register and login the system, but the home page need customer login. That because **HomeController function __construct** add auth as follow:\n\n```\npublic function __construct()\n{\n    $this->middleware('auth');\n}\n```\nThen we need change in file *app/Http/Controllers/Auth/AuthController.php*\n```\nprotected $redirectTo = 'admin';\n```. Sometimes our home page need show to every customer, so just delete this construct.\n\n* Add model\n\n```\nphp artisan make:model ModelName\n```\nThen you will get a model class under folder app as follow:\n\n```\n<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass ModelName extends Model\n{\n    //\n}\n```\n* Create table for model\n\n```\nphp artisan make:migration create_modelname_table\n```\nThen a file named ****\\_create\\_modelname\\_table would be created under folder database/migrations. Modify the function up as follow:\n\n```\npublic function up()\n{\n    Schema::create('articles', function(Blueprint $table)\n    {\n        $table->increments('id');\n        $table->string('title');\n        $table->text('body')->nullable();\n        $table->integer('user_id');\n        $table->timestamps();\n    });\n}\n```\nThen migrant again with\n```\nphp artisan migrate\n```\nYou can see the table in database;\n\n* Add controller\n\n```\nphp artisan make:controller SubFolder/NameController\n```\nAfter that the contorller would be created under app/Http/Controllers. Add the function in the controller as follow: \n\n```\npublic function index()\n{\n    return view('admin/article/index')->withArticles(Article::all());\n}\n```\nFor this controller, you need add *index.blade.php* under *resources/views/admin/article* to show data. If use the model in controller, you need add\n```\nuse App\\Model;\n```\nin the controller.\n\n* Add Router\n\nAdd router for admin model, we need configurate auto and namespace as follow:\n\n```\nRoute::group(['middleware' => 'auth', 'namespace' => 'Admin', 'prefix' => 'admin'], function() {\n    Route::get('/', 'HomeController@index');\n    Route::get('article', 'ArticleController@index');\n});\n```\n\nIf you need search, get, update & delete router, you can add router as follow:\n\n```\nRoute::resource('article', 'ArticleController');\n```\nIt's resource control in laravel, you will get 7 routes in project:\n\n|verb|path|action|\n|----|----|----|\n|GET|/article|index|\n| GET |/article/create|create|\n|POST|/article|store|\n| GET |/article/{article}|show|\n| GET |/article/{article}/edit|edit|\n|PUT/PATCH|/article/{article}|update|\n|DELETE|/article/{article}|delete|\n\n\n\n\n[example code](source/posts/code/1/learnlaravel5.tgz)\n","slug":"create-website-base-on-laravel5","published":1,"updated":"2020-06-14T15:57:16.323Z","comments":1,"photos":[],"link":"","_id":"ckbfpl120001kmp841avs55wq","content":"<ul>\n<li>Create project</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer create-project laravel&#x2F;laravel learnlaravel5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Launch project</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -S 0.0.0.0:1234</span><br></pre></td></tr></table></figure>\n<p>Then you can see the site with <a href=\"http://localhost:1234\" target=\"_blank\" rel=\"noopener\">http://localhost:1234</a></p>\n<ul>\n<li>Add simple auth</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:auth</span><br></pre></td></tr></table></figure>\n<p>Add you can see the page as follow:</p>\n<p><img src=\"source/posts/images/1/1.jpg\" alt=\"add auth\"></p>\n<p>Then you need create database, configurate database .env file &amp; migrate. </p>\n<p>migrate command: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure>\n<p>. Now you can register and login the system, but the home page need customer login. That because <strong>HomeController function __construct</strong> add auth as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function __construct()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $this-&gt;middleware(&#39;auth&#39;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Then we need change in file <em>app/Http/Controllers/Auth/AuthController.php</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protected $redirectTo &#x3D; &#39;admin&#39;;</span><br><span class=\"line\">&#96;&#96;&#96;. Sometimes our home page need show to every customer, so just delete this construct.</span><br><span class=\"line\"></span><br><span class=\"line\">* Add model</span><br></pre></td></tr></table></figure>\n<p>php artisan make:model ModelName</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then you will get a model class under folder app as follow:</span><br></pre></td></tr></table></figure>\n<p>&lt;?php</p>\n<p>namespace App;</p>\n<p>use Illuminate\\Database\\Eloquent\\Model;</p>\n<p>class ModelName extends Model<br>{<br>    //<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Create table for model</span><br></pre></td></tr></table></figure>\n<p>php artisan make:migration create_modelname_table</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then a file named ****\\_create\\_modelname\\_table would be created under folder database&#x2F;migrations. Modify the function up as follow:</span><br></pre></td></tr></table></figure>\n<p>public function up()<br>{<br>    Schema::create(‘articles’, function(Blueprint $table)<br>    {<br>        $table-&gt;increments(‘id’);<br>        $table-&gt;string(‘title’);<br>        $table-&gt;text(‘body’)-&gt;nullable();<br>        $table-&gt;integer(‘user_id’);<br>        $table-&gt;timestamps();<br>    });<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then migrant again with</span><br></pre></td></tr></table></figure>\n<p>php artisan migrate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You can see the table in database;</span><br><span class=\"line\"></span><br><span class=\"line\">* Add controller</span><br></pre></td></tr></table></figure>\n<p>php artisan make:controller SubFolder/NameController</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">After that the contorller would be created under app&#x2F;Http&#x2F;Controllers. Add the function in the controller as follow:</span><br></pre></td></tr></table></figure>\n<p>public function index()<br>{<br>    return view(‘admin/article/index’)-&gt;withArticles(Article::all());<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For this controller, you need add *index.blade.php* under *resources&#x2F;views&#x2F;admin&#x2F;article* to show data. If use the model in controller, you need add</span><br></pre></td></tr></table></figure>\n<p>use App\\Model;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">in the controller.</span><br><span class=\"line\"></span><br><span class=\"line\">* Add Router</span><br><span class=\"line\"></span><br><span class=\"line\">Add router for admin model, we need configurate auto and namespace as follow:</span><br></pre></td></tr></table></figure>\n<p>Route::group([‘middleware’ =&gt; ‘auth’, ‘namespace’ =&gt; ‘Admin’, ‘prefix’ =&gt; ‘admin’], function() {<br>    Route::get(‘/‘, ‘HomeController@index’);<br>    Route::get(‘article’, ‘ArticleController@index’);<br>});</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">If you need search, get, update &amp; delete router, you can add router as follow:</span><br></pre></td></tr></table></figure>\n<p>Route::resource(‘article’, ‘ArticleController’);</p>\n<pre><code>It&apos;s resource control in laravel, you will get 7 routes in project:\n\n|verb|path|action|\n|----|----|----|\n|GET|/article|index|\n| GET |/article/create|create|\n|POST|/article|store|\n| GET |/article/{article}|show|\n| GET |/article/{article}/edit|edit|\n|PUT/PATCH|/article/{article}|update|\n|DELETE|/article/{article}|delete|\n\n\n\n\n[example code](source/posts/code/1/learnlaravel5.tgz)</code></pre>","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Create project</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer create-project laravel&#x2F;laravel learnlaravel5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Launch project</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -S 0.0.0.0:1234</span><br></pre></td></tr></table></figure>\n<p>Then you can see the site with <a href=\"http://localhost:1234\" target=\"_blank\" rel=\"noopener\">http://localhost:1234</a></p>\n<ul>\n<li>Add simple auth</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:auth</span><br></pre></td></tr></table></figure>\n<p>Add you can see the page as follow:</p>\n<p><img src=\"source/posts/images/1/1.jpg\" alt=\"add auth\"></p>\n<p>Then you need create database, configurate database .env file &amp; migrate. </p>\n<p>migrate command: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure>\n<p>. Now you can register and login the system, but the home page need customer login. That because <strong>HomeController function __construct</strong> add auth as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function __construct()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $this-&gt;middleware(&#39;auth&#39;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Then we need change in file <em>app/Http/Controllers/Auth/AuthController.php</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">protected $redirectTo &#x3D; &#39;admin&#39;;</span><br><span class=\"line\">&#96;&#96;&#96;. Sometimes our home page need show to every customer, so just delete this construct.</span><br><span class=\"line\"></span><br><span class=\"line\">* Add model</span><br></pre></td></tr></table></figure>\n<p>php artisan make:model ModelName</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then you will get a model class under folder app as follow:</span><br></pre></td></tr></table></figure>\n<p>&lt;?php</p>\n<p>namespace App;</p>\n<p>use Illuminate\\Database\\Eloquent\\Model;</p>\n<p>class ModelName extends Model<br>{<br>    //<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Create table for model</span><br></pre></td></tr></table></figure>\n<p>php artisan make:migration create_modelname_table</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then a file named ****\\_create\\_modelname\\_table would be created under folder database&#x2F;migrations. Modify the function up as follow:</span><br></pre></td></tr></table></figure>\n<p>public function up()<br>{<br>    Schema::create(‘articles’, function(Blueprint $table)<br>    {<br>        $table-&gt;increments(‘id’);<br>        $table-&gt;string(‘title’);<br>        $table-&gt;text(‘body’)-&gt;nullable();<br>        $table-&gt;integer(‘user_id’);<br>        $table-&gt;timestamps();<br>    });<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then migrant again with</span><br></pre></td></tr></table></figure>\n<p>php artisan migrate</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You can see the table in database;</span><br><span class=\"line\"></span><br><span class=\"line\">* Add controller</span><br></pre></td></tr></table></figure>\n<p>php artisan make:controller SubFolder/NameController</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">After that the contorller would be created under app&#x2F;Http&#x2F;Controllers. Add the function in the controller as follow:</span><br></pre></td></tr></table></figure>\n<p>public function index()<br>{<br>    return view(‘admin/article/index’)-&gt;withArticles(Article::all());<br>}</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For this controller, you need add *index.blade.php* under *resources&#x2F;views&#x2F;admin&#x2F;article* to show data. If use the model in controller, you need add</span><br></pre></td></tr></table></figure>\n<p>use App\\Model;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">in the controller.</span><br><span class=\"line\"></span><br><span class=\"line\">* Add Router</span><br><span class=\"line\"></span><br><span class=\"line\">Add router for admin model, we need configurate auto and namespace as follow:</span><br></pre></td></tr></table></figure>\n<p>Route::group([‘middleware’ =&gt; ‘auth’, ‘namespace’ =&gt; ‘Admin’, ‘prefix’ =&gt; ‘admin’], function() {<br>    Route::get(‘/‘, ‘HomeController@index’);<br>    Route::get(‘article’, ‘ArticleController@index’);<br>});</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">If you need search, get, update &amp; delete router, you can add router as follow:</span><br></pre></td></tr></table></figure>\n<p>Route::resource(‘article’, ‘ArticleController’);</p>\n<pre><code>It&apos;s resource control in laravel, you will get 7 routes in project:\n\n|verb|path|action|\n|----|----|----|\n|GET|/article|index|\n| GET |/article/create|create|\n|POST|/article|store|\n| GET |/article/{article}|show|\n| GET |/article/{article}/edit|edit|\n|PUT/PATCH|/article/{article}|update|\n|DELETE|/article/{article}|delete|\n\n\n\n\n[example code](source/posts/code/1/learnlaravel5.tgz)</code></pre>"},{"layout":"post","title":"Design Pattern with PHP: Patterns for Flexible Object Programming","date":"2015-04-01T16:00:00.000Z","description":"Design Pattern with PHP For Patterns for Flexible Object Programming","_content":"\n## 结构型模式\n结构型模式：组合可比继承提供更多的灵活性。\n\n* 组合模式(Composite): 将一组对象组合为可像单个对象一样被使用的结构。\n* 装饰模式(Decorator): 通过在运行时合并对象来扩展功能的一种灵活机制。\n* 外观模式(Facade): 为复杂或多边的系统创建一个简单的接口。\n\n## 组合模式\n* 意图：将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。\n* 动机：一个游戏中的军队，可能有很多可移动的战斗单元组成，步兵、骑兵等。他们一起移动、进攻、防守。可能会有其他部队加入，也可能加入的部队要再分拆。\n* 实现：组合模式定义了一个单根继承体系，使得具有截然不同值得的集合可以并肩工作。\n\n```\n#!/bin/env/php\n<?php\n\nabstract class Unit {\n    function getComposite() {\n        return null;\n    }\n\n    abstract function bombardStrength();\n}\n\n\nabstract class CompositeUnit extends Unit {\n    private $units = array();\n\n    function getComposite() {\n        return $this;\n    }\n\n    protected function units() {\n        return $this->units;\n    }\n\n    function removeUnit( Unit $unit ) {\n        // >= php 5.3\n        //$this->units = array_udiff( $this->units, array( $unit ), \n        //                function( $a, $b ) { return ($a === $b)?0:1; } );\n\n        // < php 5.3\n        $this->units = array_udiff( $this->units, array( $unit ), \n                        create_function( '$a,$b', 'return ($a === $b)?0:1;' ) );\n    }\n\n    function addUnit( Unit $unit ) {\n        if ( in_array( $unit, $this->units, true ) ) {\n            return;\n        }\n        $this->units[] = $unit;\n    }\n}\nclass Army extends CompositeUnit {\n\n    function bombardStrength() {\n        $ret = 0;\n        foreach( $this->units as $unit ) {\n            $ret += $unit->bombardStrength();\n        }\n        return $ret;\n    }\n\n}\n\nclass Archer extends Unit {\n    function bombardStrength() {\n        return 4;\n    }\n}\n\nclass LaserCannonUnit extends Unit {\n    function bombardStrength() {\n        return 44;\n    }\n}\n\nclass UnitScript {\n    static function joinExisting( Unit $newUnit,\n                                  Unit $occupyingUnit ) {\n        $comp;\n\n        if ( ! is_null( $comp = $occupyingUnit->getComposite() ) ) {\n            $comp->addUnit( $newUnit );\n        } else {\n            $comp = new Army();\n            $comp->addUnit( $occupyingUnit );\n            $comp->addUnit( $newUnit );\n        }\n        return $comp;\n    }\n}\n\n$army1 = new Army();\n$army1->addUnit( new Archer() );\n$army1->addUnit( new Archer() );\n\n$army2 = new Army();\n$army2->addUnit( new Archer() );\n$army2->addUnit( new Archer() );\n$army2->addUnit( new LaserCannonUnit() );\n\n$composite = UnitScript::joinExisting( $army2, $army1 );\nprint_r( $composite );\n```\n\n## 装饰模式\n* 意图：动态地给一个对象添加一些额外的职责。就增加功能来说, 更为灵活。\n* 动机：将所有功能都建立在继承体系上会导致系统中的类“爆炸式”增多，更糟糕的是对继承树上下不同分支做相同修改，会造成代码重复。例如：游戏中定义Tile（区域）定义，并且定义的到此区域内财富的方法getWealthFactor, Plain（平地）继承自Tile。如果我们需要在定义污染的平地和地表有钻石的平台，则需要再从Plain继承编写子类。区域的种类增多，则子类也会随之增多，继承树也会越来越庞大。则问题来了，此时，这个结构就显得不够灵活。\n* 实现：\n\n```\n#!/bin/env/php\n<?php\n\nabstract class Tile {\n    abstract function getWealthFactor();\n}\n\nclass Plains extends Tile {\n    private $wealthfactor = 2;\n    function getWealthFactor() {\n        return $this->wealthfactor;\n    }\n}\n\nabstract class TileDecorator extends Tile {\n    protected $tile;\n    function __construct( Tile $tile ) {\n        $this->tile = $tile;\n    }\n}\n\nclass DiamondDecorator extends TileDecorator {\n    function getWealthFactor() {\n        return $this->tile->getWealthFactor()+2;\n    }\n}\n\nclass PollutionDecorator extends TileDecorator {\n    function getWealthFactor() {\n        return $this->tile->getWealthFactor()-4;\n    }\n}\n\n$tile = new Plains();\nprint $tile->getWealthFactor(); // 2\n\n$tile = new DiamondDecorator( new Plains() );\nprint $tile->getWealthFactor(); // 4\n\n$tile = new PollutionDecorator(\n             new DiamondDecorator( new Plains() ));\nprint $tile->getWealthFactor(); // 0\n```\n\n## 外观模式\n* 意图：为子系统中的一组接口提供一个一致的界面,Facade模式定义了一个高层接口,这个接口使得这一子系统更加容易使用。\n* 动机：当系统中引入第三方子系统，而且系统过于深入的调用子系统代码。当子系统代码不断变化，你的系统又在很多地方与子系统代码交互。随着子系统的发展，我们的代码维护会越来越困难。\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nfunction getProductFileLines( $file ) {\n    return file( $file );\n}\n\nfunction getProductObjectFromId( $id, $productname ) {\n    // some kind of database lookup\n    return new Product( $id, $productname );\n}\n\nfunction getNameFromLine( $line ) {\n    if ( preg_match( \"/.*-(.*)\\s\\d+/\", $line, $array ) ) {\n        return str_replace( '_',' ', $array[1] );\n    }\n    return '';\n}\n\nfunction getIDFromLine( $line ) {\n    if ( preg_match( \"/^(\\d{1,3})-/\", $line, $array ) ) {\n        return $array[1];\n    }\n    return -1;\n}\n\nclass Product {\n    public $id;\n    public $name;\n    function __construct( $id, $name ) {\n        $this->id = $id;\n        $this->name = $name;\n    }\n}\n\nclass ProductFacade {\n    private $products = array();\n\n    function __construct( $file ) {\n        $this->file = $file;\n        $this->compile();\n    }\n\n    private function compile() {\n        $lines = getProductFileLines( $this->file );\n        foreach ( $lines as $line ) {\n            $id = getIDFromLine( $line );\n            $name = getNameFromLine( $line );\n            $this->products[$id] = getProductObjectFromID( $id, $name  );\n        }\n    }\n\n    function getProducts() {\n        return $this->products;\n    }\n\n    function getProduct( $id ) {\n        return $this->products[$id];\n    }\n}\n\n$facade = new ProductFacade( 'test.txt' );\n$object = $facade->getProduct( 234 );\n\nprint_r( $object );\n```","source":"_posts/design-pattern-with-php-Patterns-for-Flexible-Object-Programming.md","raw":"---\nlayout: post\ntitle: \"Design Pattern with PHP: Patterns for Flexible Object Programming\"\ndate:   2015-04-02\ndescription: Design Pattern with PHP For Patterns for Flexible Object Programming\ncategories: Design Pattern\ntags: Design Pattern\n---\n\n## 结构型模式\n结构型模式：组合可比继承提供更多的灵活性。\n\n* 组合模式(Composite): 将一组对象组合为可像单个对象一样被使用的结构。\n* 装饰模式(Decorator): 通过在运行时合并对象来扩展功能的一种灵活机制。\n* 外观模式(Facade): 为复杂或多边的系统创建一个简单的接口。\n\n## 组合模式\n* 意图：将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。\n* 动机：一个游戏中的军队，可能有很多可移动的战斗单元组成，步兵、骑兵等。他们一起移动、进攻、防守。可能会有其他部队加入，也可能加入的部队要再分拆。\n* 实现：组合模式定义了一个单根继承体系，使得具有截然不同值得的集合可以并肩工作。\n\n```\n#!/bin/env/php\n<?php\n\nabstract class Unit {\n    function getComposite() {\n        return null;\n    }\n\n    abstract function bombardStrength();\n}\n\n\nabstract class CompositeUnit extends Unit {\n    private $units = array();\n\n    function getComposite() {\n        return $this;\n    }\n\n    protected function units() {\n        return $this->units;\n    }\n\n    function removeUnit( Unit $unit ) {\n        // >= php 5.3\n        //$this->units = array_udiff( $this->units, array( $unit ), \n        //                function( $a, $b ) { return ($a === $b)?0:1; } );\n\n        // < php 5.3\n        $this->units = array_udiff( $this->units, array( $unit ), \n                        create_function( '$a,$b', 'return ($a === $b)?0:1;' ) );\n    }\n\n    function addUnit( Unit $unit ) {\n        if ( in_array( $unit, $this->units, true ) ) {\n            return;\n        }\n        $this->units[] = $unit;\n    }\n}\nclass Army extends CompositeUnit {\n\n    function bombardStrength() {\n        $ret = 0;\n        foreach( $this->units as $unit ) {\n            $ret += $unit->bombardStrength();\n        }\n        return $ret;\n    }\n\n}\n\nclass Archer extends Unit {\n    function bombardStrength() {\n        return 4;\n    }\n}\n\nclass LaserCannonUnit extends Unit {\n    function bombardStrength() {\n        return 44;\n    }\n}\n\nclass UnitScript {\n    static function joinExisting( Unit $newUnit,\n                                  Unit $occupyingUnit ) {\n        $comp;\n\n        if ( ! is_null( $comp = $occupyingUnit->getComposite() ) ) {\n            $comp->addUnit( $newUnit );\n        } else {\n            $comp = new Army();\n            $comp->addUnit( $occupyingUnit );\n            $comp->addUnit( $newUnit );\n        }\n        return $comp;\n    }\n}\n\n$army1 = new Army();\n$army1->addUnit( new Archer() );\n$army1->addUnit( new Archer() );\n\n$army2 = new Army();\n$army2->addUnit( new Archer() );\n$army2->addUnit( new Archer() );\n$army2->addUnit( new LaserCannonUnit() );\n\n$composite = UnitScript::joinExisting( $army2, $army1 );\nprint_r( $composite );\n```\n\n## 装饰模式\n* 意图：动态地给一个对象添加一些额外的职责。就增加功能来说, 更为灵活。\n* 动机：将所有功能都建立在继承体系上会导致系统中的类“爆炸式”增多，更糟糕的是对继承树上下不同分支做相同修改，会造成代码重复。例如：游戏中定义Tile（区域）定义，并且定义的到此区域内财富的方法getWealthFactor, Plain（平地）继承自Tile。如果我们需要在定义污染的平地和地表有钻石的平台，则需要再从Plain继承编写子类。区域的种类增多，则子类也会随之增多，继承树也会越来越庞大。则问题来了，此时，这个结构就显得不够灵活。\n* 实现：\n\n```\n#!/bin/env/php\n<?php\n\nabstract class Tile {\n    abstract function getWealthFactor();\n}\n\nclass Plains extends Tile {\n    private $wealthfactor = 2;\n    function getWealthFactor() {\n        return $this->wealthfactor;\n    }\n}\n\nabstract class TileDecorator extends Tile {\n    protected $tile;\n    function __construct( Tile $tile ) {\n        $this->tile = $tile;\n    }\n}\n\nclass DiamondDecorator extends TileDecorator {\n    function getWealthFactor() {\n        return $this->tile->getWealthFactor()+2;\n    }\n}\n\nclass PollutionDecorator extends TileDecorator {\n    function getWealthFactor() {\n        return $this->tile->getWealthFactor()-4;\n    }\n}\n\n$tile = new Plains();\nprint $tile->getWealthFactor(); // 2\n\n$tile = new DiamondDecorator( new Plains() );\nprint $tile->getWealthFactor(); // 4\n\n$tile = new PollutionDecorator(\n             new DiamondDecorator( new Plains() ));\nprint $tile->getWealthFactor(); // 0\n```\n\n## 外观模式\n* 意图：为子系统中的一组接口提供一个一致的界面,Facade模式定义了一个高层接口,这个接口使得这一子系统更加容易使用。\n* 动机：当系统中引入第三方子系统，而且系统过于深入的调用子系统代码。当子系统代码不断变化，你的系统又在很多地方与子系统代码交互。随着子系统的发展，我们的代码维护会越来越困难。\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nfunction getProductFileLines( $file ) {\n    return file( $file );\n}\n\nfunction getProductObjectFromId( $id, $productname ) {\n    // some kind of database lookup\n    return new Product( $id, $productname );\n}\n\nfunction getNameFromLine( $line ) {\n    if ( preg_match( \"/.*-(.*)\\s\\d+/\", $line, $array ) ) {\n        return str_replace( '_',' ', $array[1] );\n    }\n    return '';\n}\n\nfunction getIDFromLine( $line ) {\n    if ( preg_match( \"/^(\\d{1,3})-/\", $line, $array ) ) {\n        return $array[1];\n    }\n    return -1;\n}\n\nclass Product {\n    public $id;\n    public $name;\n    function __construct( $id, $name ) {\n        $this->id = $id;\n        $this->name = $name;\n    }\n}\n\nclass ProductFacade {\n    private $products = array();\n\n    function __construct( $file ) {\n        $this->file = $file;\n        $this->compile();\n    }\n\n    private function compile() {\n        $lines = getProductFileLines( $this->file );\n        foreach ( $lines as $line ) {\n            $id = getIDFromLine( $line );\n            $name = getNameFromLine( $line );\n            $this->products[$id] = getProductObjectFromID( $id, $name  );\n        }\n    }\n\n    function getProducts() {\n        return $this->products;\n    }\n\n    function getProduct( $id ) {\n        return $this->products[$id];\n    }\n}\n\n$facade = new ProductFacade( 'test.txt' );\n$object = $facade->getProduct( 234 );\n\nprint_r( $object );\n```","slug":"design-pattern-with-php-Patterns-for-Flexible-Object-Programming","published":1,"updated":"2020-06-14T15:57:16.322Z","comments":1,"photos":[],"link":"","_id":"ckbfpl122001nmp8493zu2h4k","content":"<h2 id=\"结构型模式\"><a href=\"#结构型模式\" class=\"headerlink\" title=\"结构型模式\"></a>结构型模式</h2><p>结构型模式：组合可比继承提供更多的灵活性。</p>\n<ul>\n<li>组合模式(Composite): 将一组对象组合为可像单个对象一样被使用的结构。</li>\n<li>装饰模式(Decorator): 通过在运行时合并对象来扩展功能的一种灵活机制。</li>\n<li>外观模式(Facade): 为复杂或多边的系统创建一个简单的接口。</li>\n</ul>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><ul>\n<li>意图：将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。</li>\n<li>动机：一个游戏中的军队，可能有很多可移动的战斗单元组成，步兵、骑兵等。他们一起移动、进攻、防守。可能会有其他部队加入，也可能加入的部队要再分拆。</li>\n<li>实现：组合模式定义了一个单根继承体系，使得具有截然不同值得的集合可以并肩工作。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Unit &#123;</span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function bombardStrength();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CompositeUnit extends Unit &#123;</span><br><span class=\"line\">    private $units &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return $this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    protected function units() &#123;</span><br><span class=\"line\">        return $this-&gt;units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function removeUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; &gt;&#x3D; php 5.3</span><br><span class=\"line\">        &#x2F;&#x2F;$this-&gt;units &#x3D; array_udiff( $this-&gt;units, array( $unit ), </span><br><span class=\"line\">        &#x2F;&#x2F;                function( $a, $b ) &#123; return ($a &#x3D;&#x3D;&#x3D; $b)?0:1; &#125; );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F; &lt; php 5.3</span><br><span class=\"line\">        $this-&gt;units &#x3D; array_udiff( $this-&gt;units, array( $unit ), </span><br><span class=\"line\">                        create_function( &#39;$a,$b&#39;, &#39;return ($a &#x3D;&#x3D;&#x3D; $b)?0:1;&#39; ) );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        if ( in_array( $unit, $this-&gt;units, true ) ) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;units[] &#x3D; $unit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Army extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        $ret &#x3D; 0;</span><br><span class=\"line\">        foreach( $this-&gt;units as $unit ) &#123;</span><br><span class=\"line\">            $ret +&#x3D; $unit-&gt;bombardStrength();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Archer extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class LaserCannonUnit extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 44;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class UnitScript &#123;</span><br><span class=\"line\">    static function joinExisting( Unit $newUnit,</span><br><span class=\"line\">                                  Unit $occupyingUnit ) &#123;</span><br><span class=\"line\">        $comp;</span><br><span class=\"line\"></span><br><span class=\"line\">        if ( ! is_null( $comp &#x3D; $occupyingUnit-&gt;getComposite() ) ) &#123;</span><br><span class=\"line\">            $comp-&gt;addUnit( $newUnit );</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            $comp &#x3D; new Army();</span><br><span class=\"line\">            $comp-&gt;addUnit( $occupyingUnit );</span><br><span class=\"line\">            $comp-&gt;addUnit( $newUnit );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $comp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$army1 &#x3D; new Army();</span><br><span class=\"line\">$army1-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army1-&gt;addUnit( new Archer() );</span><br><span class=\"line\"></span><br><span class=\"line\">$army2 &#x3D; new Army();</span><br><span class=\"line\">$army2-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army2-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army2-&gt;addUnit( new LaserCannonUnit() );</span><br><span class=\"line\"></span><br><span class=\"line\">$composite &#x3D; UnitScript::joinExisting( $army2, $army1 );</span><br><span class=\"line\">print_r( $composite );</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h2><ul>\n<li>意图：动态地给一个对象添加一些额外的职责。就增加功能来说, 更为灵活。</li>\n<li>动机：将所有功能都建立在继承体系上会导致系统中的类“爆炸式”增多，更糟糕的是对继承树上下不同分支做相同修改，会造成代码重复。例如：游戏中定义Tile（区域）定义，并且定义的到此区域内财富的方法getWealthFactor, Plain（平地）继承自Tile。如果我们需要在定义污染的平地和地表有钻石的平台，则需要再从Plain继承编写子类。区域的种类增多，则子类也会随之增多，继承树也会越来越庞大。则问题来了，此时，这个结构就显得不够灵活。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Tile &#123;</span><br><span class=\"line\">    abstract function getWealthFactor();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Plains extends Tile &#123;</span><br><span class=\"line\">    private $wealthfactor &#x3D; 2;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;wealthfactor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class TileDecorator extends Tile &#123;</span><br><span class=\"line\">    protected $tile;</span><br><span class=\"line\">    function __construct( Tile $tile ) &#123;</span><br><span class=\"line\">        $this-&gt;tile &#x3D; $tile;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class DiamondDecorator extends TileDecorator &#123;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;tile-&gt;getWealthFactor()+2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PollutionDecorator extends TileDecorator &#123;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;tile-&gt;getWealthFactor()-4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new Plains();</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new DiamondDecorator( new Plains() );</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 4</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new PollutionDecorator(</span><br><span class=\"line\">             new DiamondDecorator( new Plains() ));</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h2><ul>\n<li>意图：为子系统中的一组接口提供一个一致的界面,Facade模式定义了一个高层接口,这个接口使得这一子系统更加容易使用。</li>\n<li>动机：当系统中引入第三方子系统，而且系统过于深入的调用子系统代码。当子系统代码不断变化，你的系统又在很多地方与子系统代码交互。随着子系统的发展，我们的代码维护会越来越困难。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">function getProductFileLines( $file ) &#123;</span><br><span class=\"line\">    return file( $file );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getProductObjectFromId( $id, $productname ) &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; some kind of database lookup</span><br><span class=\"line\">    return new Product( $id, $productname );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getNameFromLine( $line ) &#123;</span><br><span class=\"line\">    if ( preg_match( &quot;&#x2F;.*-(.*)\\s\\d+&#x2F;&quot;, $line, $array ) ) &#123;</span><br><span class=\"line\">        return str_replace( &#39;_&#39;,&#39; &#39;, $array[1] );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return &#39;&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getIDFromLine( $line ) &#123;</span><br><span class=\"line\">    if ( preg_match( &quot;&#x2F;^(\\d&#123;1,3&#125;)-&#x2F;&quot;, $line, $array ) ) &#123;</span><br><span class=\"line\">        return $array[1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return -1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Product &#123;</span><br><span class=\"line\">    public $id;</span><br><span class=\"line\">    public $name;</span><br><span class=\"line\">    function __construct( $id, $name ) &#123;</span><br><span class=\"line\">        $this-&gt;id &#x3D; $id;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class ProductFacade &#123;</span><br><span class=\"line\">    private $products &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct( $file ) &#123;</span><br><span class=\"line\">        $this-&gt;file &#x3D; $file;</span><br><span class=\"line\">        $this-&gt;compile();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function compile() &#123;</span><br><span class=\"line\">        $lines &#x3D; getProductFileLines( $this-&gt;file );</span><br><span class=\"line\">        foreach ( $lines as $line ) &#123;</span><br><span class=\"line\">            $id &#x3D; getIDFromLine( $line );</span><br><span class=\"line\">            $name &#x3D; getNameFromLine( $line );</span><br><span class=\"line\">            $this-&gt;products[$id] &#x3D; getProductObjectFromID( $id, $name  );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getProducts() &#123;</span><br><span class=\"line\">        return $this-&gt;products;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getProduct( $id ) &#123;</span><br><span class=\"line\">        return $this-&gt;products[$id];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$facade &#x3D; new ProductFacade( &#39;test.txt&#39; );</span><br><span class=\"line\">$object &#x3D; $facade-&gt;getProduct( 234 );</span><br><span class=\"line\"></span><br><span class=\"line\">print_r( $object );</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"结构型模式\"><a href=\"#结构型模式\" class=\"headerlink\" title=\"结构型模式\"></a>结构型模式</h2><p>结构型模式：组合可比继承提供更多的灵活性。</p>\n<ul>\n<li>组合模式(Composite): 将一组对象组合为可像单个对象一样被使用的结构。</li>\n<li>装饰模式(Decorator): 通过在运行时合并对象来扩展功能的一种灵活机制。</li>\n<li>外观模式(Facade): 为复杂或多边的系统创建一个简单的接口。</li>\n</ul>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><ul>\n<li>意图：将对象组合成树形结构以表示“部分-整体”的层次结构。Composite使得用户对单个对象和组合对象的使用具有一致性。</li>\n<li>动机：一个游戏中的军队，可能有很多可移动的战斗单元组成，步兵、骑兵等。他们一起移动、进攻、防守。可能会有其他部队加入，也可能加入的部队要再分拆。</li>\n<li>实现：组合模式定义了一个单根继承体系，使得具有截然不同值得的集合可以并肩工作。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Unit &#123;</span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function bombardStrength();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CompositeUnit extends Unit &#123;</span><br><span class=\"line\">    private $units &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return $this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    protected function units() &#123;</span><br><span class=\"line\">        return $this-&gt;units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function removeUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; &gt;&#x3D; php 5.3</span><br><span class=\"line\">        &#x2F;&#x2F;$this-&gt;units &#x3D; array_udiff( $this-&gt;units, array( $unit ), </span><br><span class=\"line\">        &#x2F;&#x2F;                function( $a, $b ) &#123; return ($a &#x3D;&#x3D;&#x3D; $b)?0:1; &#125; );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F; &lt; php 5.3</span><br><span class=\"line\">        $this-&gt;units &#x3D; array_udiff( $this-&gt;units, array( $unit ), </span><br><span class=\"line\">                        create_function( &#39;$a,$b&#39;, &#39;return ($a &#x3D;&#x3D;&#x3D; $b)?0:1;&#39; ) );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        if ( in_array( $unit, $this-&gt;units, true ) ) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;units[] &#x3D; $unit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Army extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        $ret &#x3D; 0;</span><br><span class=\"line\">        foreach( $this-&gt;units as $unit ) &#123;</span><br><span class=\"line\">            $ret +&#x3D; $unit-&gt;bombardStrength();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Archer extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class LaserCannonUnit extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 44;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class UnitScript &#123;</span><br><span class=\"line\">    static function joinExisting( Unit $newUnit,</span><br><span class=\"line\">                                  Unit $occupyingUnit ) &#123;</span><br><span class=\"line\">        $comp;</span><br><span class=\"line\"></span><br><span class=\"line\">        if ( ! is_null( $comp &#x3D; $occupyingUnit-&gt;getComposite() ) ) &#123;</span><br><span class=\"line\">            $comp-&gt;addUnit( $newUnit );</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            $comp &#x3D; new Army();</span><br><span class=\"line\">            $comp-&gt;addUnit( $occupyingUnit );</span><br><span class=\"line\">            $comp-&gt;addUnit( $newUnit );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $comp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$army1 &#x3D; new Army();</span><br><span class=\"line\">$army1-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army1-&gt;addUnit( new Archer() );</span><br><span class=\"line\"></span><br><span class=\"line\">$army2 &#x3D; new Army();</span><br><span class=\"line\">$army2-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army2-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$army2-&gt;addUnit( new LaserCannonUnit() );</span><br><span class=\"line\"></span><br><span class=\"line\">$composite &#x3D; UnitScript::joinExisting( $army2, $army1 );</span><br><span class=\"line\">print_r( $composite );</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h2><ul>\n<li>意图：动态地给一个对象添加一些额外的职责。就增加功能来说, 更为灵活。</li>\n<li>动机：将所有功能都建立在继承体系上会导致系统中的类“爆炸式”增多，更糟糕的是对继承树上下不同分支做相同修改，会造成代码重复。例如：游戏中定义Tile（区域）定义，并且定义的到此区域内财富的方法getWealthFactor, Plain（平地）继承自Tile。如果我们需要在定义污染的平地和地表有钻石的平台，则需要再从Plain继承编写子类。区域的种类增多，则子类也会随之增多，继承树也会越来越庞大。则问题来了，此时，这个结构就显得不够灵活。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Tile &#123;</span><br><span class=\"line\">    abstract function getWealthFactor();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Plains extends Tile &#123;</span><br><span class=\"line\">    private $wealthfactor &#x3D; 2;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;wealthfactor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class TileDecorator extends Tile &#123;</span><br><span class=\"line\">    protected $tile;</span><br><span class=\"line\">    function __construct( Tile $tile ) &#123;</span><br><span class=\"line\">        $this-&gt;tile &#x3D; $tile;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class DiamondDecorator extends TileDecorator &#123;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;tile-&gt;getWealthFactor()+2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PollutionDecorator extends TileDecorator &#123;</span><br><span class=\"line\">    function getWealthFactor() &#123;</span><br><span class=\"line\">        return $this-&gt;tile-&gt;getWealthFactor()-4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new Plains();</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new DiamondDecorator( new Plains() );</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 4</span><br><span class=\"line\"></span><br><span class=\"line\">$tile &#x3D; new PollutionDecorator(</span><br><span class=\"line\">             new DiamondDecorator( new Plains() ));</span><br><span class=\"line\">print $tile-&gt;getWealthFactor(); &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h2><ul>\n<li>意图：为子系统中的一组接口提供一个一致的界面,Facade模式定义了一个高层接口,这个接口使得这一子系统更加容易使用。</li>\n<li>动机：当系统中引入第三方子系统，而且系统过于深入的调用子系统代码。当子系统代码不断变化，你的系统又在很多地方与子系统代码交互。随着子系统的发展，我们的代码维护会越来越困难。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">function getProductFileLines( $file ) &#123;</span><br><span class=\"line\">    return file( $file );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getProductObjectFromId( $id, $productname ) &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; some kind of database lookup</span><br><span class=\"line\">    return new Product( $id, $productname );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getNameFromLine( $line ) &#123;</span><br><span class=\"line\">    if ( preg_match( &quot;&#x2F;.*-(.*)\\s\\d+&#x2F;&quot;, $line, $array ) ) &#123;</span><br><span class=\"line\">        return str_replace( &#39;_&#39;,&#39; &#39;, $array[1] );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return &#39;&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getIDFromLine( $line ) &#123;</span><br><span class=\"line\">    if ( preg_match( &quot;&#x2F;^(\\d&#123;1,3&#125;)-&#x2F;&quot;, $line, $array ) ) &#123;</span><br><span class=\"line\">        return $array[1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return -1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Product &#123;</span><br><span class=\"line\">    public $id;</span><br><span class=\"line\">    public $name;</span><br><span class=\"line\">    function __construct( $id, $name ) &#123;</span><br><span class=\"line\">        $this-&gt;id &#x3D; $id;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class ProductFacade &#123;</span><br><span class=\"line\">    private $products &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct( $file ) &#123;</span><br><span class=\"line\">        $this-&gt;file &#x3D; $file;</span><br><span class=\"line\">        $this-&gt;compile();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function compile() &#123;</span><br><span class=\"line\">        $lines &#x3D; getProductFileLines( $this-&gt;file );</span><br><span class=\"line\">        foreach ( $lines as $line ) &#123;</span><br><span class=\"line\">            $id &#x3D; getIDFromLine( $line );</span><br><span class=\"line\">            $name &#x3D; getNameFromLine( $line );</span><br><span class=\"line\">            $this-&gt;products[$id] &#x3D; getProductObjectFromID( $id, $name  );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getProducts() &#123;</span><br><span class=\"line\">        return $this-&gt;products;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getProduct( $id ) &#123;</span><br><span class=\"line\">        return $this-&gt;products[$id];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$facade &#x3D; new ProductFacade( &#39;test.txt&#39; );</span><br><span class=\"line\">$object &#x3D; $facade-&gt;getProduct( 234 );</span><br><span class=\"line\"></span><br><span class=\"line\">print_r( $object );</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Design Pattern with PHP: Performing and Representing Tasks","date":"2015-04-07T16:00:00.000Z","description":"Design Pattern with PHP For Performing and Representing Tasks","_content":"\n## 行为模式\n行为模式涉及到算法和对象间职责的分配。行为模式不仅描述对象或类的模式,还描述 它们之间的通信模式。\n\n* 解释器(Interpreter)模式：构造一个可以用于创建脚本化应用的mini语言解释器。\n* 策略(Strategy)模式：在系统中定义算法并以它们自己的类型封装。\n* 观察者(Observer)模式：创建依赖关系，当有系统事件发生时通知观察者对象。\n* 访问者(Vistor)模式：在对象树的所有节点上应用操作。\n* 命令(Command)模式：创建可被保存和传送的命令对象。\n\n## 解释器模式\n* 意图：给定一个语言,定义它的文法的一种表示,并定义一个解释器,这个解释器使用该表示 来解释语言中的句子。\n* 动机：为高级用户提供一种领域语言（DSL —— Domain Specific Language，领域特定语言）可以使用户自己来扩展系统功能，但是又需要限制用户使用语言的权限，例如：用户输入\"print file_get_content('/etc/passwd')\"，程序执行后会获得系统权限。\n* 实现：\n\n```\n!#/bin/env/php\n\n```\n## 策略模式\n* 意图：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。本模式使得算法可独 立于使用它的客户而变化。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n\n```\n## 观察者模式\n* 意图：定义对象间的一种一对多的依赖关系 ,当一个对象的状态发生改变时 , 所有依赖于它的对象 都得到通知并被自动更新。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\ninterface Observable {\n    function attach( Observer $observer );\n    function detach( Observer $observer );\n    function notify();\n}\n\nclass Login implements Observable {\n    private $observers = array();\n    const LOGIN_USER_UNKNOWN = 1;\n    const LOGIN_WRONG_PASS   = 2;\n    const LOGIN_ACCESS       = 3;\n\n    function attach( Observer $observer ) {\n        $this->observers[] = $observer;\n    }\n\n    function detach( Observer $observer ) {\n        // >= php 5.3\n        //$this->observers = array_udiff( $this->observers, array( $observer ), \n        //                function( $a, $b ) { return ($a === $b)?0:1; } );\n\n        // < php 5.3\n        $this->observers = array_udiff( $this->observers, array( $observer ), \n                        create_function( '$a,$b', 'return ($a === $b)?0:1;') );\n    }\n\n    function notify() {\n        foreach ( $this->observers as $obs ) {\n            $obs->update( $this );\n        }\n    }\n\n    function handleLogin( $user, $pass, $ip ) {\n        switch ( rand(1,3) ) {\n            case 1: \n                $this->setStatus( self::LOGIN_ACCESS, $user, $ip );\n                $ret = true; break;\n            case 2:\n                $this->setStatus( self::LOGIN_WRONG_PASS, $user, $ip );\n                $ret = false; break;\n            case 3:\n                $this->setStatus( self::LOGIN_USER_UNKNOWN, $user, $ip );\n                $ret = false; break;\n        }\n        $this->notify();\n        return $ret;\n    }\n\n    private function setStatus( $status, $user, $ip ) {\n        $this->status = array( $status, $user, $ip ); \n    }\n\n    function getStatus() {\n        return $this->status;\n    }\n\n}\n\ninterface Observer {\n    function update( Observable $observer );\n}\n\nabstract class LoginObserver implements Observer {\n    private $login;\n    function __construct( Login $login ) {\n        $this->login = $login; \n        $login->attach( $this );\n    }\n\n    function update( Observable $observable ) {\n        if ( $observable === $this->login ) {\n            $this->doUpdate( $observable );\n        }\n    }\n\n    abstract function doUpdate( Login $login );\n} \n\nclass SecurityMonitor extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        if ( $status[0] == Login::LOGIN_WRONG_PASS ) {\n            // send mail to sysadmin \n            print __CLASS__.\":\\tsending mail to sysadmin\\n\"; \n        }\n    }\n}\n\nclass GeneralLogger  extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        // add login data to log\n        print __CLASS__.\":\\tadd login data to log\\n\"; \n    }\n}\n\nclass PartnershipTool extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        // check $ip address \n        // set cookie if it matches a list\n        print __CLASS__.\":\\tset cookie if it matches a list\\n\"; \n    }\n}\n\n$login = new Login();\nnew SecurityMonitor( $login );\nnew GeneralLogger( $login );\n$pt = new PartnershipTool( $login );\n$login->detach( $pt );\nfor ( $x=0; $x<10; $x++ ) {\n    $login->handleLogin( \"bob\",\"mypass\", '158.152.55.35' );\n    print \"\\n\";\n}\n\n```\n## 访问者模式\n* 意图：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提 下定义作用于这些元素的新操作。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nclass UnitException extends Exception {}\n\nclass TextDumpArmyVisitor extends ArmyVisitor {\n    private $text=\"\";\n\n    function visit( Unit $node ) {\n        $ret = \"\";\n        $pad = 4*$node->getDepth();\n        $ret .= sprintf( \"%{$pad}s\", \"\" );\n        $ret .= get_class($node).\": \";\n        $ret .= \"bombard: \".$node->bombardStrength().\"\\n\";\n        $this->text .= $ret;\n    }\n    function getText() {\n        return $this->text;\n    }\n}\n\nclass TaxCollectionVisitor extends ArmyVisitor {\n    private $due=0;\n    private $report=\"\";\n\n    function visit( Unit $node ) {\n        $this->levy( $node, 1 );\n    }\n\n    function visitArcher( Archer $node ) {\n        $this->levy( $node, 2 );\n    }\n\n    function visitCavalry( Cavalry $node ) {\n        $this->levy( $node, 3 );\n    }\n\n    function visitTroopCarrierUnit( TroopCarrierUnit $node ) {\n        $this->levy( $node, 5 );\n    }\n\n    private function levy( Unit $unit, $amount ) {\n        $this->report .= \"Tax levied for \".get_class( $unit );\n        $this->report .= \": $amount\\n\";\n        $this->due += $amount;\n    }\n\n    function getReport() {\n        return $this->report;\n    }\n\n    function getTax() {\n        return $this->due;\n    }\n}\n\nabstract class ArmyVisitor  {\n    abstract function visit( Unit $node );\n\n    function visitArcher( Archer $node ) {\n        $this->visit( $node );\n    }\n    function visitCavalry( Cavalry $node ) {\n        $this->visit( $node );\n    }\n\n    function visitLaserCanonUnit( LaserCanonUnit $node ) {\n        $this->visit( $node );\n    }\n\n    function visitTroopCarrierUnit( TroopCarrierUnit $node ) {\n        $this->visit( $node );\n    }\n\n    function visitArmy( Army $node ) {\n        $this->visit( $node );\n    }\n}\n\nabstract class Unit {\n    protected $depth = 0;\n\n    function getComposite() {\n        return null;\n    }\n    \n    protected function setDepth( $depth ) {\n        $this->depth=$depth;\n    }\n\n    function getDepth() {\n        return $this->depth;\n    }\n\n    abstract function bombardStrength();\n\n    function accept( ArmyVisitor $visitor ) {\n        $method = \"visit\".get_class( $this );\n        $visitor->$method( $this );\n    }\n}\n\nclass Archer extends Unit {\n    function bombardStrength() {\n        return 4;\n    }\n\n}\n\nclass Cavalry extends Unit {\n    function bombardStrength() {\n        return 2;\n    }\n}\n\nclass LaserCanonUnit extends Unit {\n    function bombardStrength() {\n        return 44;\n    }\n}\n\nabstract class CompositeUnit extends Unit {\n    private $units = array();\n\n    function getComposite() {\n        return $this;\n    }\n\n    function units() {\n        return $this->units;\n    }\n\n    function removeUnit( Unit $unit ) {\n        $units = array();\n        foreach ( $this->units as $thisunit ) {\n            if ( $unit !== $thisunit ) {\n                $units[] = $thisunit;\n            }\n        }\n        $this->units = $units;\n    }\n/*\n    function accept( ArmyVisitor $visitor ) {\n        $method = \"visit\".get_class( $this );\n        $visitor->$method( $this );\n        foreach ( $this->units as $thisunit ) {\n            $thisunit->accept( $visitor );\n        }\n    }\n*/\n\n    function accept( ArmyVisitor $visitor ) {\n        parent::accept( $visitor );\n        foreach ( $this->units as $thisunit ) {\n            $thisunit->accept( $visitor );\n        }\n    }\n\n    function addUnit( Unit $unit ) {\n        foreach ( $this->units as $thisunit ) {\n            if ( $unit === $thisunit ) {\n                return;\n            }\n        }\n        $unit->setDepth($this->depth+1);\n        $this->units[] = $unit;\n    }\n}\n\nclass TroopCarrier extends CompositeUnit {\n\n    function addUnit( Unit $unit ) {\n        if ( $unit instanceof Cavalry ) {\n            throw new UnitException(\"Can't get a horse on the vehicle\");\n        }\n        parent::addUnit( $unit );\n    }\n\n    function bombardStrength() {\n        return 0;\n    }\n}\n\nclass Army extends CompositeUnit {\n\n    function bombardStrength() {\n        $ret = 0;\n        foreach( $this->units() as $unit ) {\n            $ret += $unit->bombardStrength();\n        }\n        return $ret;\n    }\n}\n\n$main_army = new Army();\n$main_army->addUnit( new Archer() );\n$main_army->addUnit( new LaserCanonUnit() );\n$main_army->addUnit( new Cavalry() );\n\n$textdump = new TextDumpArmyVisitor();\n$main_army->accept( $textdump  );\nprint $textdump->getText();\n$taxcollector = new TaxCollectionVisitor();\n$main_army->accept( $taxcollector );\nprint $taxcollector->getReport();\nprint \"TOTAL: \";\nprint $taxcollector->getTax().\"\\n\";\n```\n## 命令模式\n* 意图：将一个请求封装为一个对象,从而使你可用不同的请求对客户进行参数化;对请求排队或记录请求日志,以及支持可撤消的操作。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nclass CommandNotFoundException extends Exception {}\n\nclass CommandFactory {\n    private static $dir = 'commands';\n\n    static function getCommand( $action='Default' ) {\n        if ( preg_match( '/\\W/', $action ) ) {\n            throw new Exception(\"illegal characters in action\");\n        }\n        $class = UCFirst(strtolower($action)).\"Command\";  \n        $file = self::$dir.DIRECTORY_SEPARATOR.\"$class.php\";\n        if ( ! file_exists( $file ) ) {\n            throw new CommandNotFoundException( \"could not find '$file'\" );\n        }\n        require_once( $file );\n        if ( ! class_exists( $class ) ) {\n            throw new CommandNotFoundException( \"no '$class' class located\" );\n        }\n        $cmd = new $class();\n        return $cmd;\n    }\n}\n\nclass Controller {\n    private $context;\n    function __construct() {\n        $this->context = new CommandContext();\n    }\n\n    function getContext() {\n        return $this->context;\n    }\n\n    function process() {\n        $cmd = CommandFactory::getCommand( $this->context->get('action') );\n        if ( ! $cmd->execute( $this->context ) ) {\n            // handle failure\n        } else {\n            // success\n            // dispatch view\n        }\n    } \n}    \n\n\n\n\n// ------------- helper stuff\nclass User{\n    private $name;\n    function __construct( $name ) {\n        $this->name = $name;\n    }\n}\n\nclass Registry {\n    static function getMessageSystem() {\n        return new MessageSystem();\n    }\n    static function getAccessManager() {\n        return new AccessManager();\n    }\n}\n\nclass MessageSystem {\n    function send( $mail, $msg, $topic ) {\n        print \"sending $mail: $topic: $msg\\n\";\n        return true;\n    }\n\n    function getError() {\n        return \"move along now, nothing to see here\";\n    }\n}\n\nclass AccessManager {\n    function login( $user, $pass ) {\n        $ret = new User( $user );\n        return $ret;\n    }\n\n    function getError() {\n        return \"move along now, nothing to see here\";\n    }\n}\n\nclass CommandContext {\n    private $params = array();\n    private $error = \"\";\n\n    function __construct() {\n        $this->params = $_REQUEST;\n    }\n\n    function addParam( $key, $val ) { \n        $this->params[$key]=$val;\n    }\n\n    function get( $key ) { \n        return $this->params[$key];\n    }\n\n    function setError( $error ) {\n        $this->error = $error;\n    }\n\n    function getError() {\n        return $this->error;\n    }\n}\n\n$controller = new Controller();\n$context = $controller->getContext();\n$context->addParam('action', 'feedback' );\n$context->addParam('email', 'bob@bob.com' );\n$context->addParam('topic', 'my brain' );\n$context->addParam('msg', 'all about my brain' );\n$controller->process();\nprint $context->getError();\n\n```","source":"_posts/design-pattern-with-php-Performing-and-Representing-Tasks.md","raw":"---\nlayout: post\ntitle: \"Design Pattern with PHP: Performing and Representing Tasks\"\ndate:   2015-04-08\ndescription: Design Pattern with PHP For Performing and Representing Tasks\ncategories: Design Pattern\ntags: Design Pattern\n---\n\n## 行为模式\n行为模式涉及到算法和对象间职责的分配。行为模式不仅描述对象或类的模式,还描述 它们之间的通信模式。\n\n* 解释器(Interpreter)模式：构造一个可以用于创建脚本化应用的mini语言解释器。\n* 策略(Strategy)模式：在系统中定义算法并以它们自己的类型封装。\n* 观察者(Observer)模式：创建依赖关系，当有系统事件发生时通知观察者对象。\n* 访问者(Vistor)模式：在对象树的所有节点上应用操作。\n* 命令(Command)模式：创建可被保存和传送的命令对象。\n\n## 解释器模式\n* 意图：给定一个语言,定义它的文法的一种表示,并定义一个解释器,这个解释器使用该表示 来解释语言中的句子。\n* 动机：为高级用户提供一种领域语言（DSL —— Domain Specific Language，领域特定语言）可以使用户自己来扩展系统功能，但是又需要限制用户使用语言的权限，例如：用户输入\"print file_get_content('/etc/passwd')\"，程序执行后会获得系统权限。\n* 实现：\n\n```\n!#/bin/env/php\n\n```\n## 策略模式\n* 意图：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。本模式使得算法可独 立于使用它的客户而变化。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n\n```\n## 观察者模式\n* 意图：定义对象间的一种一对多的依赖关系 ,当一个对象的状态发生改变时 , 所有依赖于它的对象 都得到通知并被自动更新。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\ninterface Observable {\n    function attach( Observer $observer );\n    function detach( Observer $observer );\n    function notify();\n}\n\nclass Login implements Observable {\n    private $observers = array();\n    const LOGIN_USER_UNKNOWN = 1;\n    const LOGIN_WRONG_PASS   = 2;\n    const LOGIN_ACCESS       = 3;\n\n    function attach( Observer $observer ) {\n        $this->observers[] = $observer;\n    }\n\n    function detach( Observer $observer ) {\n        // >= php 5.3\n        //$this->observers = array_udiff( $this->observers, array( $observer ), \n        //                function( $a, $b ) { return ($a === $b)?0:1; } );\n\n        // < php 5.3\n        $this->observers = array_udiff( $this->observers, array( $observer ), \n                        create_function( '$a,$b', 'return ($a === $b)?0:1;') );\n    }\n\n    function notify() {\n        foreach ( $this->observers as $obs ) {\n            $obs->update( $this );\n        }\n    }\n\n    function handleLogin( $user, $pass, $ip ) {\n        switch ( rand(1,3) ) {\n            case 1: \n                $this->setStatus( self::LOGIN_ACCESS, $user, $ip );\n                $ret = true; break;\n            case 2:\n                $this->setStatus( self::LOGIN_WRONG_PASS, $user, $ip );\n                $ret = false; break;\n            case 3:\n                $this->setStatus( self::LOGIN_USER_UNKNOWN, $user, $ip );\n                $ret = false; break;\n        }\n        $this->notify();\n        return $ret;\n    }\n\n    private function setStatus( $status, $user, $ip ) {\n        $this->status = array( $status, $user, $ip ); \n    }\n\n    function getStatus() {\n        return $this->status;\n    }\n\n}\n\ninterface Observer {\n    function update( Observable $observer );\n}\n\nabstract class LoginObserver implements Observer {\n    private $login;\n    function __construct( Login $login ) {\n        $this->login = $login; \n        $login->attach( $this );\n    }\n\n    function update( Observable $observable ) {\n        if ( $observable === $this->login ) {\n            $this->doUpdate( $observable );\n        }\n    }\n\n    abstract function doUpdate( Login $login );\n} \n\nclass SecurityMonitor extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        if ( $status[0] == Login::LOGIN_WRONG_PASS ) {\n            // send mail to sysadmin \n            print __CLASS__.\":\\tsending mail to sysadmin\\n\"; \n        }\n    }\n}\n\nclass GeneralLogger  extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        // add login data to log\n        print __CLASS__.\":\\tadd login data to log\\n\"; \n    }\n}\n\nclass PartnershipTool extends LoginObserver {\n    function doUpdate( Login $login ) {\n        $status = $login->getStatus(); \n        // check $ip address \n        // set cookie if it matches a list\n        print __CLASS__.\":\\tset cookie if it matches a list\\n\"; \n    }\n}\n\n$login = new Login();\nnew SecurityMonitor( $login );\nnew GeneralLogger( $login );\n$pt = new PartnershipTool( $login );\n$login->detach( $pt );\nfor ( $x=0; $x<10; $x++ ) {\n    $login->handleLogin( \"bob\",\"mypass\", '158.152.55.35' );\n    print \"\\n\";\n}\n\n```\n## 访问者模式\n* 意图：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提 下定义作用于这些元素的新操作。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nclass UnitException extends Exception {}\n\nclass TextDumpArmyVisitor extends ArmyVisitor {\n    private $text=\"\";\n\n    function visit( Unit $node ) {\n        $ret = \"\";\n        $pad = 4*$node->getDepth();\n        $ret .= sprintf( \"%{$pad}s\", \"\" );\n        $ret .= get_class($node).\": \";\n        $ret .= \"bombard: \".$node->bombardStrength().\"\\n\";\n        $this->text .= $ret;\n    }\n    function getText() {\n        return $this->text;\n    }\n}\n\nclass TaxCollectionVisitor extends ArmyVisitor {\n    private $due=0;\n    private $report=\"\";\n\n    function visit( Unit $node ) {\n        $this->levy( $node, 1 );\n    }\n\n    function visitArcher( Archer $node ) {\n        $this->levy( $node, 2 );\n    }\n\n    function visitCavalry( Cavalry $node ) {\n        $this->levy( $node, 3 );\n    }\n\n    function visitTroopCarrierUnit( TroopCarrierUnit $node ) {\n        $this->levy( $node, 5 );\n    }\n\n    private function levy( Unit $unit, $amount ) {\n        $this->report .= \"Tax levied for \".get_class( $unit );\n        $this->report .= \": $amount\\n\";\n        $this->due += $amount;\n    }\n\n    function getReport() {\n        return $this->report;\n    }\n\n    function getTax() {\n        return $this->due;\n    }\n}\n\nabstract class ArmyVisitor  {\n    abstract function visit( Unit $node );\n\n    function visitArcher( Archer $node ) {\n        $this->visit( $node );\n    }\n    function visitCavalry( Cavalry $node ) {\n        $this->visit( $node );\n    }\n\n    function visitLaserCanonUnit( LaserCanonUnit $node ) {\n        $this->visit( $node );\n    }\n\n    function visitTroopCarrierUnit( TroopCarrierUnit $node ) {\n        $this->visit( $node );\n    }\n\n    function visitArmy( Army $node ) {\n        $this->visit( $node );\n    }\n}\n\nabstract class Unit {\n    protected $depth = 0;\n\n    function getComposite() {\n        return null;\n    }\n    \n    protected function setDepth( $depth ) {\n        $this->depth=$depth;\n    }\n\n    function getDepth() {\n        return $this->depth;\n    }\n\n    abstract function bombardStrength();\n\n    function accept( ArmyVisitor $visitor ) {\n        $method = \"visit\".get_class( $this );\n        $visitor->$method( $this );\n    }\n}\n\nclass Archer extends Unit {\n    function bombardStrength() {\n        return 4;\n    }\n\n}\n\nclass Cavalry extends Unit {\n    function bombardStrength() {\n        return 2;\n    }\n}\n\nclass LaserCanonUnit extends Unit {\n    function bombardStrength() {\n        return 44;\n    }\n}\n\nabstract class CompositeUnit extends Unit {\n    private $units = array();\n\n    function getComposite() {\n        return $this;\n    }\n\n    function units() {\n        return $this->units;\n    }\n\n    function removeUnit( Unit $unit ) {\n        $units = array();\n        foreach ( $this->units as $thisunit ) {\n            if ( $unit !== $thisunit ) {\n                $units[] = $thisunit;\n            }\n        }\n        $this->units = $units;\n    }\n/*\n    function accept( ArmyVisitor $visitor ) {\n        $method = \"visit\".get_class( $this );\n        $visitor->$method( $this );\n        foreach ( $this->units as $thisunit ) {\n            $thisunit->accept( $visitor );\n        }\n    }\n*/\n\n    function accept( ArmyVisitor $visitor ) {\n        parent::accept( $visitor );\n        foreach ( $this->units as $thisunit ) {\n            $thisunit->accept( $visitor );\n        }\n    }\n\n    function addUnit( Unit $unit ) {\n        foreach ( $this->units as $thisunit ) {\n            if ( $unit === $thisunit ) {\n                return;\n            }\n        }\n        $unit->setDepth($this->depth+1);\n        $this->units[] = $unit;\n    }\n}\n\nclass TroopCarrier extends CompositeUnit {\n\n    function addUnit( Unit $unit ) {\n        if ( $unit instanceof Cavalry ) {\n            throw new UnitException(\"Can't get a horse on the vehicle\");\n        }\n        parent::addUnit( $unit );\n    }\n\n    function bombardStrength() {\n        return 0;\n    }\n}\n\nclass Army extends CompositeUnit {\n\n    function bombardStrength() {\n        $ret = 0;\n        foreach( $this->units() as $unit ) {\n            $ret += $unit->bombardStrength();\n        }\n        return $ret;\n    }\n}\n\n$main_army = new Army();\n$main_army->addUnit( new Archer() );\n$main_army->addUnit( new LaserCanonUnit() );\n$main_army->addUnit( new Cavalry() );\n\n$textdump = new TextDumpArmyVisitor();\n$main_army->accept( $textdump  );\nprint $textdump->getText();\n$taxcollector = new TaxCollectionVisitor();\n$main_army->accept( $taxcollector );\nprint $taxcollector->getReport();\nprint \"TOTAL: \";\nprint $taxcollector->getTax().\"\\n\";\n```\n## 命令模式\n* 意图：将一个请求封装为一个对象,从而使你可用不同的请求对客户进行参数化;对请求排队或记录请求日志,以及支持可撤消的操作。\n* 动机：\n* 实现：\n\n```\n!#/bin/env/php\n<?php\n\nclass CommandNotFoundException extends Exception {}\n\nclass CommandFactory {\n    private static $dir = 'commands';\n\n    static function getCommand( $action='Default' ) {\n        if ( preg_match( '/\\W/', $action ) ) {\n            throw new Exception(\"illegal characters in action\");\n        }\n        $class = UCFirst(strtolower($action)).\"Command\";  \n        $file = self::$dir.DIRECTORY_SEPARATOR.\"$class.php\";\n        if ( ! file_exists( $file ) ) {\n            throw new CommandNotFoundException( \"could not find '$file'\" );\n        }\n        require_once( $file );\n        if ( ! class_exists( $class ) ) {\n            throw new CommandNotFoundException( \"no '$class' class located\" );\n        }\n        $cmd = new $class();\n        return $cmd;\n    }\n}\n\nclass Controller {\n    private $context;\n    function __construct() {\n        $this->context = new CommandContext();\n    }\n\n    function getContext() {\n        return $this->context;\n    }\n\n    function process() {\n        $cmd = CommandFactory::getCommand( $this->context->get('action') );\n        if ( ! $cmd->execute( $this->context ) ) {\n            // handle failure\n        } else {\n            // success\n            // dispatch view\n        }\n    } \n}    \n\n\n\n\n// ------------- helper stuff\nclass User{\n    private $name;\n    function __construct( $name ) {\n        $this->name = $name;\n    }\n}\n\nclass Registry {\n    static function getMessageSystem() {\n        return new MessageSystem();\n    }\n    static function getAccessManager() {\n        return new AccessManager();\n    }\n}\n\nclass MessageSystem {\n    function send( $mail, $msg, $topic ) {\n        print \"sending $mail: $topic: $msg\\n\";\n        return true;\n    }\n\n    function getError() {\n        return \"move along now, nothing to see here\";\n    }\n}\n\nclass AccessManager {\n    function login( $user, $pass ) {\n        $ret = new User( $user );\n        return $ret;\n    }\n\n    function getError() {\n        return \"move along now, nothing to see here\";\n    }\n}\n\nclass CommandContext {\n    private $params = array();\n    private $error = \"\";\n\n    function __construct() {\n        $this->params = $_REQUEST;\n    }\n\n    function addParam( $key, $val ) { \n        $this->params[$key]=$val;\n    }\n\n    function get( $key ) { \n        return $this->params[$key];\n    }\n\n    function setError( $error ) {\n        $this->error = $error;\n    }\n\n    function getError() {\n        return $this->error;\n    }\n}\n\n$controller = new Controller();\n$context = $controller->getContext();\n$context->addParam('action', 'feedback' );\n$context->addParam('email', 'bob@bob.com' );\n$context->addParam('topic', 'my brain' );\n$context->addParam('msg', 'all about my brain' );\n$controller->process();\nprint $context->getError();\n\n```","slug":"design-pattern-with-php-Performing-and-Representing-Tasks","published":1,"updated":"2020-06-14T15:57:16.324Z","comments":1,"photos":[],"link":"","_id":"ckbfpl124001rmp84gg3p1sgd","content":"<h2 id=\"行为模式\"><a href=\"#行为模式\" class=\"headerlink\" title=\"行为模式\"></a>行为模式</h2><p>行为模式涉及到算法和对象间职责的分配。行为模式不仅描述对象或类的模式,还描述 它们之间的通信模式。</p>\n<ul>\n<li>解释器(Interpreter)模式：构造一个可以用于创建脚本化应用的mini语言解释器。</li>\n<li>策略(Strategy)模式：在系统中定义算法并以它们自己的类型封装。</li>\n<li>观察者(Observer)模式：创建依赖关系，当有系统事件发生时通知观察者对象。</li>\n<li>访问者(Vistor)模式：在对象树的所有节点上应用操作。</li>\n<li>命令(Command)模式：创建可被保存和传送的命令对象。</li>\n</ul>\n<h2 id=\"解释器模式\"><a href=\"#解释器模式\" class=\"headerlink\" title=\"解释器模式\"></a>解释器模式</h2><ul>\n<li>意图：给定一个语言,定义它的文法的一种表示,并定义一个解释器,这个解释器使用该表示 来解释语言中的句子。</li>\n<li>动机：为高级用户提供一种领域语言（DSL —— Domain Specific Language，领域特定语言）可以使用户自己来扩展系统功能，但是又需要限制用户使用语言的权限，例如：用户输入”print file_get_content(‘/etc/passwd’)”，程序执行后会获得系统权限。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br></pre></td></tr></table></figure>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><ul>\n<li>意图：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。本模式使得算法可独 立于使用它的客户而变化。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br></pre></td></tr></table></figure>\n<h2 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h2><ul>\n<li>意图：定义对象间的一种一对多的依赖关系 ,当一个对象的状态发生改变时 , 所有依赖于它的对象 都得到通知并被自动更新。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">interface Observable &#123;</span><br><span class=\"line\">    function attach( Observer $observer );</span><br><span class=\"line\">    function detach( Observer $observer );</span><br><span class=\"line\">    function notify();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Login implements Observable &#123;</span><br><span class=\"line\">    private $observers &#x3D; array();</span><br><span class=\"line\">    const LOGIN_USER_UNKNOWN &#x3D; 1;</span><br><span class=\"line\">    const LOGIN_WRONG_PASS   &#x3D; 2;</span><br><span class=\"line\">    const LOGIN_ACCESS       &#x3D; 3;</span><br><span class=\"line\"></span><br><span class=\"line\">    function attach( Observer $observer ) &#123;</span><br><span class=\"line\">        $this-&gt;observers[] &#x3D; $observer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function detach( Observer $observer ) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; &gt;&#x3D; php 5.3</span><br><span class=\"line\">        &#x2F;&#x2F;$this-&gt;observers &#x3D; array_udiff( $this-&gt;observers, array( $observer ), </span><br><span class=\"line\">        &#x2F;&#x2F;                function( $a, $b ) &#123; return ($a &#x3D;&#x3D;&#x3D; $b)?0:1; &#125; );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F; &lt; php 5.3</span><br><span class=\"line\">        $this-&gt;observers &#x3D; array_udiff( $this-&gt;observers, array( $observer ), </span><br><span class=\"line\">                        create_function( &#39;$a,$b&#39;, &#39;return ($a &#x3D;&#x3D;&#x3D; $b)?0:1;&#39;) );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function notify() &#123;</span><br><span class=\"line\">        foreach ( $this-&gt;observers as $obs ) &#123;</span><br><span class=\"line\">            $obs-&gt;update( $this );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function handleLogin( $user, $pass, $ip ) &#123;</span><br><span class=\"line\">        switch ( rand(1,3) ) &#123;</span><br><span class=\"line\">            case 1: </span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_ACCESS, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; true; break;</span><br><span class=\"line\">            case 2:</span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_WRONG_PASS, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; false; break;</span><br><span class=\"line\">            case 3:</span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_USER_UNKNOWN, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; false; break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;notify();</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function setStatus( $status, $user, $ip ) &#123;</span><br><span class=\"line\">        $this-&gt;status &#x3D; array( $status, $user, $ip ); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getStatus() &#123;</span><br><span class=\"line\">        return $this-&gt;status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface Observer &#123;</span><br><span class=\"line\">    function update( Observable $observer );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class LoginObserver implements Observer &#123;</span><br><span class=\"line\">    private $login;</span><br><span class=\"line\">    function __construct( Login $login ) &#123;</span><br><span class=\"line\">        $this-&gt;login &#x3D; $login; </span><br><span class=\"line\">        $login-&gt;attach( $this );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function update( Observable $observable ) &#123;</span><br><span class=\"line\">        if ( $observable &#x3D;&#x3D;&#x3D; $this-&gt;login ) &#123;</span><br><span class=\"line\">            $this-&gt;doUpdate( $observable );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function doUpdate( Login $login );</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">class SecurityMonitor extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        if ( $status[0] &#x3D;&#x3D; Login::LOGIN_WRONG_PASS ) &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; send mail to sysadmin </span><br><span class=\"line\">            print __CLASS__.&quot;:\\tsending mail to sysadmin\\n&quot;; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class GeneralLogger  extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        &#x2F;&#x2F; add login data to log</span><br><span class=\"line\">        print __CLASS__.&quot;:\\tadd login data to log\\n&quot;; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PartnershipTool extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        &#x2F;&#x2F; check $ip address </span><br><span class=\"line\">        &#x2F;&#x2F; set cookie if it matches a list</span><br><span class=\"line\">        print __CLASS__.&quot;:\\tset cookie if it matches a list\\n&quot;; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$login &#x3D; new Login();</span><br><span class=\"line\">new SecurityMonitor( $login );</span><br><span class=\"line\">new GeneralLogger( $login );</span><br><span class=\"line\">$pt &#x3D; new PartnershipTool( $login );</span><br><span class=\"line\">$login-&gt;detach( $pt );</span><br><span class=\"line\">for ( $x&#x3D;0; $x&lt;10; $x++ ) &#123;</span><br><span class=\"line\">    $login-&gt;handleLogin( &quot;bob&quot;,&quot;mypass&quot;, &#39;158.152.55.35&#39; );</span><br><span class=\"line\">    print &quot;\\n&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问者模式\"><a href=\"#访问者模式\" class=\"headerlink\" title=\"访问者模式\"></a>访问者模式</h2><ul>\n<li>意图：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提 下定义作用于这些元素的新操作。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class UnitException extends Exception &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TextDumpArmyVisitor extends ArmyVisitor &#123;</span><br><span class=\"line\">    private $text&#x3D;&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visit( Unit $node ) &#123;</span><br><span class=\"line\">        $ret &#x3D; &quot;&quot;;</span><br><span class=\"line\">        $pad &#x3D; 4*$node-&gt;getDepth();</span><br><span class=\"line\">        $ret .&#x3D; sprintf( &quot;%&#123;$pad&#125;s&quot;, &quot;&quot; );</span><br><span class=\"line\">        $ret .&#x3D; get_class($node).&quot;: &quot;;</span><br><span class=\"line\">        $ret .&#x3D; &quot;bombard: &quot;.$node-&gt;bombardStrength().&quot;\\n&quot;;</span><br><span class=\"line\">        $this-&gt;text .&#x3D; $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function getText() &#123;</span><br><span class=\"line\">        return $this-&gt;text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TaxCollectionVisitor extends ArmyVisitor &#123;</span><br><span class=\"line\">    private $due&#x3D;0;</span><br><span class=\"line\">    private $report&#x3D;&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visit( Unit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 1 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArcher( Archer $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 2 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitCavalry( Cavalry $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 3 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitTroopCarrierUnit( TroopCarrierUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 5 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function levy( Unit $unit, $amount ) &#123;</span><br><span class=\"line\">        $this-&gt;report .&#x3D; &quot;Tax levied for &quot;.get_class( $unit );</span><br><span class=\"line\">        $this-&gt;report .&#x3D; &quot;: $amount\\n&quot;;</span><br><span class=\"line\">        $this-&gt;due +&#x3D; $amount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getReport() &#123;</span><br><span class=\"line\">        return $this-&gt;report;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTax() &#123;</span><br><span class=\"line\">        return $this-&gt;due;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class ArmyVisitor  &#123;</span><br><span class=\"line\">    abstract function visit( Unit $node );</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArcher( Archer $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function visitCavalry( Cavalry $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitLaserCanonUnit( LaserCanonUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitTroopCarrierUnit( TroopCarrierUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArmy( Army $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Unit &#123;</span><br><span class=\"line\">    protected $depth &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    protected function setDepth( $depth ) &#123;</span><br><span class=\"line\">        $this-&gt;depth&#x3D;$depth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getDepth() &#123;</span><br><span class=\"line\">        return $this-&gt;depth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function bombardStrength();</span><br><span class=\"line\"></span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        $method &#x3D; &quot;visit&quot;.get_class( $this );</span><br><span class=\"line\">        $visitor-&gt;$method( $this );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Archer extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Cavalry extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class LaserCanonUnit extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 44;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CompositeUnit extends Unit &#123;</span><br><span class=\"line\">    private $units &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return $this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function units() &#123;</span><br><span class=\"line\">        return $this-&gt;units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function removeUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        $units &#x3D; array();</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            if ( $unit !&#x3D;&#x3D; $thisunit ) &#123;</span><br><span class=\"line\">                $units[] &#x3D; $thisunit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;units &#x3D; $units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        $method &#x3D; &quot;visit&quot;.get_class( $this );</span><br><span class=\"line\">        $visitor-&gt;$method( $this );</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            $thisunit-&gt;accept( $visitor );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        parent::accept( $visitor );</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            $thisunit-&gt;accept( $visitor );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            if ( $unit &#x3D;&#x3D;&#x3D; $thisunit ) &#123;</span><br><span class=\"line\">                return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $unit-&gt;setDepth($this-&gt;depth+1);</span><br><span class=\"line\">        $this-&gt;units[] &#x3D; $unit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TroopCarrier extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        if ( $unit instanceof Cavalry ) &#123;</span><br><span class=\"line\">            throw new UnitException(&quot;Can&#39;t get a horse on the vehicle&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        parent::addUnit( $unit );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Army extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        $ret &#x3D; 0;</span><br><span class=\"line\">        foreach( $this-&gt;units() as $unit ) &#123;</span><br><span class=\"line\">            $ret +&#x3D; $unit-&gt;bombardStrength();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$main_army &#x3D; new Army();</span><br><span class=\"line\">$main_army-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$main_army-&gt;addUnit( new LaserCanonUnit() );</span><br><span class=\"line\">$main_army-&gt;addUnit( new Cavalry() );</span><br><span class=\"line\"></span><br><span class=\"line\">$textdump &#x3D; new TextDumpArmyVisitor();</span><br><span class=\"line\">$main_army-&gt;accept( $textdump  );</span><br><span class=\"line\">print $textdump-&gt;getText();</span><br><span class=\"line\">$taxcollector &#x3D; new TaxCollectionVisitor();</span><br><span class=\"line\">$main_army-&gt;accept( $taxcollector );</span><br><span class=\"line\">print $taxcollector-&gt;getReport();</span><br><span class=\"line\">print &quot;TOTAL: &quot;;</span><br><span class=\"line\">print $taxcollector-&gt;getTax().&quot;\\n&quot;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令模式\"><a href=\"#命令模式\" class=\"headerlink\" title=\"命令模式\"></a>命令模式</h2><ul>\n<li>意图：将一个请求封装为一个对象,从而使你可用不同的请求对客户进行参数化;对请求排队或记录请求日志,以及支持可撤消的操作。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandNotFoundException extends Exception &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandFactory &#123;</span><br><span class=\"line\">    private static $dir &#x3D; &#39;commands&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\">    static function getCommand( $action&#x3D;&#39;Default&#39; ) &#123;</span><br><span class=\"line\">        if ( preg_match( &#39;&#x2F;\\W&#x2F;&#39;, $action ) ) &#123;</span><br><span class=\"line\">            throw new Exception(&quot;illegal characters in action&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $class &#x3D; UCFirst(strtolower($action)).&quot;Command&quot;;  </span><br><span class=\"line\">        $file &#x3D; self::$dir.DIRECTORY_SEPARATOR.&quot;$class.php&quot;;</span><br><span class=\"line\">        if ( ! file_exists( $file ) ) &#123;</span><br><span class=\"line\">            throw new CommandNotFoundException( &quot;could not find &#39;$file&#39;&quot; );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        require_once( $file );</span><br><span class=\"line\">        if ( ! class_exists( $class ) ) &#123;</span><br><span class=\"line\">            throw new CommandNotFoundException( &quot;no &#39;$class&#39; class located&quot; );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $cmd &#x3D; new $class();</span><br><span class=\"line\">        return $cmd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Controller &#123;</span><br><span class=\"line\">    private $context;</span><br><span class=\"line\">    function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;context &#x3D; new CommandContext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContext() &#123;</span><br><span class=\"line\">        return $this-&gt;context;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function process() &#123;</span><br><span class=\"line\">        $cmd &#x3D; CommandFactory::getCommand( $this-&gt;context-&gt;get(&#39;action&#39;) );</span><br><span class=\"line\">        if ( ! $cmd-&gt;execute( $this-&gt;context ) ) &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; handle failure</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; success</span><br><span class=\"line\">            &#x2F;&#x2F; dispatch view</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; ------------- helper stuff</span><br><span class=\"line\">class User&#123;</span><br><span class=\"line\">    private $name;</span><br><span class=\"line\">    function __construct( $name ) &#123;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Registry &#123;</span><br><span class=\"line\">    static function getMessageSystem() &#123;</span><br><span class=\"line\">        return new MessageSystem();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    static function getAccessManager() &#123;</span><br><span class=\"line\">        return new AccessManager();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class MessageSystem &#123;</span><br><span class=\"line\">    function send( $mail, $msg, $topic ) &#123;</span><br><span class=\"line\">        print &quot;sending $mail: $topic: $msg\\n&quot;;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return &quot;move along now, nothing to see here&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class AccessManager &#123;</span><br><span class=\"line\">    function login( $user, $pass ) &#123;</span><br><span class=\"line\">        $ret &#x3D; new User( $user );</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return &quot;move along now, nothing to see here&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandContext &#123;</span><br><span class=\"line\">    private $params &#x3D; array();</span><br><span class=\"line\">    private $error &#x3D; &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;params &#x3D; $_REQUEST;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addParam( $key, $val ) &#123; </span><br><span class=\"line\">        $this-&gt;params[$key]&#x3D;$val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function get( $key ) &#123; </span><br><span class=\"line\">        return $this-&gt;params[$key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function setError( $error ) &#123;</span><br><span class=\"line\">        $this-&gt;error &#x3D; $error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return $this-&gt;error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$controller &#x3D; new Controller();</span><br><span class=\"line\">$context &#x3D; $controller-&gt;getContext();</span><br><span class=\"line\">$context-&gt;addParam(&#39;action&#39;, &#39;feedback&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;email&#39;, &#39;bob@bob.com&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;topic&#39;, &#39;my brain&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;msg&#39;, &#39;all about my brain&#39; );</span><br><span class=\"line\">$controller-&gt;process();</span><br><span class=\"line\">print $context-&gt;getError();</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"行为模式\"><a href=\"#行为模式\" class=\"headerlink\" title=\"行为模式\"></a>行为模式</h2><p>行为模式涉及到算法和对象间职责的分配。行为模式不仅描述对象或类的模式,还描述 它们之间的通信模式。</p>\n<ul>\n<li>解释器(Interpreter)模式：构造一个可以用于创建脚本化应用的mini语言解释器。</li>\n<li>策略(Strategy)模式：在系统中定义算法并以它们自己的类型封装。</li>\n<li>观察者(Observer)模式：创建依赖关系，当有系统事件发生时通知观察者对象。</li>\n<li>访问者(Vistor)模式：在对象树的所有节点上应用操作。</li>\n<li>命令(Command)模式：创建可被保存和传送的命令对象。</li>\n</ul>\n<h2 id=\"解释器模式\"><a href=\"#解释器模式\" class=\"headerlink\" title=\"解释器模式\"></a>解释器模式</h2><ul>\n<li>意图：给定一个语言,定义它的文法的一种表示,并定义一个解释器,这个解释器使用该表示 来解释语言中的句子。</li>\n<li>动机：为高级用户提供一种领域语言（DSL —— Domain Specific Language，领域特定语言）可以使用户自己来扩展系统功能，但是又需要限制用户使用语言的权限，例如：用户输入”print file_get_content(‘/etc/passwd’)”，程序执行后会获得系统权限。</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br></pre></td></tr></table></figure>\n<h2 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h2><ul>\n<li>意图：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。本模式使得算法可独 立于使用它的客户而变化。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br></pre></td></tr></table></figure>\n<h2 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h2><ul>\n<li>意图：定义对象间的一种一对多的依赖关系 ,当一个对象的状态发生改变时 , 所有依赖于它的对象 都得到通知并被自动更新。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">interface Observable &#123;</span><br><span class=\"line\">    function attach( Observer $observer );</span><br><span class=\"line\">    function detach( Observer $observer );</span><br><span class=\"line\">    function notify();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Login implements Observable &#123;</span><br><span class=\"line\">    private $observers &#x3D; array();</span><br><span class=\"line\">    const LOGIN_USER_UNKNOWN &#x3D; 1;</span><br><span class=\"line\">    const LOGIN_WRONG_PASS   &#x3D; 2;</span><br><span class=\"line\">    const LOGIN_ACCESS       &#x3D; 3;</span><br><span class=\"line\"></span><br><span class=\"line\">    function attach( Observer $observer ) &#123;</span><br><span class=\"line\">        $this-&gt;observers[] &#x3D; $observer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function detach( Observer $observer ) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; &gt;&#x3D; php 5.3</span><br><span class=\"line\">        &#x2F;&#x2F;$this-&gt;observers &#x3D; array_udiff( $this-&gt;observers, array( $observer ), </span><br><span class=\"line\">        &#x2F;&#x2F;                function( $a, $b ) &#123; return ($a &#x3D;&#x3D;&#x3D; $b)?0:1; &#125; );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F; &lt; php 5.3</span><br><span class=\"line\">        $this-&gt;observers &#x3D; array_udiff( $this-&gt;observers, array( $observer ), </span><br><span class=\"line\">                        create_function( &#39;$a,$b&#39;, &#39;return ($a &#x3D;&#x3D;&#x3D; $b)?0:1;&#39;) );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function notify() &#123;</span><br><span class=\"line\">        foreach ( $this-&gt;observers as $obs ) &#123;</span><br><span class=\"line\">            $obs-&gt;update( $this );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function handleLogin( $user, $pass, $ip ) &#123;</span><br><span class=\"line\">        switch ( rand(1,3) ) &#123;</span><br><span class=\"line\">            case 1: </span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_ACCESS, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; true; break;</span><br><span class=\"line\">            case 2:</span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_WRONG_PASS, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; false; break;</span><br><span class=\"line\">            case 3:</span><br><span class=\"line\">                $this-&gt;setStatus( self::LOGIN_USER_UNKNOWN, $user, $ip );</span><br><span class=\"line\">                $ret &#x3D; false; break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;notify();</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function setStatus( $status, $user, $ip ) &#123;</span><br><span class=\"line\">        $this-&gt;status &#x3D; array( $status, $user, $ip ); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getStatus() &#123;</span><br><span class=\"line\">        return $this-&gt;status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface Observer &#123;</span><br><span class=\"line\">    function update( Observable $observer );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class LoginObserver implements Observer &#123;</span><br><span class=\"line\">    private $login;</span><br><span class=\"line\">    function __construct( Login $login ) &#123;</span><br><span class=\"line\">        $this-&gt;login &#x3D; $login; </span><br><span class=\"line\">        $login-&gt;attach( $this );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function update( Observable $observable ) &#123;</span><br><span class=\"line\">        if ( $observable &#x3D;&#x3D;&#x3D; $this-&gt;login ) &#123;</span><br><span class=\"line\">            $this-&gt;doUpdate( $observable );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function doUpdate( Login $login );</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">class SecurityMonitor extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        if ( $status[0] &#x3D;&#x3D; Login::LOGIN_WRONG_PASS ) &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; send mail to sysadmin </span><br><span class=\"line\">            print __CLASS__.&quot;:\\tsending mail to sysadmin\\n&quot;; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class GeneralLogger  extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        &#x2F;&#x2F; add login data to log</span><br><span class=\"line\">        print __CLASS__.&quot;:\\tadd login data to log\\n&quot;; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PartnershipTool extends LoginObserver &#123;</span><br><span class=\"line\">    function doUpdate( Login $login ) &#123;</span><br><span class=\"line\">        $status &#x3D; $login-&gt;getStatus(); </span><br><span class=\"line\">        &#x2F;&#x2F; check $ip address </span><br><span class=\"line\">        &#x2F;&#x2F; set cookie if it matches a list</span><br><span class=\"line\">        print __CLASS__.&quot;:\\tset cookie if it matches a list\\n&quot;; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$login &#x3D; new Login();</span><br><span class=\"line\">new SecurityMonitor( $login );</span><br><span class=\"line\">new GeneralLogger( $login );</span><br><span class=\"line\">$pt &#x3D; new PartnershipTool( $login );</span><br><span class=\"line\">$login-&gt;detach( $pt );</span><br><span class=\"line\">for ( $x&#x3D;0; $x&lt;10; $x++ ) &#123;</span><br><span class=\"line\">    $login-&gt;handleLogin( &quot;bob&quot;,&quot;mypass&quot;, &#39;158.152.55.35&#39; );</span><br><span class=\"line\">    print &quot;\\n&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问者模式\"><a href=\"#访问者模式\" class=\"headerlink\" title=\"访问者模式\"></a>访问者模式</h2><ul>\n<li>意图：表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提 下定义作用于这些元素的新操作。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class UnitException extends Exception &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TextDumpArmyVisitor extends ArmyVisitor &#123;</span><br><span class=\"line\">    private $text&#x3D;&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visit( Unit $node ) &#123;</span><br><span class=\"line\">        $ret &#x3D; &quot;&quot;;</span><br><span class=\"line\">        $pad &#x3D; 4*$node-&gt;getDepth();</span><br><span class=\"line\">        $ret .&#x3D; sprintf( &quot;%&#123;$pad&#125;s&quot;, &quot;&quot; );</span><br><span class=\"line\">        $ret .&#x3D; get_class($node).&quot;: &quot;;</span><br><span class=\"line\">        $ret .&#x3D; &quot;bombard: &quot;.$node-&gt;bombardStrength().&quot;\\n&quot;;</span><br><span class=\"line\">        $this-&gt;text .&#x3D; $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function getText() &#123;</span><br><span class=\"line\">        return $this-&gt;text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TaxCollectionVisitor extends ArmyVisitor &#123;</span><br><span class=\"line\">    private $due&#x3D;0;</span><br><span class=\"line\">    private $report&#x3D;&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visit( Unit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 1 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArcher( Archer $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 2 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitCavalry( Cavalry $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 3 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitTroopCarrierUnit( TroopCarrierUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;levy( $node, 5 );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function levy( Unit $unit, $amount ) &#123;</span><br><span class=\"line\">        $this-&gt;report .&#x3D; &quot;Tax levied for &quot;.get_class( $unit );</span><br><span class=\"line\">        $this-&gt;report .&#x3D; &quot;: $amount\\n&quot;;</span><br><span class=\"line\">        $this-&gt;due +&#x3D; $amount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getReport() &#123;</span><br><span class=\"line\">        return $this-&gt;report;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTax() &#123;</span><br><span class=\"line\">        return $this-&gt;due;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class ArmyVisitor  &#123;</span><br><span class=\"line\">    abstract function visit( Unit $node );</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArcher( Archer $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function visitCavalry( Cavalry $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitLaserCanonUnit( LaserCanonUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitTroopCarrierUnit( TroopCarrierUnit $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function visitArmy( Army $node ) &#123;</span><br><span class=\"line\">        $this-&gt;visit( $node );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Unit &#123;</span><br><span class=\"line\">    protected $depth &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    protected function setDepth( $depth ) &#123;</span><br><span class=\"line\">        $this-&gt;depth&#x3D;$depth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getDepth() &#123;</span><br><span class=\"line\">        return $this-&gt;depth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    abstract function bombardStrength();</span><br><span class=\"line\"></span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        $method &#x3D; &quot;visit&quot;.get_class( $this );</span><br><span class=\"line\">        $visitor-&gt;$method( $this );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Archer extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 4;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Cavalry extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class LaserCanonUnit extends Unit &#123;</span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 44;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CompositeUnit extends Unit &#123;</span><br><span class=\"line\">    private $units &#x3D; array();</span><br><span class=\"line\"></span><br><span class=\"line\">    function getComposite() &#123;</span><br><span class=\"line\">        return $this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function units() &#123;</span><br><span class=\"line\">        return $this-&gt;units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function removeUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        $units &#x3D; array();</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            if ( $unit !&#x3D;&#x3D; $thisunit ) &#123;</span><br><span class=\"line\">                $units[] &#x3D; $thisunit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $this-&gt;units &#x3D; $units;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        $method &#x3D; &quot;visit&quot;.get_class( $this );</span><br><span class=\"line\">        $visitor-&gt;$method( $this );</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            $thisunit-&gt;accept( $visitor );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">    function accept( ArmyVisitor $visitor ) &#123;</span><br><span class=\"line\">        parent::accept( $visitor );</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            $thisunit-&gt;accept( $visitor );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        foreach ( $this-&gt;units as $thisunit ) &#123;</span><br><span class=\"line\">            if ( $unit &#x3D;&#x3D;&#x3D; $thisunit ) &#123;</span><br><span class=\"line\">                return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $unit-&gt;setDepth($this-&gt;depth+1);</span><br><span class=\"line\">        $this-&gt;units[] &#x3D; $unit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TroopCarrier extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addUnit( Unit $unit ) &#123;</span><br><span class=\"line\">        if ( $unit instanceof Cavalry ) &#123;</span><br><span class=\"line\">            throw new UnitException(&quot;Can&#39;t get a horse on the vehicle&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        parent::addUnit( $unit );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Army extends CompositeUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function bombardStrength() &#123;</span><br><span class=\"line\">        $ret &#x3D; 0;</span><br><span class=\"line\">        foreach( $this-&gt;units() as $unit ) &#123;</span><br><span class=\"line\">            $ret +&#x3D; $unit-&gt;bombardStrength();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$main_army &#x3D; new Army();</span><br><span class=\"line\">$main_army-&gt;addUnit( new Archer() );</span><br><span class=\"line\">$main_army-&gt;addUnit( new LaserCanonUnit() );</span><br><span class=\"line\">$main_army-&gt;addUnit( new Cavalry() );</span><br><span class=\"line\"></span><br><span class=\"line\">$textdump &#x3D; new TextDumpArmyVisitor();</span><br><span class=\"line\">$main_army-&gt;accept( $textdump  );</span><br><span class=\"line\">print $textdump-&gt;getText();</span><br><span class=\"line\">$taxcollector &#x3D; new TaxCollectionVisitor();</span><br><span class=\"line\">$main_army-&gt;accept( $taxcollector );</span><br><span class=\"line\">print $taxcollector-&gt;getReport();</span><br><span class=\"line\">print &quot;TOTAL: &quot;;</span><br><span class=\"line\">print $taxcollector-&gt;getTax().&quot;\\n&quot;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令模式\"><a href=\"#命令模式\" class=\"headerlink\" title=\"命令模式\"></a>命令模式</h2><ul>\n<li>意图：将一个请求封装为一个对象,从而使你可用不同的请求对客户进行参数化;对请求排队或记录请求日志,以及支持可撤消的操作。</li>\n<li>动机：</li>\n<li>实现：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!#&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandNotFoundException extends Exception &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandFactory &#123;</span><br><span class=\"line\">    private static $dir &#x3D; &#39;commands&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\">    static function getCommand( $action&#x3D;&#39;Default&#39; ) &#123;</span><br><span class=\"line\">        if ( preg_match( &#39;&#x2F;\\W&#x2F;&#39;, $action ) ) &#123;</span><br><span class=\"line\">            throw new Exception(&quot;illegal characters in action&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $class &#x3D; UCFirst(strtolower($action)).&quot;Command&quot;;  </span><br><span class=\"line\">        $file &#x3D; self::$dir.DIRECTORY_SEPARATOR.&quot;$class.php&quot;;</span><br><span class=\"line\">        if ( ! file_exists( $file ) ) &#123;</span><br><span class=\"line\">            throw new CommandNotFoundException( &quot;could not find &#39;$file&#39;&quot; );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        require_once( $file );</span><br><span class=\"line\">        if ( ! class_exists( $class ) ) &#123;</span><br><span class=\"line\">            throw new CommandNotFoundException( &quot;no &#39;$class&#39; class located&quot; );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $cmd &#x3D; new $class();</span><br><span class=\"line\">        return $cmd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Controller &#123;</span><br><span class=\"line\">    private $context;</span><br><span class=\"line\">    function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;context &#x3D; new CommandContext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContext() &#123;</span><br><span class=\"line\">        return $this-&gt;context;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function process() &#123;</span><br><span class=\"line\">        $cmd &#x3D; CommandFactory::getCommand( $this-&gt;context-&gt;get(&#39;action&#39;) );</span><br><span class=\"line\">        if ( ! $cmd-&gt;execute( $this-&gt;context ) ) &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; handle failure</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            &#x2F;&#x2F; success</span><br><span class=\"line\">            &#x2F;&#x2F; dispatch view</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; ------------- helper stuff</span><br><span class=\"line\">class User&#123;</span><br><span class=\"line\">    private $name;</span><br><span class=\"line\">    function __construct( $name ) &#123;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Registry &#123;</span><br><span class=\"line\">    static function getMessageSystem() &#123;</span><br><span class=\"line\">        return new MessageSystem();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    static function getAccessManager() &#123;</span><br><span class=\"line\">        return new AccessManager();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class MessageSystem &#123;</span><br><span class=\"line\">    function send( $mail, $msg, $topic ) &#123;</span><br><span class=\"line\">        print &quot;sending $mail: $topic: $msg\\n&quot;;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return &quot;move along now, nothing to see here&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class AccessManager &#123;</span><br><span class=\"line\">    function login( $user, $pass ) &#123;</span><br><span class=\"line\">        $ret &#x3D; new User( $user );</span><br><span class=\"line\">        return $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return &quot;move along now, nothing to see here&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class CommandContext &#123;</span><br><span class=\"line\">    private $params &#x3D; array();</span><br><span class=\"line\">    private $error &#x3D; &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct() &#123;</span><br><span class=\"line\">        $this-&gt;params &#x3D; $_REQUEST;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function addParam( $key, $val ) &#123; </span><br><span class=\"line\">        $this-&gt;params[$key]&#x3D;$val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function get( $key ) &#123; </span><br><span class=\"line\">        return $this-&gt;params[$key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function setError( $error ) &#123;</span><br><span class=\"line\">        $this-&gt;error &#x3D; $error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getError() &#123;</span><br><span class=\"line\">        return $this-&gt;error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$controller &#x3D; new Controller();</span><br><span class=\"line\">$context &#x3D; $controller-&gt;getContext();</span><br><span class=\"line\">$context-&gt;addParam(&#39;action&#39;, &#39;feedback&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;email&#39;, &#39;bob@bob.com&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;topic&#39;, &#39;my brain&#39; );</span><br><span class=\"line\">$context-&gt;addParam(&#39;msg&#39;, &#39;all about my brain&#39; );</span><br><span class=\"line\">$controller-&gt;process();</span><br><span class=\"line\">print $context-&gt;getError();</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Design Pattern with PHP: What is Design Pattern","date":"2015-03-29T16:00:00.000Z","description":"Design Pattern with PHP For What is Design Pattern","_content":"\n## 什么是设计模式\n模式便是特定环境下同类问题的一种解决方案\n## 设计模式概览\n一个设计模式的核心有4部分：命名、问题、解决方案、效果\n## 设计模式组成\n* 意图：模式目的的简要概括\n* 动机：需要被解决的问题，通常根据一个典型的情况\n* 适用性：检验不同情况下是否可以应用某模式。（动机描述了一个典型问题，而适用性定义了特殊的情况，并衡量该解决方案在每种情况的价值）\n* 结构/交互：可能包含的UML类图和交互图，用于描述解决方案中类和对象之间的关系。\n* 实现：解决方案细节.\n* 示例代码：\n* 已知应用：使用该模式的真实系统\n* 相关模式：模式间的合作。\n##设计模式原则\n* 组合与继承，组合优于继承\n* 解耦\n* 针对接口编程，而不是针对实现编程","source":"_posts/design-pattern-with-php-what-is-design-pattern.md","raw":"---\nlayout: post\ntitle: \"Design Pattern with PHP: What is Design Pattern\"\ndate:   2015-03-30\ndescription: Design Pattern with PHP For What is Design Pattern\ncategories: Design Pattern\ntags: Design Pattern\n---\n\n## 什么是设计模式\n模式便是特定环境下同类问题的一种解决方案\n## 设计模式概览\n一个设计模式的核心有4部分：命名、问题、解决方案、效果\n## 设计模式组成\n* 意图：模式目的的简要概括\n* 动机：需要被解决的问题，通常根据一个典型的情况\n* 适用性：检验不同情况下是否可以应用某模式。（动机描述了一个典型问题，而适用性定义了特殊的情况，并衡量该解决方案在每种情况的价值）\n* 结构/交互：可能包含的UML类图和交互图，用于描述解决方案中类和对象之间的关系。\n* 实现：解决方案细节.\n* 示例代码：\n* 已知应用：使用该模式的真实系统\n* 相关模式：模式间的合作。\n##设计模式原则\n* 组合与继承，组合优于继承\n* 解耦\n* 针对接口编程，而不是针对实现编程","slug":"design-pattern-with-php-what-is-design-pattern","published":1,"updated":"2020-06-14T15:57:16.320Z","comments":1,"photos":[],"link":"","_id":"ckbfpl125001ump8469rjas7j","content":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><p>模式便是特定环境下同类问题的一种解决方案</p>\n<h2 id=\"设计模式概览\"><a href=\"#设计模式概览\" class=\"headerlink\" title=\"设计模式概览\"></a>设计模式概览</h2><p>一个设计模式的核心有4部分：命名、问题、解决方案、效果</p>\n<h2 id=\"设计模式组成\"><a href=\"#设计模式组成\" class=\"headerlink\" title=\"设计模式组成\"></a>设计模式组成</h2><ul>\n<li>意图：模式目的的简要概括</li>\n<li>动机：需要被解决的问题，通常根据一个典型的情况</li>\n<li>适用性：检验不同情况下是否可以应用某模式。（动机描述了一个典型问题，而适用性定义了特殊的情况，并衡量该解决方案在每种情况的价值）</li>\n<li>结构/交互：可能包含的UML类图和交互图，用于描述解决方案中类和对象之间的关系。</li>\n<li>实现：解决方案细节.</li>\n<li>示例代码：</li>\n<li>已知应用：使用该模式的真实系统</li>\n<li>相关模式：模式间的合作。<br>##设计模式原则</li>\n<li>组合与继承，组合优于继承</li>\n<li>解耦</li>\n<li>针对接口编程，而不是针对实现编程</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是设计模式\"><a href=\"#什么是设计模式\" class=\"headerlink\" title=\"什么是设计模式\"></a>什么是设计模式</h2><p>模式便是特定环境下同类问题的一种解决方案</p>\n<h2 id=\"设计模式概览\"><a href=\"#设计模式概览\" class=\"headerlink\" title=\"设计模式概览\"></a>设计模式概览</h2><p>一个设计模式的核心有4部分：命名、问题、解决方案、效果</p>\n<h2 id=\"设计模式组成\"><a href=\"#设计模式组成\" class=\"headerlink\" title=\"设计模式组成\"></a>设计模式组成</h2><ul>\n<li>意图：模式目的的简要概括</li>\n<li>动机：需要被解决的问题，通常根据一个典型的情况</li>\n<li>适用性：检验不同情况下是否可以应用某模式。（动机描述了一个典型问题，而适用性定义了特殊的情况，并衡量该解决方案在每种情况的价值）</li>\n<li>结构/交互：可能包含的UML类图和交互图，用于描述解决方案中类和对象之间的关系。</li>\n<li>实现：解决方案细节.</li>\n<li>示例代码：</li>\n<li>已知应用：使用该模式的真实系统</li>\n<li>相关模式：模式间的合作。<br>##设计模式原则</li>\n<li>组合与继承，组合优于继承</li>\n<li>解耦</li>\n<li>针对接口编程，而不是针对实现编程</li>\n</ul>\n"},{"layout":"post","title":"Docker Hub","date":"2016-01-17T16:00:00.000Z","description":"Docker Hub","_content":"\nAfter create docker image, I want to push image to docker hub to using next time easy. I should do as follow:\n\n* Need to make sure I login docker hub\n\n\t```\n\tdocker login --username=<YOUR_USERNAME> --email=<YOUR_EMAIL>\n\t```\n\tIt will save login credentials in $HOME/.docker/config.json\n* Create tag for image\n\n    ```\n    docker tag <IMAGE ID> <USERNAME>/<IMAGE NAME>\n    ```\n\n* Push image\n\n    ```\n    docker push <USERNAME>/<IMAGE NAME>\n    ```\n\nAnd then, you can pull you image everywhere(with VPN in some place).\n","source":"_posts/docker-hub.md","raw":"---\nlayout: post\ntitle: \"Docker Hub\"\ndate:   2016-01-18\ndescription: Docker Hub\ncategories: Docker\ntags: docker\n---\n\nAfter create docker image, I want to push image to docker hub to using next time easy. I should do as follow:\n\n* Need to make sure I login docker hub\n\n\t```\n\tdocker login --username=<YOUR_USERNAME> --email=<YOUR_EMAIL>\n\t```\n\tIt will save login credentials in $HOME/.docker/config.json\n* Create tag for image\n\n    ```\n    docker tag <IMAGE ID> <USERNAME>/<IMAGE NAME>\n    ```\n\n* Push image\n\n    ```\n    docker push <USERNAME>/<IMAGE NAME>\n    ```\n\nAnd then, you can pull you image everywhere(with VPN in some place).\n","slug":"docker-hub","published":1,"updated":"2020-06-14T15:57:16.326Z","comments":1,"photos":[],"link":"","_id":"ckbfpl127001ymp846rps35qt","content":"<p>After create docker image, I want to push image to docker hub to using next time easy. I should do as follow:</p>\n<ul>\n<li><p>Need to make sure I login docker hub</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login --username&#x3D;&lt;YOUR_USERNAME&gt; --email&#x3D;&lt;YOUR_EMAIL&gt;</span><br></pre></td></tr></table></figure>\n<p>  It will save login credentials in $HOME/.docker/config.json</p>\n</li>\n<li><p>Create tag for image</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag &lt;IMAGE ID&gt; &lt;USERNAME&gt;&#x2F;&lt;IMAGE NAME&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push image</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push &lt;USERNAME&gt;&#x2F;&lt;IMAGE NAME&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>And then, you can pull you image everywhere(with VPN in some place).</p>\n","site":{"data":{}},"excerpt":"","more":"<p>After create docker image, I want to push image to docker hub to using next time easy. I should do as follow:</p>\n<ul>\n<li><p>Need to make sure I login docker hub</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login --username&#x3D;&lt;YOUR_USERNAME&gt; --email&#x3D;&lt;YOUR_EMAIL&gt;</span><br></pre></td></tr></table></figure>\n<p>  It will save login credentials in $HOME/.docker/config.json</p>\n</li>\n<li><p>Create tag for image</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag &lt;IMAGE ID&gt; &lt;USERNAME&gt;&#x2F;&lt;IMAGE NAME&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push image</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push &lt;USERNAME&gt;&#x2F;&lt;IMAGE NAME&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>And then, you can pull you image everywhere(with VPN in some place).</p>\n"},{"layout":"post","title":"Design Pattern with PHP: Generating Objects","date":"2015-03-31T16:00:00.000Z","description":"Design Pattern with PHP For Generating Objects","_content":"\n## 创建型模式\n创建型模式抽象了实例化过程。它们帮助一个系统独立于如何创建、组合和表示它的那 些对象。一个类创建型模式使用继承改变被实例化的类,而一个对象创建型模式将实例化委 托给另一个对象。\n\n* 单例(Singleton)模式：生成一个且只生成一个对象实例的特殊类\n* 工厂方法模式(Factory Method)：构建创建者类的继承层次\n* 抽象工厂模式(Abstract Factory)：功能相关产品的创建\n* 原型模式(Prototype)：使用克隆生成对象\n\n## 单件模式\n1. 意图：保证一个类仅有一个实例,并提供一个访问它的全局访问点。\n2. 动机：我们怎么样才能保证一个类只有一个实例并且这个实例易于被访问呢?一个全局变量使 得一个对象可以被访问,但它不能防止你实例化多个对象。\n一个更好的办法是,让类自身负责保存它的唯一实例。这个类可以保证没有其他实例可 以被创建(通过截取创建新对象的请求),并且它可以提供一个访问该实例的方法。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nclass Preferences {\n    private $props = array();\n    private static $instance;\n\n    private function __construct() { }\n\n    public static function getInstance() {\n        if ( empty( self::$instance ) ) {\n            self::$instance = new Preferences();\n        }\n        return self::$instance;\n    }\n\n    public function setProperty( $key, $val ) {\n        $this->props[$key] = $val;\n    }\n\n    public function getProperty( $key ) {\n        return $this->props[$key];\n    }\n}\n\n$pref = Preferences::getInstance();\n$pref->setProperty( 'name', 'matt' );\n\nunset( $pref ); // remove the reference\n\n$pref2 = Preferences::getInstance();\nprint $pref2->getProperty( 'name' ) .\"\\n\"; // demonstrate value is not lost\n```\n\n## 工厂方法模式\n1. 意图：定义一个用于创建对象的接口,让子类决定实例化哪一个类。 Factory Method使一个类的实例化延迟到其子类。\n2. 动机：框架使用抽象类定义和维护对象之间的关系。这些对象的创建通常也由框架负责。例如系统编码转换的工具，提供Xml输出格式。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nabstract class ApptEncoder {\n    abstract function encode();\n}\n\nclass XmlApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encode in Xml format\\n\";\n    }\n}\n\nabstract class CommsManager {\n    abstract function getHeaderText();\n    abstract function getApptEncoder();\n    abstract function getFooterText();\n}\n\nclass XmlCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Xml header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new XmlApptEncoder();\n    }\n\n    function getFooterText() {\n        return \"Xml footer\\n\";\n    }\n}\n\n$obj = new XmlCommsManager();\nprint $obj->getHeaderText();\nprint $obj->getApptEncoder()->encode();\nprint $obj->getFooterText();\n```\n\n## 抽象工厂模式\n1. 意图：提供一个创建一系列相关或相互依赖对象的接口,而无需指定它们具体的类。\n2. 动机：系统要提示多种转码方式，如Xml和Json\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nabstract class ApptEncoder {\n    abstract function encode();\n}\n\nclass XmlApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encoded in XmlApptEnder format\\n\";\n    }\n}\n\nclass JsonApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encoded in JsonApptEnder format\\n\";\n    }\n}\n\n\nabstract class CommsManager {\n    abstract function getHeaderText();\n    abstract function getApptEncoder();\n    abstract function getTtdEncoder();\n    abstract function getContactEncoder();\n    abstract function getFooterText();\n}\n\nclass XmlCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Xml header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new XmlApptEncoder();\n    }\n\n    function getTtdEncoder() {\n        return new XmlTtdEncoder();\n    }\n\n    function getContactEncoder() {\n        return new XmlContactEncoder();\n    }\n\n    function getFooterText() {\n        return \"Xml footer\\n\";\n    }\n}\n\nclass JsonCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Json header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new JsonApptEncoder();\n    }\n\n    function getTtdEncoder() {\n        return new JsonTtdEncoder();\n    }\n\n    function getContactEncoder() {\n        return new JsonContactEncoder();\n    }\n\n    function getFooterText() {\n        return \"Json footer\\n\";\n    }\n}\n\n$obj = new XmlCommsManager();\nprint $obj->getHeaderText();\nprint $obj->getApptEncoder()->encode();\nprint $obj->getFooterText();\n```\n\n## 原型模式\n1. 意图：用原型实例指定创建对象的种类,并且通过拷贝这些原型创建新的对象。\n2. 动机：在一个游戏中需要实现两个星球（地球&潘多拉）。两个星球都有海洋、土地、森林。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\n\nclass Sea {}\nclass EarthSea extends Sea {}\nclass MarsSea extends Sea {}\n\nclass Plains {}\nclass EarthPlains extends Plains {}\nclass MarsPlains extends Plains {}\n\nclass Forest {}\nclass EarthForest extends Forest {}\nclass MarsForest extends Forest {}\n\nclass TerrainFactory {\n    private $sea;\n    private $forest;\n    private $plains;\n\n    function __construct( Sea $sea, Plains $plains, Forest $forest ) {\n        $this->sea = $sea;\n        $this->plains = $plains;\n        $this->forest = $forest;\n    }\n\n    function getSea( ) {\n        return clone $this->sea;\n    }\n\n    function getPlains( ) {\n        return clone $this->plains;\n    }\n\n    function getForest( ) {\n        return clone $this->forest;\n    }\n}\n\n$factory = new TerrainFactory( new EarthSea(),\n    new EarthPlains(),\n    new EarthForest() );\nprint_r( $factory->getSea() );\nprint_r( $factory->getPlains() );\nprint_r( $factory->getForest() );\n```","source":"_posts/design-pattern-with-php-generating-objects.md","raw":"---\nlayout: post\ntitle: \"Design Pattern with PHP: Generating Objects\"\ndate:   2015-04-01\ndescription: Design Pattern with PHP For Generating Objects\ncategories: Design Pattern\ntags: Design Pattern\n---\n\n## 创建型模式\n创建型模式抽象了实例化过程。它们帮助一个系统独立于如何创建、组合和表示它的那 些对象。一个类创建型模式使用继承改变被实例化的类,而一个对象创建型模式将实例化委 托给另一个对象。\n\n* 单例(Singleton)模式：生成一个且只生成一个对象实例的特殊类\n* 工厂方法模式(Factory Method)：构建创建者类的继承层次\n* 抽象工厂模式(Abstract Factory)：功能相关产品的创建\n* 原型模式(Prototype)：使用克隆生成对象\n\n## 单件模式\n1. 意图：保证一个类仅有一个实例,并提供一个访问它的全局访问点。\n2. 动机：我们怎么样才能保证一个类只有一个实例并且这个实例易于被访问呢?一个全局变量使 得一个对象可以被访问,但它不能防止你实例化多个对象。\n一个更好的办法是,让类自身负责保存它的唯一实例。这个类可以保证没有其他实例可 以被创建(通过截取创建新对象的请求),并且它可以提供一个访问该实例的方法。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nclass Preferences {\n    private $props = array();\n    private static $instance;\n\n    private function __construct() { }\n\n    public static function getInstance() {\n        if ( empty( self::$instance ) ) {\n            self::$instance = new Preferences();\n        }\n        return self::$instance;\n    }\n\n    public function setProperty( $key, $val ) {\n        $this->props[$key] = $val;\n    }\n\n    public function getProperty( $key ) {\n        return $this->props[$key];\n    }\n}\n\n$pref = Preferences::getInstance();\n$pref->setProperty( 'name', 'matt' );\n\nunset( $pref ); // remove the reference\n\n$pref2 = Preferences::getInstance();\nprint $pref2->getProperty( 'name' ) .\"\\n\"; // demonstrate value is not lost\n```\n\n## 工厂方法模式\n1. 意图：定义一个用于创建对象的接口,让子类决定实例化哪一个类。 Factory Method使一个类的实例化延迟到其子类。\n2. 动机：框架使用抽象类定义和维护对象之间的关系。这些对象的创建通常也由框架负责。例如系统编码转换的工具，提供Xml输出格式。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nabstract class ApptEncoder {\n    abstract function encode();\n}\n\nclass XmlApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encode in Xml format\\n\";\n    }\n}\n\nabstract class CommsManager {\n    abstract function getHeaderText();\n    abstract function getApptEncoder();\n    abstract function getFooterText();\n}\n\nclass XmlCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Xml header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new XmlApptEncoder();\n    }\n\n    function getFooterText() {\n        return \"Xml footer\\n\";\n    }\n}\n\n$obj = new XmlCommsManager();\nprint $obj->getHeaderText();\nprint $obj->getApptEncoder()->encode();\nprint $obj->getFooterText();\n```\n\n## 抽象工厂模式\n1. 意图：提供一个创建一系列相关或相互依赖对象的接口,而无需指定它们具体的类。\n2. 动机：系统要提示多种转码方式，如Xml和Json\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\nabstract class ApptEncoder {\n    abstract function encode();\n}\n\nclass XmlApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encoded in XmlApptEnder format\\n\";\n    }\n}\n\nclass JsonApptEncoder extends ApptEncoder {\n    function encode() {\n        return \"Appointment data encoded in JsonApptEnder format\\n\";\n    }\n}\n\n\nabstract class CommsManager {\n    abstract function getHeaderText();\n    abstract function getApptEncoder();\n    abstract function getTtdEncoder();\n    abstract function getContactEncoder();\n    abstract function getFooterText();\n}\n\nclass XmlCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Xml header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new XmlApptEncoder();\n    }\n\n    function getTtdEncoder() {\n        return new XmlTtdEncoder();\n    }\n\n    function getContactEncoder() {\n        return new XmlContactEncoder();\n    }\n\n    function getFooterText() {\n        return \"Xml footer\\n\";\n    }\n}\n\nclass JsonCommsManager extends CommsManager {\n    function getHeaderText() {\n        return \"Json header\\n\";\n    }\n\n    function getApptEncoder() {\n        return new JsonApptEncoder();\n    }\n\n    function getTtdEncoder() {\n        return new JsonTtdEncoder();\n    }\n\n    function getContactEncoder() {\n        return new JsonContactEncoder();\n    }\n\n    function getFooterText() {\n        return \"Json footer\\n\";\n    }\n}\n\n$obj = new XmlCommsManager();\nprint $obj->getHeaderText();\nprint $obj->getApptEncoder()->encode();\nprint $obj->getFooterText();\n```\n\n## 原型模式\n1. 意图：用原型实例指定创建对象的种类,并且通过拷贝这些原型创建新的对象。\n2. 动机：在一个游戏中需要实现两个星球（地球&潘多拉）。两个星球都有海洋、土地、森林。\n3. 实现：\n\n```\n#!/bin/env/php\n<?php\n\nclass Sea {}\nclass EarthSea extends Sea {}\nclass MarsSea extends Sea {}\n\nclass Plains {}\nclass EarthPlains extends Plains {}\nclass MarsPlains extends Plains {}\n\nclass Forest {}\nclass EarthForest extends Forest {}\nclass MarsForest extends Forest {}\n\nclass TerrainFactory {\n    private $sea;\n    private $forest;\n    private $plains;\n\n    function __construct( Sea $sea, Plains $plains, Forest $forest ) {\n        $this->sea = $sea;\n        $this->plains = $plains;\n        $this->forest = $forest;\n    }\n\n    function getSea( ) {\n        return clone $this->sea;\n    }\n\n    function getPlains( ) {\n        return clone $this->plains;\n    }\n\n    function getForest( ) {\n        return clone $this->forest;\n    }\n}\n\n$factory = new TerrainFactory( new EarthSea(),\n    new EarthPlains(),\n    new EarthForest() );\nprint_r( $factory->getSea() );\nprint_r( $factory->getPlains() );\nprint_r( $factory->getForest() );\n```","slug":"design-pattern-with-php-generating-objects","published":1,"updated":"2020-06-14T15:57:16.337Z","comments":1,"photos":[],"link":"","_id":"ckbfpl1280021mp8498dw6i8c","content":"<h2 id=\"创建型模式\"><a href=\"#创建型模式\" class=\"headerlink\" title=\"创建型模式\"></a>创建型模式</h2><p>创建型模式抽象了实例化过程。它们帮助一个系统独立于如何创建、组合和表示它的那 些对象。一个类创建型模式使用继承改变被实例化的类,而一个对象创建型模式将实例化委 托给另一个对象。</p>\n<ul>\n<li>单例(Singleton)模式：生成一个且只生成一个对象实例的特殊类</li>\n<li>工厂方法模式(Factory Method)：构建创建者类的继承层次</li>\n<li>抽象工厂模式(Abstract Factory)：功能相关产品的创建</li>\n<li>原型模式(Prototype)：使用克隆生成对象</li>\n</ul>\n<h2 id=\"单件模式\"><a href=\"#单件模式\" class=\"headerlink\" title=\"单件模式\"></a>单件模式</h2><ol>\n<li>意图：保证一个类仅有一个实例,并提供一个访问它的全局访问点。</li>\n<li>动机：我们怎么样才能保证一个类只有一个实例并且这个实例易于被访问呢?一个全局变量使 得一个对象可以被访问,但它不能防止你实例化多个对象。<br>一个更好的办法是,让类自身负责保存它的唯一实例。这个类可以保证没有其他实例可 以被创建(通过截取创建新对象的请求),并且它可以提供一个访问该实例的方法。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Preferences &#123;</span><br><span class=\"line\">    private $props &#x3D; array();</span><br><span class=\"line\">    private static $instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function __construct() &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function getInstance() &#123;</span><br><span class=\"line\">        if ( empty( self::$instance ) ) &#123;</span><br><span class=\"line\">            self::$instance &#x3D; new Preferences();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return self::$instance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function setProperty( $key, $val ) &#123;</span><br><span class=\"line\">        $this-&gt;props[$key] &#x3D; $val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getProperty( $key ) &#123;</span><br><span class=\"line\">        return $this-&gt;props[$key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$pref &#x3D; Preferences::getInstance();</span><br><span class=\"line\">$pref-&gt;setProperty( &#39;name&#39;, &#39;matt&#39; );</span><br><span class=\"line\"></span><br><span class=\"line\">unset( $pref ); &#x2F;&#x2F; remove the reference</span><br><span class=\"line\"></span><br><span class=\"line\">$pref2 &#x3D; Preferences::getInstance();</span><br><span class=\"line\">print $pref2-&gt;getProperty( &#39;name&#39; ) .&quot;\\n&quot;; &#x2F;&#x2F; demonstrate value is not lost</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ol>\n<li>意图：定义一个用于创建对象的接口,让子类决定实例化哪一个类。 Factory Method使一个类的实例化延迟到其子类。</li>\n<li>动机：框架使用抽象类定义和维护对象之间的关系。这些对象的创建通常也由框架负责。例如系统编码转换的工具，提供Xml输出格式。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">abstract class ApptEncoder &#123;</span><br><span class=\"line\">    abstract function encode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encode in Xml format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CommsManager &#123;</span><br><span class=\"line\">    abstract function getHeaderText();</span><br><span class=\"line\">    abstract function getApptEncoder();</span><br><span class=\"line\">    abstract function getFooterText();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Xml header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new XmlApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Xml footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj &#x3D; new XmlCommsManager();</span><br><span class=\"line\">print $obj-&gt;getHeaderText();</span><br><span class=\"line\">print $obj-&gt;getApptEncoder()-&gt;encode();</span><br><span class=\"line\">print $obj-&gt;getFooterText();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"抽象工厂模式\"><a href=\"#抽象工厂模式\" class=\"headerlink\" title=\"抽象工厂模式\"></a>抽象工厂模式</h2><ol>\n<li>意图：提供一个创建一系列相关或相互依赖对象的接口,而无需指定它们具体的类。</li>\n<li>动机：系统要提示多种转码方式，如Xml和Json</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">abstract class ApptEncoder &#123;</span><br><span class=\"line\">    abstract function encode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encoded in XmlApptEnder format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class JsonApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encoded in JsonApptEnder format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CommsManager &#123;</span><br><span class=\"line\">    abstract function getHeaderText();</span><br><span class=\"line\">    abstract function getApptEncoder();</span><br><span class=\"line\">    abstract function getTtdEncoder();</span><br><span class=\"line\">    abstract function getContactEncoder();</span><br><span class=\"line\">    abstract function getFooterText();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Xml header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new XmlApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTtdEncoder() &#123;</span><br><span class=\"line\">        return new XmlTtdEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContactEncoder() &#123;</span><br><span class=\"line\">        return new XmlContactEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Xml footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class JsonCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Json header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new JsonApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTtdEncoder() &#123;</span><br><span class=\"line\">        return new JsonTtdEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContactEncoder() &#123;</span><br><span class=\"line\">        return new JsonContactEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Json footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj &#x3D; new XmlCommsManager();</span><br><span class=\"line\">print $obj-&gt;getHeaderText();</span><br><span class=\"line\">print $obj-&gt;getApptEncoder()-&gt;encode();</span><br><span class=\"line\">print $obj-&gt;getFooterText();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><ol>\n<li>意图：用原型实例指定创建对象的种类,并且通过拷贝这些原型创建新的对象。</li>\n<li>动机：在一个游戏中需要实现两个星球（地球&amp;潘多拉）。两个星球都有海洋、土地、森林。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class Sea &#123;&#125;</span><br><span class=\"line\">class EarthSea extends Sea &#123;&#125;</span><br><span class=\"line\">class MarsSea extends Sea &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Plains &#123;&#125;</span><br><span class=\"line\">class EarthPlains extends Plains &#123;&#125;</span><br><span class=\"line\">class MarsPlains extends Plains &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Forest &#123;&#125;</span><br><span class=\"line\">class EarthForest extends Forest &#123;&#125;</span><br><span class=\"line\">class MarsForest extends Forest &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TerrainFactory &#123;</span><br><span class=\"line\">    private $sea;</span><br><span class=\"line\">    private $forest;</span><br><span class=\"line\">    private $plains;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct( Sea $sea, Plains $plains, Forest $forest ) &#123;</span><br><span class=\"line\">        $this-&gt;sea &#x3D; $sea;</span><br><span class=\"line\">        $this-&gt;plains &#x3D; $plains;</span><br><span class=\"line\">        $this-&gt;forest &#x3D; $forest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getSea( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;sea;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getPlains( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;plains;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getForest( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;forest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$factory &#x3D; new TerrainFactory( new EarthSea(),</span><br><span class=\"line\">    new EarthPlains(),</span><br><span class=\"line\">    new EarthForest() );</span><br><span class=\"line\">print_r( $factory-&gt;getSea() );</span><br><span class=\"line\">print_r( $factory-&gt;getPlains() );</span><br><span class=\"line\">print_r( $factory-&gt;getForest() );</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建型模式\"><a href=\"#创建型模式\" class=\"headerlink\" title=\"创建型模式\"></a>创建型模式</h2><p>创建型模式抽象了实例化过程。它们帮助一个系统独立于如何创建、组合和表示它的那 些对象。一个类创建型模式使用继承改变被实例化的类,而一个对象创建型模式将实例化委 托给另一个对象。</p>\n<ul>\n<li>单例(Singleton)模式：生成一个且只生成一个对象实例的特殊类</li>\n<li>工厂方法模式(Factory Method)：构建创建者类的继承层次</li>\n<li>抽象工厂模式(Abstract Factory)：功能相关产品的创建</li>\n<li>原型模式(Prototype)：使用克隆生成对象</li>\n</ul>\n<h2 id=\"单件模式\"><a href=\"#单件模式\" class=\"headerlink\" title=\"单件模式\"></a>单件模式</h2><ol>\n<li>意图：保证一个类仅有一个实例,并提供一个访问它的全局访问点。</li>\n<li>动机：我们怎么样才能保证一个类只有一个实例并且这个实例易于被访问呢?一个全局变量使 得一个对象可以被访问,但它不能防止你实例化多个对象。<br>一个更好的办法是,让类自身负责保存它的唯一实例。这个类可以保证没有其他实例可 以被创建(通过截取创建新对象的请求),并且它可以提供一个访问该实例的方法。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Preferences &#123;</span><br><span class=\"line\">    private $props &#x3D; array();</span><br><span class=\"line\">    private static $instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    private function __construct() &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static function getInstance() &#123;</span><br><span class=\"line\">        if ( empty( self::$instance ) ) &#123;</span><br><span class=\"line\">            self::$instance &#x3D; new Preferences();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return self::$instance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function setProperty( $key, $val ) &#123;</span><br><span class=\"line\">        $this-&gt;props[$key] &#x3D; $val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getProperty( $key ) &#123;</span><br><span class=\"line\">        return $this-&gt;props[$key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$pref &#x3D; Preferences::getInstance();</span><br><span class=\"line\">$pref-&gt;setProperty( &#39;name&#39;, &#39;matt&#39; );</span><br><span class=\"line\"></span><br><span class=\"line\">unset( $pref ); &#x2F;&#x2F; remove the reference</span><br><span class=\"line\"></span><br><span class=\"line\">$pref2 &#x3D; Preferences::getInstance();</span><br><span class=\"line\">print $pref2-&gt;getProperty( &#39;name&#39; ) .&quot;\\n&quot;; &#x2F;&#x2F; demonstrate value is not lost</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h2><ol>\n<li>意图：定义一个用于创建对象的接口,让子类决定实例化哪一个类。 Factory Method使一个类的实例化延迟到其子类。</li>\n<li>动机：框架使用抽象类定义和维护对象之间的关系。这些对象的创建通常也由框架负责。例如系统编码转换的工具，提供Xml输出格式。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">abstract class ApptEncoder &#123;</span><br><span class=\"line\">    abstract function encode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encode in Xml format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CommsManager &#123;</span><br><span class=\"line\">    abstract function getHeaderText();</span><br><span class=\"line\">    abstract function getApptEncoder();</span><br><span class=\"line\">    abstract function getFooterText();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Xml header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new XmlApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Xml footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj &#x3D; new XmlCommsManager();</span><br><span class=\"line\">print $obj-&gt;getHeaderText();</span><br><span class=\"line\">print $obj-&gt;getApptEncoder()-&gt;encode();</span><br><span class=\"line\">print $obj-&gt;getFooterText();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"抽象工厂模式\"><a href=\"#抽象工厂模式\" class=\"headerlink\" title=\"抽象工厂模式\"></a>抽象工厂模式</h2><ol>\n<li>意图：提供一个创建一系列相关或相互依赖对象的接口,而无需指定它们具体的类。</li>\n<li>动机：系统要提示多种转码方式，如Xml和Json</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">abstract class ApptEncoder &#123;</span><br><span class=\"line\">    abstract function encode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encoded in XmlApptEnder format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class JsonApptEncoder extends ApptEncoder &#123;</span><br><span class=\"line\">    function encode() &#123;</span><br><span class=\"line\">        return &quot;Appointment data encoded in JsonApptEnder format\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">abstract class CommsManager &#123;</span><br><span class=\"line\">    abstract function getHeaderText();</span><br><span class=\"line\">    abstract function getApptEncoder();</span><br><span class=\"line\">    abstract function getTtdEncoder();</span><br><span class=\"line\">    abstract function getContactEncoder();</span><br><span class=\"line\">    abstract function getFooterText();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class XmlCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Xml header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new XmlApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTtdEncoder() &#123;</span><br><span class=\"line\">        return new XmlTtdEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContactEncoder() &#123;</span><br><span class=\"line\">        return new XmlContactEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Xml footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class JsonCommsManager extends CommsManager &#123;</span><br><span class=\"line\">    function getHeaderText() &#123;</span><br><span class=\"line\">        return &quot;Json header\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getApptEncoder() &#123;</span><br><span class=\"line\">        return new JsonApptEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getTtdEncoder() &#123;</span><br><span class=\"line\">        return new JsonTtdEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getContactEncoder() &#123;</span><br><span class=\"line\">        return new JsonContactEncoder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getFooterText() &#123;</span><br><span class=\"line\">        return &quot;Json footer\\n&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$obj &#x3D; new XmlCommsManager();</span><br><span class=\"line\">print $obj-&gt;getHeaderText();</span><br><span class=\"line\">print $obj-&gt;getApptEncoder()-&gt;encode();</span><br><span class=\"line\">print $obj-&gt;getFooterText();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><ol>\n<li>意图：用原型实例指定创建对象的种类,并且通过拷贝这些原型创建新的对象。</li>\n<li>动机：在一个游戏中需要实现两个星球（地球&amp;潘多拉）。两个星球都有海洋、土地、森林。</li>\n<li>实现：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;env&#x2F;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">class Sea &#123;&#125;</span><br><span class=\"line\">class EarthSea extends Sea &#123;&#125;</span><br><span class=\"line\">class MarsSea extends Sea &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Plains &#123;&#125;</span><br><span class=\"line\">class EarthPlains extends Plains &#123;&#125;</span><br><span class=\"line\">class MarsPlains extends Plains &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Forest &#123;&#125;</span><br><span class=\"line\">class EarthForest extends Forest &#123;&#125;</span><br><span class=\"line\">class MarsForest extends Forest &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TerrainFactory &#123;</span><br><span class=\"line\">    private $sea;</span><br><span class=\"line\">    private $forest;</span><br><span class=\"line\">    private $plains;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct( Sea $sea, Plains $plains, Forest $forest ) &#123;</span><br><span class=\"line\">        $this-&gt;sea &#x3D; $sea;</span><br><span class=\"line\">        $this-&gt;plains &#x3D; $plains;</span><br><span class=\"line\">        $this-&gt;forest &#x3D; $forest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getSea( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;sea;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getPlains( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;plains;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function getForest( ) &#123;</span><br><span class=\"line\">        return clone $this-&gt;forest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$factory &#x3D; new TerrainFactory( new EarthSea(),</span><br><span class=\"line\">    new EarthPlains(),</span><br><span class=\"line\">    new EarthForest() );</span><br><span class=\"line\">print_r( $factory-&gt;getSea() );</span><br><span class=\"line\">print_r( $factory-&gt;getPlains() );</span><br><span class=\"line\">print_r( $factory-&gt;getForest() );</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"file mode change","date":"2016-06-18T16:00:00.000Z","description":"File mode change","_content":"\n在使用git status查看修改文件时，有时会发现大量的文件被修改，这有可能是操作系统不一样等问题造成的。比如我现在工作的单位，有人用windows, 有人用mac。使用git diff查看，发现文件只有file mode被修改。\n\n针对这个问题，我们可以编辑.git/config中filemode为false\n","source":"_posts/file-mode-change.md","raw":"---\nlayout: post\ntitle: \"file mode change\"\ndate:   2016-06-19\ndescription: File mode change\ncategories: Git\ntags: git\n---\n\n在使用git status查看修改文件时，有时会发现大量的文件被修改，这有可能是操作系统不一样等问题造成的。比如我现在工作的单位，有人用windows, 有人用mac。使用git diff查看，发现文件只有file mode被修改。\n\n针对这个问题，我们可以编辑.git/config中filemode为false\n","slug":"file-mode-change","published":1,"updated":"2020-06-14T15:57:16.314Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12a0025mp849jpc9rhf","content":"<p>在使用git status查看修改文件时，有时会发现大量的文件被修改，这有可能是操作系统不一样等问题造成的。比如我现在工作的单位，有人用windows, 有人用mac。使用git diff查看，发现文件只有file mode被修改。</p>\n<p>针对这个问题，我们可以编辑.git/config中filemode为false</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在使用git status查看修改文件时，有时会发现大量的文件被修改，这有可能是操作系统不一样等问题造成的。比如我现在工作的单位，有人用windows, 有人用mac。使用git diff查看，发现文件只有file mode被修改。</p>\n<p>针对这个问题，我们可以编辑.git/config中filemode为false</p>\n"},{"layout":"post","title":"How to create a SSL Certificate with nginx","date":"2016-06-18T16:00:00.000Z","description":"How to create a SSL Certificate with nginx","_content":"\n* Create a folder to hold all of SSL information\n\n```\nsudo mkdir /etc/nginx/ssl\n```\n* Create the SSL key and certificate file\n\n```\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\n```\n* Config nginx as follow:\n\n```\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server ipv6only=on;\n\n        listen 443 ssl;\n\n        root /usr/share/nginx/html;\n        index index.html index.htm;\n\n        server_name your_domain.com;\n        ssl_certificate /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\n* Restart nginx service\n\n[How To Create an SSL Certificate on Nginx for Ubuntu 14.04](https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04)","source":"_posts/how-to-create-a-ssl-certificate-with-nginx.md","raw":"---\nlayout: post\ntitle: \"How to create a SSL Certificate with nginx\"\ndate:   2016-06-19\ndescription: How to create a SSL Certificate with nginx\ncategories: Nginx\ntags:\n- nginx\n- ssl\n---\n\n* Create a folder to hold all of SSL information\n\n```\nsudo mkdir /etc/nginx/ssl\n```\n* Create the SSL key and certificate file\n\n```\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\n```\n* Config nginx as follow:\n\n```\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server ipv6only=on;\n\n        listen 443 ssl;\n\n        root /usr/share/nginx/html;\n        index index.html index.htm;\n\n        server_name your_domain.com;\n        ssl_certificate /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n```\n* Restart nginx service\n\n[How To Create an SSL Certificate on Nginx for Ubuntu 14.04](https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04)","slug":"how-to-create-a-ssl-certificate-with-nginx","published":1,"updated":"2020-06-14T15:57:16.336Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12b0027mp8486dl3czz","content":"<ul>\n<li>Create a folder to hold all of SSL information</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir &#x2F;etc&#x2F;nginx&#x2F;ssl</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Create the SSL key and certificate file</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.key -out &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.crt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Config nginx as follow:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        listen [::]:80 default_server ipv6only&#x3D;on;</span><br><span class=\"line\"></span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">        root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">        index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name your_domain.com;</span><br><span class=\"line\">        ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.crt;</span><br><span class=\"line\">        ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location &#x2F; &#123;</span><br><span class=\"line\">                try_files $uri $uri&#x2F; &#x3D;404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Restart nginx service</li>\n</ul>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04\" target=\"_blank\" rel=\"noopener\">How To Create an SSL Certificate on Nginx for Ubuntu 14.04</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Create a folder to hold all of SSL information</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir &#x2F;etc&#x2F;nginx&#x2F;ssl</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Create the SSL key and certificate file</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.key -out &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.crt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Config nginx as follow:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        listen [::]:80 default_server ipv6only&#x3D;on;</span><br><span class=\"line\"></span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\"></span><br><span class=\"line\">        root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">        index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name your_domain.com;</span><br><span class=\"line\">        ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.crt;</span><br><span class=\"line\">        ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;nginx.key;</span><br><span class=\"line\"></span><br><span class=\"line\">        location &#x2F; &#123;</span><br><span class=\"line\">                try_files $uri $uri&#x2F; &#x3D;404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Restart nginx service</li>\n</ul>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04\" target=\"_blank\" rel=\"noopener\">How To Create an SSL Certificate on Nginx for Ubuntu 14.04</a></p>\n"},{"layout":"post","title":"Install Maven On Mac","date":"2016-07-23T16:00:00.000Z","description":"Install Maven On Mac","_content":"\n## Installation\n* Download [maven](http://maven.apache.org)\n* Ensure JAVA_HOME environment variable is set and points to your JDK installation\n* Extract distribution archive in any directory, like /opt\n* Check environment variable value $JAVA_HOME\n* Adding to PATH\n```\nexport PATH=/opt/apache-maven/bin:$PATH\n```\n* Confirm with \n```\nmvn -v \n```\nto make sure maven work well.\n\n## Build\n```\nmvn package\n``` ","source":"_posts/install-maven.md","raw":"---\nlayout: post\ntitle: \"Install Maven On Mac\"\ndate:   2016-07-24\ndescription: Install Maven On Mac\ncategories: Java\ntags:\n- maven\n- java\n---\n\n## Installation\n* Download [maven](http://maven.apache.org)\n* Ensure JAVA_HOME environment variable is set and points to your JDK installation\n* Extract distribution archive in any directory, like /opt\n* Check environment variable value $JAVA_HOME\n* Adding to PATH\n```\nexport PATH=/opt/apache-maven/bin:$PATH\n```\n* Confirm with \n```\nmvn -v \n```\nto make sure maven work well.\n\n## Build\n```\nmvn package\n``` ","slug":"install-maven","published":1,"updated":"2020-06-14T15:57:16.334Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12c0029mp84dy6xc1xz","content":"<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><ul>\n<li>Download <a href=\"http://maven.apache.org\" target=\"_blank\" rel=\"noopener\">maven</a></li>\n<li>Ensure JAVA_HOME environment variable is set and points to your JDK installation</li>\n<li>Extract distribution archive in any directory, like /opt</li>\n<li>Check environment variable value $JAVA_HOME</li>\n<li>Adding to PATH<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH&#x3D;&#x2F;opt&#x2F;apache-maven&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure></li>\n<li>Confirm with <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn -v</span><br></pre></td></tr></table></figure>\nto make sure maven work well.</li>\n</ul>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><pre><code>mvn package</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><ul>\n<li>Download <a href=\"http://maven.apache.org\" target=\"_blank\" rel=\"noopener\">maven</a></li>\n<li>Ensure JAVA_HOME environment variable is set and points to your JDK installation</li>\n<li>Extract distribution archive in any directory, like /opt</li>\n<li>Check environment variable value $JAVA_HOME</li>\n<li>Adding to PATH<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH&#x3D;&#x2F;opt&#x2F;apache-maven&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure></li>\n<li>Confirm with <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn -v</span><br></pre></td></tr></table></figure>\nto make sure maven work well.</li>\n</ul>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><pre><code>mvn package</code></pre>"},{"layout":"post","title":"Install phpredis","date":"2015-08-19T16:00:00.000Z","description":"Install phpredis","_content":"\n### 编译安装\n\n```\ngit clone https://github.com/phpredis/phpredis.git\ncd phpredis\nphpize\n./configure\nmake && make install\n```\n添加 'extension=redis.so' 到 php.ini\n\n```\nservice php5-fpm restart\n```\n\n在phpinfo中显示的信息应该有redis扩展信息。\n### 包安装\n\n```\napt-get install php5-redis\n```\n\n### 安装后遇到的问题：\n安装后使用phpinfo打印不出redis信息，fpm中报错：找不到Redis Class，但是cli工作正常，搞了很久，重启php5-fpm，nginx，重新安装，编译安装。。。后来重启了一下虚拟机，我擦，可以了，Linux也可以这么做。我突然明白：\n\n#不要放弃任何可能的办法","source":"_posts/install-phpredis.md","raw":"---\nlayout: post\ntitle: \"Install phpredis\"\ndate:   2015-08-20\ndescription: Install phpredis\ncategories: PHP\ntags:\n- php\n- redis\n---\n\n### 编译安装\n\n```\ngit clone https://github.com/phpredis/phpredis.git\ncd phpredis\nphpize\n./configure\nmake && make install\n```\n添加 'extension=redis.so' 到 php.ini\n\n```\nservice php5-fpm restart\n```\n\n在phpinfo中显示的信息应该有redis扩展信息。\n### 包安装\n\n```\napt-get install php5-redis\n```\n\n### 安装后遇到的问题：\n安装后使用phpinfo打印不出redis信息，fpm中报错：找不到Redis Class，但是cli工作正常，搞了很久，重启php5-fpm，nginx，重新安装，编译安装。。。后来重启了一下虚拟机，我擦，可以了，Linux也可以这么做。我突然明白：\n\n#不要放弃任何可能的办法","slug":"install-phpredis","published":1,"updated":"2020-06-14T15:57:16.329Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12e002dmp84360l1bbv","content":"<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;phpredis&#x2F;phpredis.git</span><br><span class=\"line\">cd phpredis</span><br><span class=\"line\">phpize</span><br><span class=\"line\">.&#x2F;configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>添加 ‘extension=redis.so’ 到 php.ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php5-fpm restart</span><br></pre></td></tr></table></figure>\n\n<p>在phpinfo中显示的信息应该有redis扩展信息。</p>\n<h3 id=\"包安装\"><a href=\"#包安装\" class=\"headerlink\" title=\"包安装\"></a>包安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php5-redis</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装后遇到的问题：\"><a href=\"#安装后遇到的问题：\" class=\"headerlink\" title=\"安装后遇到的问题：\"></a>安装后遇到的问题：</h3><p>安装后使用phpinfo打印不出redis信息，fpm中报错：找不到Redis Class，但是cli工作正常，搞了很久，重启php5-fpm，nginx，重新安装，编译安装。。。后来重启了一下虚拟机，我擦，可以了，Linux也可以这么做。我突然明白：</p>\n<p>#不要放弃任何可能的办法</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;phpredis&#x2F;phpredis.git</span><br><span class=\"line\">cd phpredis</span><br><span class=\"line\">phpize</span><br><span class=\"line\">.&#x2F;configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>添加 ‘extension=redis.so’ 到 php.ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php5-fpm restart</span><br></pre></td></tr></table></figure>\n\n<p>在phpinfo中显示的信息应该有redis扩展信息。</p>\n<h3 id=\"包安装\"><a href=\"#包安装\" class=\"headerlink\" title=\"包安装\"></a>包安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php5-redis</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装后遇到的问题：\"><a href=\"#安装后遇到的问题：\" class=\"headerlink\" title=\"安装后遇到的问题：\"></a>安装后遇到的问题：</h3><p>安装后使用phpinfo打印不出redis信息，fpm中报错：找不到Redis Class，但是cli工作正常，搞了很久，重启php5-fpm，nginx，重新安装，编译安装。。。后来重启了一下虚拟机，我擦，可以了，Linux也可以这么做。我突然明白：</p>\n<p>#不要放弃任何可能的办法</p>\n"},{"layout":"post","title":"Laravel Seeder","date":"2016-06-15T16:00:00.000Z","description":"Laravel Seeder","_content":"\nSeeder can create some fake data in table, **it's useful**.\n\n* Create seeder\n\n```\nphp artisan make:seeder ArticleSeeder\n```\nAfter that a file named *ArticleSeeder.php* would be created under **database/seeds**. Change function run as follow:\n\n```\npublic function run()\n{\n    DB::table('articles')->delete();\n\n    for ($i=0; $i < 10; $i++) {\n        \\App\\Article::create([\n            'title'   => 'Title '.$i,\n            'body'    => 'Body '.$i,\n            'user_id' => 1,\n        ]);\n    }\n}\n```\n\n* Register seeder\n\nThen we need register ArticleSeeder in project. Modify **function run** in file *database/seeds/DatabaseSeeder.php* as follow:\n\n```\npublic function run()\n{\n    $this->call(ArticleSeeder::class);\n}\n```\n* Excute seed and create fake data\n\nExcuste seed with command \n```\nphp artisan db:seed\n```\n. You can get the fake data.\n","source":"_posts/laravel-seeder.md","raw":"---\nlayout: post\ntitle: \"Laravel Seeder\"\ndate:   2016-06-16\ndescription: Laravel Seeder\ncategories: PHP\ntags:\n- php\n- laravel\n---\n\nSeeder can create some fake data in table, **it's useful**.\n\n* Create seeder\n\n```\nphp artisan make:seeder ArticleSeeder\n```\nAfter that a file named *ArticleSeeder.php* would be created under **database/seeds**. Change function run as follow:\n\n```\npublic function run()\n{\n    DB::table('articles')->delete();\n\n    for ($i=0; $i < 10; $i++) {\n        \\App\\Article::create([\n            'title'   => 'Title '.$i,\n            'body'    => 'Body '.$i,\n            'user_id' => 1,\n        ]);\n    }\n}\n```\n\n* Register seeder\n\nThen we need register ArticleSeeder in project. Modify **function run** in file *database/seeds/DatabaseSeeder.php* as follow:\n\n```\npublic function run()\n{\n    $this->call(ArticleSeeder::class);\n}\n```\n* Excute seed and create fake data\n\nExcuste seed with command \n```\nphp artisan db:seed\n```\n. You can get the fake data.\n","slug":"laravel-seeder","published":1,"updated":"2020-06-14T15:57:16.335Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12f002fmp8432pn9ejc","content":"<p>Seeder can create some fake data in table, <strong>it’s useful</strong>.</p>\n<ul>\n<li>Create seeder</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:seeder ArticleSeeder</span><br></pre></td></tr></table></figure>\n<p>After that a file named <em>ArticleSeeder.php</em> would be created under <strong>database/seeds</strong>. Change function run as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function run()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DB::table(&#39;articles&#39;)-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    for ($i&#x3D;0; $i &lt; 10; $i++) &#123;</span><br><span class=\"line\">        \\App\\Article::create([</span><br><span class=\"line\">            &#39;title&#39;   &#x3D;&gt; &#39;Title &#39;.$i,</span><br><span class=\"line\">            &#39;body&#39;    &#x3D;&gt; &#39;Body &#39;.$i,</span><br><span class=\"line\">            &#39;user_id&#39; &#x3D;&gt; 1,</span><br><span class=\"line\">        ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Register seeder</li>\n</ul>\n<p>Then we need register ArticleSeeder in project. Modify <strong>function run</strong> in file <em>database/seeds/DatabaseSeeder.php</em> as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function run()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $this-&gt;call(ArticleSeeder::class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Excute seed and create fake data</li>\n</ul>\n<p>Excuste seed with command </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan db:seed</span><br></pre></td></tr></table></figure>\n<p>. You can get the fake data.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Seeder can create some fake data in table, <strong>it’s useful</strong>.</p>\n<ul>\n<li>Create seeder</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:seeder ArticleSeeder</span><br></pre></td></tr></table></figure>\n<p>After that a file named <em>ArticleSeeder.php</em> would be created under <strong>database/seeds</strong>. Change function run as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function run()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DB::table(&#39;articles&#39;)-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    for ($i&#x3D;0; $i &lt; 10; $i++) &#123;</span><br><span class=\"line\">        \\App\\Article::create([</span><br><span class=\"line\">            &#39;title&#39;   &#x3D;&gt; &#39;Title &#39;.$i,</span><br><span class=\"line\">            &#39;body&#39;    &#x3D;&gt; &#39;Body &#39;.$i,</span><br><span class=\"line\">            &#39;user_id&#39; &#x3D;&gt; 1,</span><br><span class=\"line\">        ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Register seeder</li>\n</ul>\n<p>Then we need register ArticleSeeder in project. Modify <strong>function run</strong> in file <em>database/seeds/DatabaseSeeder.php</em> as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function run()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $this-&gt;call(ArticleSeeder::class);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Excute seed and create fake data</li>\n</ul>\n<p>Excuste seed with command </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan db:seed</span><br></pre></td></tr></table></figure>\n<p>. You can get the fake data.</p>\n"},{"layout":"post","title":"learn laravel 1","date":"2015-09-04T16:00:00.000Z","description":"learn laravel 1","_content":"\n## Install\n* Install composer\n\n\t```\n\tcd /usr/local/bin\n\tcurl -sS https://getcomposer.org/installer | php\n\tchmod a+x composer.phar\n\tmv composer.phar composer\n\t```\n\t[composer全量中国镜像](http://pkg.phpcomposer.com)\n* create project\n\t```\n\tcomposer create-project laravel/laravel learnlaravel5\n\t```\n* set web server(nginx)\n\n\t```\n\tserver {\n\tlisten 8000;\n\n\troot /vagrant/learnlaravel5/public;\n\tindex index.php index.html index.htm;\n\n\tserver_name localhost;\n\n\tcharset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    access_log off;\n    error_log  /var/log/nginx/myapp-error.log error;\n\n    sendfile off;\n\n    client_max_body_size 100m;\n\n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_intercept_errors off;\n        fastcgi_buffer_size 16k;\n        fastcgi_buffers 4 16k;\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n}\n\t```\n\tAccess http://localhost:8000\n* Some folders need write permission: /storage /bootstrap/cache\n##Route\nEdit file 'app/Http/routes.php'\n\n```\nRoute::controllers([\n\t'auth' => 'Auth\\AuthController',\n\t'password' => 'Auth\\PasswordController',\n]);\n```","source":"_posts/learn-laravel-1.md","raw":"---\nlayout: post\ntitle: \"learn laravel 1\"\ndate:   2015-09-05\ndescription: learn laravel 1\ncategories: PHP\ntags:\n- php\n- laravel\n---\n\n## Install\n* Install composer\n\n\t```\n\tcd /usr/local/bin\n\tcurl -sS https://getcomposer.org/installer | php\n\tchmod a+x composer.phar\n\tmv composer.phar composer\n\t```\n\t[composer全量中国镜像](http://pkg.phpcomposer.com)\n* create project\n\t```\n\tcomposer create-project laravel/laravel learnlaravel5\n\t```\n* set web server(nginx)\n\n\t```\n\tserver {\n\tlisten 8000;\n\n\troot /vagrant/learnlaravel5/public;\n\tindex index.php index.html index.htm;\n\n\tserver_name localhost;\n\n\tcharset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    access_log off;\n    error_log  /var/log/nginx/myapp-error.log error;\n\n    sendfile off;\n\n    client_max_body_size 100m;\n\n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_intercept_errors off;\n        fastcgi_buffer_size 16k;\n        fastcgi_buffers 4 16k;\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n}\n\t```\n\tAccess http://localhost:8000\n* Some folders need write permission: /storage /bootstrap/cache\n##Route\nEdit file 'app/Http/routes.php'\n\n```\nRoute::controllers([\n\t'auth' => 'Auth\\AuthController',\n\t'password' => 'Auth\\PasswordController',\n]);\n```","slug":"learn-laravel-1","published":1,"updated":"2020-06-14T15:57:16.318Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12h002kmp849mt311ge","content":"<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><ul>\n<li><p>Install composer</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class=\"line\">curl -sS https:&#x2F;&#x2F;getcomposer.org&#x2F;installer | php</span><br><span class=\"line\">chmod a+x composer.phar</span><br><span class=\"line\">mv composer.phar composer</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"http://pkg.phpcomposer.com\" target=\"_blank\" rel=\"noopener\">composer全量中国镜像</a></p>\n</li>\n<li><p>create project</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer create-project laravel&#x2F;laravel learnlaravel5</span><br></pre></td></tr></table></figure></li>\n<li><p>set web server(nginx)</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tserver &#123;</span><br><span class=\"line\">\tlisten 8000;</span><br><span class=\"line\"></span><br><span class=\"line\">\troot &#x2F;vagrant&#x2F;learnlaravel5&#x2F;public;</span><br><span class=\"line\">\tindex index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">\tserver_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcharset utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x2F; &#123;</span><br><span class=\"line\">        try_files $uri $uri&#x2F; &#x2F;index.php?$query_string;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x3D; &#x2F;favicon.ico &#123; access_log off; log_not_found off; &#125;</span><br><span class=\"line\">    location &#x3D; &#x2F;robots.txt  &#123; access_log off; log_not_found off; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">    error_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;myapp-error.log error;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile off;</span><br><span class=\"line\"></span><br><span class=\"line\">    client_max_body_size 100m;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.php$ &#123;</span><br><span class=\"line\">        fastcgi_split_path_info ^(.+\\.php)(&#x2F;.+)$;</span><br><span class=\"line\">        fastcgi_pass unix:&#x2F;var&#x2F;run&#x2F;php5-fpm.sock;</span><br><span class=\"line\">        fastcgi_index index.php;</span><br><span class=\"line\">        include fastcgi_params;</span><br><span class=\"line\">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class=\"line\">        fastcgi_intercept_errors off;</span><br><span class=\"line\">        fastcgi_buffer_size 16k;</span><br><span class=\"line\">        fastcgi_buffers 4 16k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ &#x2F;\\.ht &#123;</span><br><span class=\"line\">        deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  Access <a href=\"http://localhost:8000\" target=\"_blank\" rel=\"noopener\">http://localhost:8000</a></p>\n</li>\n<li><p>Some folders need write permission: /storage /bootstrap/cache<br>##Route<br>Edit file ‘app/Http/routes.php’</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Route::controllers([</span><br><span class=\"line\">\t&#39;auth&#39; &#x3D;&gt; &#39;Auth\\AuthController&#39;,</span><br><span class=\"line\">\t&#39;password&#39; &#x3D;&gt; &#39;Auth\\PasswordController&#39;,</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><ul>\n<li><p>Install composer</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class=\"line\">curl -sS https:&#x2F;&#x2F;getcomposer.org&#x2F;installer | php</span><br><span class=\"line\">chmod a+x composer.phar</span><br><span class=\"line\">mv composer.phar composer</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"http://pkg.phpcomposer.com\" target=\"_blank\" rel=\"noopener\">composer全量中国镜像</a></p>\n</li>\n<li><p>create project</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer create-project laravel&#x2F;laravel learnlaravel5</span><br></pre></td></tr></table></figure></li>\n<li><p>set web server(nginx)</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tserver &#123;</span><br><span class=\"line\">\tlisten 8000;</span><br><span class=\"line\"></span><br><span class=\"line\">\troot &#x2F;vagrant&#x2F;learnlaravel5&#x2F;public;</span><br><span class=\"line\">\tindex index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">\tserver_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcharset utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x2F; &#123;</span><br><span class=\"line\">        try_files $uri $uri&#x2F; &#x2F;index.php?$query_string;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location &#x3D; &#x2F;favicon.ico &#123; access_log off; log_not_found off; &#125;</span><br><span class=\"line\">    location &#x3D; &#x2F;robots.txt  &#123; access_log off; log_not_found off; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">    error_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;myapp-error.log error;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile off;</span><br><span class=\"line\"></span><br><span class=\"line\">    client_max_body_size 100m;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.php$ &#123;</span><br><span class=\"line\">        fastcgi_split_path_info ^(.+\\.php)(&#x2F;.+)$;</span><br><span class=\"line\">        fastcgi_pass unix:&#x2F;var&#x2F;run&#x2F;php5-fpm.sock;</span><br><span class=\"line\">        fastcgi_index index.php;</span><br><span class=\"line\">        include fastcgi_params;</span><br><span class=\"line\">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class=\"line\">        fastcgi_intercept_errors off;</span><br><span class=\"line\">        fastcgi_buffer_size 16k;</span><br><span class=\"line\">        fastcgi_buffers 4 16k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ &#x2F;\\.ht &#123;</span><br><span class=\"line\">        deny all;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  Access <a href=\"http://localhost:8000\" target=\"_blank\" rel=\"noopener\">http://localhost:8000</a></p>\n</li>\n<li><p>Some folders need write permission: /storage /bootstrap/cache<br>##Route<br>Edit file ‘app/Http/routes.php’</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Route::controllers([</span><br><span class=\"line\">\t&#39;auth&#39; &#x3D;&gt; &#39;Auth\\AuthController&#39;,</span><br><span class=\"line\">\t&#39;password&#39; &#x3D;&gt; &#39;Auth\\PasswordController&#39;,</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"learn laravel 2","date":"2015-09-06T16:00:00.000Z","description":"learn laravel 2","_content":"\n## Data Migrations\n* Create a migration\n\n\t```\n\tphp artisan make:migration create_users_table\n\t\n\tor\n\t\n\tphp artisan make:migration add_votes_to_users_table --table=users\n\tphp artisan make:migration create_users_table --create=users\n\t```\n* Run migration\n\n\t```\n\tphp artisan migrate\n\t```\n* Check migrate status\n\n\t```\n\tphp artisan migrate:status\n\t```\n* Add Foreign Key\n\n\t```\n\t$table->integer('user_id')->unsigned();\n   $table->foreign('user_id')->references('id')->on('users');\n\t```","source":"_posts/learn-laravel-2.md","raw":"---\nlayout: post\ntitle: \"learn laravel 2\"\ndate:   2015-09-07\ndescription: learn laravel 2\ncategories: PHP\ntags:\n- php\n- laravel\n---\n\n## Data Migrations\n* Create a migration\n\n\t```\n\tphp artisan make:migration create_users_table\n\t\n\tor\n\t\n\tphp artisan make:migration add_votes_to_users_table --table=users\n\tphp artisan make:migration create_users_table --create=users\n\t```\n* Run migration\n\n\t```\n\tphp artisan migrate\n\t```\n* Check migrate status\n\n\t```\n\tphp artisan migrate:status\n\t```\n* Add Foreign Key\n\n\t```\n\t$table->integer('user_id')->unsigned();\n   $table->foreign('user_id')->references('id')->on('users');\n\t```","slug":"learn-laravel-2","published":1,"updated":"2020-06-14T15:57:16.331Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12i002nmp841bjn6xhf","content":"<h2 id=\"Data-Migrations\"><a href=\"#Data-Migrations\" class=\"headerlink\" title=\"Data Migrations\"></a>Data Migrations</h2><ul>\n<li><p>Create a migration</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:migration create_users_table</span><br><span class=\"line\"></span><br><span class=\"line\">or</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan make:migration add_votes_to_users_table --table&#x3D;users</span><br><span class=\"line\">php artisan make:migration create_users_table --create&#x3D;users</span><br></pre></td></tr></table></figure></li>\n<li><p>Run migration</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure></li>\n<li><p>Check migrate status</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate:status</span><br></pre></td></tr></table></figure></li>\n<li><p>Add Foreign Key</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$table-&gt;integer(&#39;user_id&#39;)-&gt;unsigned();</span><br><span class=\"line\">  $table-&gt;foreign(&#39;user_id&#39;)-&gt;references(&#39;id&#39;)-&gt;on(&#39;users&#39;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Data-Migrations\"><a href=\"#Data-Migrations\" class=\"headerlink\" title=\"Data Migrations\"></a>Data Migrations</h2><ul>\n<li><p>Create a migration</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan make:migration create_users_table</span><br><span class=\"line\"></span><br><span class=\"line\">or</span><br><span class=\"line\"></span><br><span class=\"line\">php artisan make:migration add_votes_to_users_table --table&#x3D;users</span><br><span class=\"line\">php artisan make:migration create_users_table --create&#x3D;users</span><br></pre></td></tr></table></figure></li>\n<li><p>Run migration</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure></li>\n<li><p>Check migrate status</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate:status</span><br></pre></td></tr></table></figure></li>\n<li><p>Add Foreign Key</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$table-&gt;integer(&#39;user_id&#39;)-&gt;unsigned();</span><br><span class=\"line\">  $table-&gt;foreign(&#39;user_id&#39;)-&gt;references(&#39;id&#39;)-&gt;on(&#39;users&#39;);</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"post","title":"Linux安全初始化","date":"2016-02-28T16:00:00.000Z","description":"Linux安全初始化","_content":"\n- 创建一个deploy的非根用户并加入sudo用户组\n\n```\nadduser deploy\nusermod -a -G sudo deploy\n```\n- ssh密钥对认证\n\n```\n#在本地生成密钥\nssh-keygen\n#copy到服务器\nssh-copy-id -i ~/.ssh/id_rsa.pub root@<serverip>\n```\n- 禁用密码，禁止root登录，编辑 /etc/ssh/sshd_config 文件，找到PasswordAuthentication设置，改为no，找到PermitRootLogin设置，改为no，重启ssh服务\n\n```\nsudo service ssh restart\n```\n\n","source":"_posts/linux-security-init.md","raw":"---\nlayout: post\ntitle: \"Linux安全初始化\"\ndate:   2016-02-29\ndescription: Linux安全初始化\ncategories: Linux\ntags:\n- linux\n- security\n---\n\n- 创建一个deploy的非根用户并加入sudo用户组\n\n```\nadduser deploy\nusermod -a -G sudo deploy\n```\n- ssh密钥对认证\n\n```\n#在本地生成密钥\nssh-keygen\n#copy到服务器\nssh-copy-id -i ~/.ssh/id_rsa.pub root@<serverip>\n```\n- 禁用密码，禁止root登录，编辑 /etc/ssh/sshd_config 文件，找到PasswordAuthentication设置，改为no，找到PermitRootLogin设置，改为no，重启ssh服务\n\n```\nsudo service ssh restart\n```\n\n","slug":"linux-security-init","published":1,"updated":"2020-06-14T15:57:16.314Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12l002smp84gnlihief","content":"<ul>\n<li>创建一个deploy的非根用户并加入sudo用户组</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser deploy</span><br><span class=\"line\">usermod -a -G sudo deploy</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ssh密钥对认证</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在本地生成密钥</span><br><span class=\"line\">ssh-keygen</span><br><span class=\"line\">#copy到服务器</span><br><span class=\"line\">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub root@&lt;serverip&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>禁用密码，禁止root登录，编辑 /etc/ssh/sshd_config 文件，找到PasswordAuthentication设置，改为no，找到PermitRootLogin设置，改为no，重启ssh服务</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service ssh restart</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>创建一个deploy的非根用户并加入sudo用户组</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser deploy</span><br><span class=\"line\">usermod -a -G sudo deploy</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ssh密钥对认证</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在本地生成密钥</span><br><span class=\"line\">ssh-keygen</span><br><span class=\"line\">#copy到服务器</span><br><span class=\"line\">ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub root@&lt;serverip&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>禁用密码，禁止root登录，编辑 /etc/ssh/sshd_config 文件，找到PasswordAuthentication设置，改为no，找到PermitRootLogin设置，改为no，重启ssh服务</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service ssh restart</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Make Ubuntu Startup Disk","date":"2016-02-05T16:00:00.000Z","description":"Make Ubuntu Startup Disk","_content":"\n* Check USB flash disk\n\n```\ndiskutil list\n```\nAnd you will get information as follow:\n\n```\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 AFC412BE-25DE-4B96-A918-783799BD0D95\n                                 Unlocked Encrypted\n/dev/disk2 (disk image):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     Apple_partition_scheme                        +17.4 MB    disk2\n   1:        Apple_partition_map                         32.3 KB    disk2s1\n   2:                  Apple_HFS Flash Player            17.4 MB    disk2s2\n/dev/disk4 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *8.0 GB     disk4\n   1:                 DOS_FAT_32                         8.0 GB     disk4s4\n``` \n\n* Get the information of flash disk and unmount it.\n\n```\ndiskutil unmountDisk /dev/disk4\n```\nThen we will get the information as follow:\n\n```\nUnmount of all volumes on disk4 was successful\n```\n\n* Write ios file in USB flash disk\n\n```\nsudo dd if=~/Downloads/ubuntu-14.04.3-desktop-amd64.iso of=/dev/disk4 bs=4m\n```\nWait for a while, the Startup Disk will be created.\n\n## Make MacOS Startup Disk\n\n* Launch diskutil. Format USB flash disk with OSX Extended, and named the disk, like  Capitan.\n* Write the image to USB flash disk with command:\n\n```\nsudo /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app/Contents/Resources/createinstallmedia --volume /Volumes/Capitan --applicationpath /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app --nointeraction\n```\n\nNotice: the USB flash name & OS image file maybe different.\n\n[OS X 10.11 El Capitan U盘制作 OS X 10.11下载](http://www.pc6.com/edu/80319.html)\n","source":"_posts/make-startup-disk.md","raw":"---\nlayout: post\ntitle: \"Make Ubuntu Startup Disk\"\ndate:   2016-02-06\ndescription: Make Ubuntu Startup Disk\ncategories: Linux\ntags: linux\n---\n\n* Check USB flash disk\n\n```\ndiskutil list\n```\nAnd you will get information as follow:\n\n```\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 AFC412BE-25DE-4B96-A918-783799BD0D95\n                                 Unlocked Encrypted\n/dev/disk2 (disk image):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     Apple_partition_scheme                        +17.4 MB    disk2\n   1:        Apple_partition_map                         32.3 KB    disk2s1\n   2:                  Apple_HFS Flash Player            17.4 MB    disk2s2\n/dev/disk4 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *8.0 GB     disk4\n   1:                 DOS_FAT_32                         8.0 GB     disk4s4\n``` \n\n* Get the information of flash disk and unmount it.\n\n```\ndiskutil unmountDisk /dev/disk4\n```\nThen we will get the information as follow:\n\n```\nUnmount of all volumes on disk4 was successful\n```\n\n* Write ios file in USB flash disk\n\n```\nsudo dd if=~/Downloads/ubuntu-14.04.3-desktop-amd64.iso of=/dev/disk4 bs=4m\n```\nWait for a while, the Startup Disk will be created.\n\n## Make MacOS Startup Disk\n\n* Launch diskutil. Format USB flash disk with OSX Extended, and named the disk, like  Capitan.\n* Write the image to USB flash disk with command:\n\n```\nsudo /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app/Contents/Resources/createinstallmedia --volume /Volumes/Capitan --applicationpath /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app --nointeraction\n```\n\nNotice: the USB flash name & OS image file maybe different.\n\n[OS X 10.11 El Capitan U盘制作 OS X 10.11下载](http://www.pc6.com/edu/80319.html)\n","slug":"make-startup-disk","published":1,"updated":"2020-06-14T15:57:16.329Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12m002vmp847goqdm7g","content":"<ul>\n<li>Check USB flash disk</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil list</span><br></pre></td></tr></table></figure>\n<p>And you will get information as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:      GUID_partition_scheme                        *251.0 GB   disk0</span><br><span class=\"line\">   1:                        EFI EFI                     209.7 MB   disk0s1</span><br><span class=\"line\">   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2</span><br><span class=\"line\">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</span><br><span class=\"line\">&#x2F;dev&#x2F;disk1 (internal, virtual):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1</span><br><span class=\"line\">                                 Logical Volume on disk0s2</span><br><span class=\"line\">                                 AFC412BE-25DE-4B96-A918-783799BD0D95</span><br><span class=\"line\">                                 Unlocked Encrypted</span><br><span class=\"line\">&#x2F;dev&#x2F;disk2 (disk image):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:     Apple_partition_scheme                        +17.4 MB    disk2</span><br><span class=\"line\">   1:        Apple_partition_map                         32.3 KB    disk2s1</span><br><span class=\"line\">   2:                  Apple_HFS Flash Player            17.4 MB    disk2s2</span><br><span class=\"line\">&#x2F;dev&#x2F;disk4 (external, physical):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:     FDisk_partition_scheme                        *8.0 GB     disk4</span><br><span class=\"line\">   1:                 DOS_FAT_32                         8.0 GB     disk4s4</span><br><span class=\"line\">&#96;&#96;&#96; </span><br><span class=\"line\"></span><br><span class=\"line\">* Get the information of flash disk and unmount it.</span><br></pre></td></tr></table></figure>\n<p>diskutil unmountDisk /dev/disk4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then we will get the information as follow:</span><br></pre></td></tr></table></figure>\n<p>Unmount of all volumes on disk4 was successful</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">* Write ios file in USB flash disk</span><br></pre></td></tr></table></figure>\n<p>sudo dd if=~/Downloads/ubuntu-14.04.3-desktop-amd64.iso of=/dev/disk4 bs=4m</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Wait for a while, the Startup Disk will be created.</span><br><span class=\"line\"></span><br><span class=\"line\">## Make MacOS Startup Disk</span><br><span class=\"line\"></span><br><span class=\"line\">* Launch diskutil. Format USB flash disk with OSX Extended, and named the disk, like  Capitan.</span><br><span class=\"line\">* Write the image to USB flash disk with command:</span><br></pre></td></tr></table></figure>\n<p>sudo /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app/Contents/Resources/createinstallmedia –volume /Volumes/Capitan –applicationpath /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app –nointeraction</p>\n<pre><code>\nNotice: the USB flash name &amp; OS image file maybe different.\n\n[OS X 10.11 El Capitan U盘制作 OS X 10.11下载](http://www.pc6.com/edu/80319.html)</code></pre>","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Check USB flash disk</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil list</span><br></pre></td></tr></table></figure>\n<p>And you will get information as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:      GUID_partition_scheme                        *251.0 GB   disk0</span><br><span class=\"line\">   1:                        EFI EFI                     209.7 MB   disk0s1</span><br><span class=\"line\">   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2</span><br><span class=\"line\">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</span><br><span class=\"line\">&#x2F;dev&#x2F;disk1 (internal, virtual):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1</span><br><span class=\"line\">                                 Logical Volume on disk0s2</span><br><span class=\"line\">                                 AFC412BE-25DE-4B96-A918-783799BD0D95</span><br><span class=\"line\">                                 Unlocked Encrypted</span><br><span class=\"line\">&#x2F;dev&#x2F;disk2 (disk image):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:     Apple_partition_scheme                        +17.4 MB    disk2</span><br><span class=\"line\">   1:        Apple_partition_map                         32.3 KB    disk2s1</span><br><span class=\"line\">   2:                  Apple_HFS Flash Player            17.4 MB    disk2s2</span><br><span class=\"line\">&#x2F;dev&#x2F;disk4 (external, physical):</span><br><span class=\"line\">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">   0:     FDisk_partition_scheme                        *8.0 GB     disk4</span><br><span class=\"line\">   1:                 DOS_FAT_32                         8.0 GB     disk4s4</span><br><span class=\"line\">&#96;&#96;&#96; </span><br><span class=\"line\"></span><br><span class=\"line\">* Get the information of flash disk and unmount it.</span><br></pre></td></tr></table></figure>\n<p>diskutil unmountDisk /dev/disk4</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Then we will get the information as follow:</span><br></pre></td></tr></table></figure>\n<p>Unmount of all volumes on disk4 was successful</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">* Write ios file in USB flash disk</span><br></pre></td></tr></table></figure>\n<p>sudo dd if=~/Downloads/ubuntu-14.04.3-desktop-amd64.iso of=/dev/disk4 bs=4m</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Wait for a while, the Startup Disk will be created.</span><br><span class=\"line\"></span><br><span class=\"line\">## Make MacOS Startup Disk</span><br><span class=\"line\"></span><br><span class=\"line\">* Launch diskutil. Format USB flash disk with OSX Extended, and named the disk, like  Capitan.</span><br><span class=\"line\">* Write the image to USB flash disk with command:</span><br></pre></td></tr></table></figure>\n<p>sudo /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app/Contents/Resources/createinstallmedia –volume /Volumes/Capitan –applicationpath /Applications/Install\\ OS\\ X\\ 10.11\\ Developer\\ Beta.app –nointeraction</p>\n<pre><code>\nNotice: the USB flash name &amp; OS image file maybe different.\n\n[OS X 10.11 El Capitan U盘制作 OS X 10.11下载](http://www.pc6.com/edu/80319.html)</code></pre>"},{"layout":"post","title":"Forget Mysql password","date":"2016-01-18T16:00:00.000Z","description":"Forget Mysql password","_content":"\nForget mysql password\n\n* Edit config of mysql, like /etc/mysql/my.conf\n* Add skip-grant-tables in block [mysqld]\n* Restart mysql, and then you can access mysql without password\n* Update password\n\n```\nupdate mysql.user  set password=password('newpassword') where user='<username>'\n``` \n* Then edit mysql config and delete skip-grant-tables\n* Restart mysql\n\nThen you can access mysql with new password\n","source":"_posts/mysql-forget-password.md","raw":"---\nlayout: post\ntitle: \"Forget Mysql password\"\ndate:   2016-01-19\ndescription: Forget Mysql password\ncategories: DataBase\ntags: mysql\n---\n\nForget mysql password\n\n* Edit config of mysql, like /etc/mysql/my.conf\n* Add skip-grant-tables in block [mysqld]\n* Restart mysql, and then you can access mysql without password\n* Update password\n\n```\nupdate mysql.user  set password=password('newpassword') where user='<username>'\n``` \n* Then edit mysql config and delete skip-grant-tables\n* Restart mysql\n\nThen you can access mysql with new password\n","slug":"mysql-forget-password","published":1,"updated":"2020-06-14T15:57:16.324Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12s0030mp84bxhreg7t","content":"<p>Forget mysql password</p>\n<ul>\n<li>Edit config of mysql, like /etc/mysql/my.conf</li>\n<li>Add skip-grant-tables in block [mysqld]</li>\n<li>Restart mysql, and then you can access mysql without password</li>\n<li>Update password</li>\n</ul>\n<pre><code>update mysql.user  set password=password(&apos;newpassword&apos;) where user=&apos;&lt;username&gt;&apos;</code></pre><ul>\n<li>Then edit mysql config and delete skip-grant-tables</li>\n<li>Restart mysql</li>\n</ul>\n<p>Then you can access mysql with new password</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Forget mysql password</p>\n<ul>\n<li>Edit config of mysql, like /etc/mysql/my.conf</li>\n<li>Add skip-grant-tables in block [mysqld]</li>\n<li>Restart mysql, and then you can access mysql without password</li>\n<li>Update password</li>\n</ul>\n<pre><code>update mysql.user  set password=password(&apos;newpassword&apos;) where user=&apos;&lt;username&gt;&apos;</code></pre><ul>\n<li>Then edit mysql config and delete skip-grant-tables</li>\n<li>Restart mysql</li>\n</ul>\n<p>Then you can access mysql with new password</p>\n"},{"layout":"post","title":"mysql存储引擎","date":"2015-08-31T16:00:00.000Z","description":"mysql存储引擎","_content":"\n|Name|Comment|\n|----|----|\n|ARCHIVE|用于数据存档的引擎(数据行被插入后就不能再修改了)|\n|BLACKHOLE|这种存储引擎的写操作是删除数据,读操作是返回空白记录|\n|CSV|这种存储引擎在存储数据时以逗号作为数据项之间的分隔符|\n|EXAMPLE|示例(存根)存储引擎|\n|Falcon|用来进行事务处理的存储引擎|\n|FEDERATED|用来访问远程数据表的存储引擎|\n|InnoDB|具备外键支持功能的事务处理引擎|\n|MEMORY|内存里的数据表|\n|MERGE|用来管理由多个MyISAM数据表构成的数据表集合|\n|MyISAM|默认的存储引擎|\n|NDB|MySQL Cluster 专用存储引擎|","source":"_posts/mysql存储引擎.md","raw":"---\nlayout: post\ntitle: \"mysql存储引擎\"\ndate:   2015-09-01\ndescription: mysql存储引擎\ncategories: DataBase\ntags: mysql\n---\n\n|Name|Comment|\n|----|----|\n|ARCHIVE|用于数据存档的引擎(数据行被插入后就不能再修改了)|\n|BLACKHOLE|这种存储引擎的写操作是删除数据,读操作是返回空白记录|\n|CSV|这种存储引擎在存储数据时以逗号作为数据项之间的分隔符|\n|EXAMPLE|示例(存根)存储引擎|\n|Falcon|用来进行事务处理的存储引擎|\n|FEDERATED|用来访问远程数据表的存储引擎|\n|InnoDB|具备外键支持功能的事务处理引擎|\n|MEMORY|内存里的数据表|\n|MERGE|用来管理由多个MyISAM数据表构成的数据表集合|\n|MyISAM|默认的存储引擎|\n|NDB|MySQL Cluster 专用存储引擎|","slug":"mysql存储引擎","published":1,"updated":"2020-06-14T15:57:16.331Z","comments":1,"photos":[],"link":"","_id":"ckbfpl12v0033mp84huoc0sl0","content":"<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ARCHIVE</td>\n<td>用于数据存档的引擎(数据行被插入后就不能再修改了)</td>\n</tr>\n<tr>\n<td>BLACKHOLE</td>\n<td>这种存储引擎的写操作是删除数据,读操作是返回空白记录</td>\n</tr>\n<tr>\n<td>CSV</td>\n<td>这种存储引擎在存储数据时以逗号作为数据项之间的分隔符</td>\n</tr>\n<tr>\n<td>EXAMPLE</td>\n<td>示例(存根)存储引擎</td>\n</tr>\n<tr>\n<td>Falcon</td>\n<td>用来进行事务处理的存储引擎</td>\n</tr>\n<tr>\n<td>FEDERATED</td>\n<td>用来访问远程数据表的存储引擎</td>\n</tr>\n<tr>\n<td>InnoDB</td>\n<td>具备外键支持功能的事务处理引擎</td>\n</tr>\n<tr>\n<td>MEMORY</td>\n<td>内存里的数据表</td>\n</tr>\n<tr>\n<td>MERGE</td>\n<td>用来管理由多个MyISAM数据表构成的数据表集合</td>\n</tr>\n<tr>\n<td>MyISAM</td>\n<td>默认的存储引擎</td>\n</tr>\n<tr>\n<td>NDB</td>\n<td>MySQL Cluster 专用存储引擎</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ARCHIVE</td>\n<td>用于数据存档的引擎(数据行被插入后就不能再修改了)</td>\n</tr>\n<tr>\n<td>BLACKHOLE</td>\n<td>这种存储引擎的写操作是删除数据,读操作是返回空白记录</td>\n</tr>\n<tr>\n<td>CSV</td>\n<td>这种存储引擎在存储数据时以逗号作为数据项之间的分隔符</td>\n</tr>\n<tr>\n<td>EXAMPLE</td>\n<td>示例(存根)存储引擎</td>\n</tr>\n<tr>\n<td>Falcon</td>\n<td>用来进行事务处理的存储引擎</td>\n</tr>\n<tr>\n<td>FEDERATED</td>\n<td>用来访问远程数据表的存储引擎</td>\n</tr>\n<tr>\n<td>InnoDB</td>\n<td>具备外键支持功能的事务处理引擎</td>\n</tr>\n<tr>\n<td>MEMORY</td>\n<td>内存里的数据表</td>\n</tr>\n<tr>\n<td>MERGE</td>\n<td>用来管理由多个MyISAM数据表构成的数据表集合</td>\n</tr>\n<tr>\n<td>MyISAM</td>\n<td>默认的存储引擎</td>\n</tr>\n<tr>\n<td>NDB</td>\n<td>MySQL Cluster 专用存储引擎</td>\n</tr>\n</tbody></table>\n"},{"layout":"post","title":"phar","date":"2015-08-25T16:00:00.000Z","description":"phar","_content":"\n刚开始php工作时，Boss要我研究一下关于PHP加密部署的问题，但是当时对PHP只是初步了解。后来换了一份工作，才知道可以使用phar包发布，可以算是加密发布的一种。\n## PHP Archive\nPHP5.3之后支持了类似Java的jar包，名为phar。用来将多个PHP文件打包为一个文件。\n## 如何创建phar包\n项目中建立一个build.php文件，代码如下：\n\n```\n<?php\n\n$exts = ['php', 'twig'];    // 需要打包的文件后缀, twig是模版文件, 你还可以安需加入html等后缀\n$dir = __DIR__;             // 需要打包的目录\n\n$file = 'Sample.phar';      // 包的名称, 注意它不仅仅是一个文件名, 在stub中也会作为入口前缀\n$phar = new Phar(__DIR__ . '/' . $file, FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::KEY_AS_FILENAME, $file);\n\n// 开始打包\n$phar->startBuffering();\n\n// 将后缀名相关的文件打包\nforeach ($exts as $ext) {\n    $phar->buildFromDirectory($dir, '/\\.' . $ext . '$/');\n}\n\n// 把build.php本身摘除\n$phar->delete('build.php');\n\n// 设置入口\n$phar->setStub(\"<?php\nPhar::mapPhar('{$file}');\nrequire 'phar://{$file}/portal/index.php';\n__HALT_COMPILER();\n?>\");\n$phar->stopBuffering();\n\n// 打包完成\necho \"Finished {$file}\\n\";\n```\n生成phar包后，只需要直接引用执行就可以了，如添加index.php文件\n\n```\n<?php\nrequire __DIR__ . '/Sample.phar';\n```\n在实际的项目产品中，我们可以一个模块建立一个phar包，在autoload时可以判断如果没有找到相应地phar包则试图加载相应目录。这样在线上调试时，上传相应地目录就可以。对于静态文件，如图片以及配置，以及入口文件(一般是index.php)，用户定制需求或者设置可以依旧保持源码发布，方便更改调试。\n## 性能\n我没有做具体的测试，只是从网上的资料中了解到phar加载时性能会比源文件差，基本上是1.8到2倍左右，但是执行效果还是不错。而且原先公司产品也是用phar包发布。基本上没有遇到过因为phar产生的问题。\n## 参考资料\n* [PHP归档phar性能测试](http://blog.csdn.net/ugg/article/details/25335079)\n* [使用phar上线你的代码包](http://segmentfault.com/a/1190000002166235)\n* [PHP中phar包的使用](http://rango.swoole.com/archives/168)\n* [PHP PHAR 10分钟体验教程](http://my.oschina.net/ecnu/blog/132778)\n* [Using Phar Archives: the phar stream wrapper](http://php.net/manual/zh/phar.using.stream.php)\n* [phar-sample](https://github.com/SegmentFault/phar-sample)","source":"_posts/phar.md","raw":"---\nlayout: post\ntitle: \"phar\"\ndate:   2015-08-26\ndescription: phar\ncategories: PHP\ntags: php\n---\n\n刚开始php工作时，Boss要我研究一下关于PHP加密部署的问题，但是当时对PHP只是初步了解。后来换了一份工作，才知道可以使用phar包发布，可以算是加密发布的一种。\n## PHP Archive\nPHP5.3之后支持了类似Java的jar包，名为phar。用来将多个PHP文件打包为一个文件。\n## 如何创建phar包\n项目中建立一个build.php文件，代码如下：\n\n```\n<?php\n\n$exts = ['php', 'twig'];    // 需要打包的文件后缀, twig是模版文件, 你还可以安需加入html等后缀\n$dir = __DIR__;             // 需要打包的目录\n\n$file = 'Sample.phar';      // 包的名称, 注意它不仅仅是一个文件名, 在stub中也会作为入口前缀\n$phar = new Phar(__DIR__ . '/' . $file, FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::KEY_AS_FILENAME, $file);\n\n// 开始打包\n$phar->startBuffering();\n\n// 将后缀名相关的文件打包\nforeach ($exts as $ext) {\n    $phar->buildFromDirectory($dir, '/\\.' . $ext . '$/');\n}\n\n// 把build.php本身摘除\n$phar->delete('build.php');\n\n// 设置入口\n$phar->setStub(\"<?php\nPhar::mapPhar('{$file}');\nrequire 'phar://{$file}/portal/index.php';\n__HALT_COMPILER();\n?>\");\n$phar->stopBuffering();\n\n// 打包完成\necho \"Finished {$file}\\n\";\n```\n生成phar包后，只需要直接引用执行就可以了，如添加index.php文件\n\n```\n<?php\nrequire __DIR__ . '/Sample.phar';\n```\n在实际的项目产品中，我们可以一个模块建立一个phar包，在autoload时可以判断如果没有找到相应地phar包则试图加载相应目录。这样在线上调试时，上传相应地目录就可以。对于静态文件，如图片以及配置，以及入口文件(一般是index.php)，用户定制需求或者设置可以依旧保持源码发布，方便更改调试。\n## 性能\n我没有做具体的测试，只是从网上的资料中了解到phar加载时性能会比源文件差，基本上是1.8到2倍左右，但是执行效果还是不错。而且原先公司产品也是用phar包发布。基本上没有遇到过因为phar产生的问题。\n## 参考资料\n* [PHP归档phar性能测试](http://blog.csdn.net/ugg/article/details/25335079)\n* [使用phar上线你的代码包](http://segmentfault.com/a/1190000002166235)\n* [PHP中phar包的使用](http://rango.swoole.com/archives/168)\n* [PHP PHAR 10分钟体验教程](http://my.oschina.net/ecnu/blog/132778)\n* [Using Phar Archives: the phar stream wrapper](http://php.net/manual/zh/phar.using.stream.php)\n* [phar-sample](https://github.com/SegmentFault/phar-sample)","slug":"phar","published":1,"updated":"2020-06-14T15:57:16.315Z","comments":1,"photos":[],"link":"","_id":"ckbfpl1310038mp844t3q4nx6","content":"<p>刚开始php工作时，Boss要我研究一下关于PHP加密部署的问题，但是当时对PHP只是初步了解。后来换了一份工作，才知道可以使用phar包发布，可以算是加密发布的一种。</p>\n<h2 id=\"PHP-Archive\"><a href=\"#PHP-Archive\" class=\"headerlink\" title=\"PHP Archive\"></a>PHP Archive</h2><p>PHP5.3之后支持了类似Java的jar包，名为phar。用来将多个PHP文件打包为一个文件。</p>\n<h2 id=\"如何创建phar包\"><a href=\"#如何创建phar包\" class=\"headerlink\" title=\"如何创建phar包\"></a>如何创建phar包</h2><p>项目中建立一个build.php文件，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$exts &#x3D; [&#39;php&#39;, &#39;twig&#39;];    &#x2F;&#x2F; 需要打包的文件后缀, twig是模版文件, 你还可以安需加入html等后缀</span><br><span class=\"line\">$dir &#x3D; __DIR__;             &#x2F;&#x2F; 需要打包的目录</span><br><span class=\"line\"></span><br><span class=\"line\">$file &#x3D; &#39;Sample.phar&#39;;      &#x2F;&#x2F; 包的名称, 注意它不仅仅是一个文件名, 在stub中也会作为入口前缀</span><br><span class=\"line\">$phar &#x3D; new Phar(__DIR__ . &#39;&#x2F;&#39; . $file, FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::KEY_AS_FILENAME, $file);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 开始打包</span><br><span class=\"line\">$phar-&gt;startBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 将后缀名相关的文件打包</span><br><span class=\"line\">foreach ($exts as $ext) &#123;</span><br><span class=\"line\">    $phar-&gt;buildFromDirectory($dir, &#39;&#x2F;\\.&#39; . $ext . &#39;$&#x2F;&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 把build.php本身摘除</span><br><span class=\"line\">$phar-&gt;delete(&#39;build.php&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 设置入口</span><br><span class=\"line\">$phar-&gt;setStub(&quot;&lt;?php</span><br><span class=\"line\">Phar::mapPhar(&#39;&#123;$file&#125;&#39;);</span><br><span class=\"line\">require &#39;phar:&#x2F;&#x2F;&#123;$file&#125;&#x2F;portal&#x2F;index.php&#39;;</span><br><span class=\"line\">__HALT_COMPILER();</span><br><span class=\"line\">?&gt;&quot;);</span><br><span class=\"line\">$phar-&gt;stopBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 打包完成</span><br><span class=\"line\">echo &quot;Finished &#123;$file&#125;\\n&quot;;</span><br></pre></td></tr></table></figure>\n<p>生成phar包后，只需要直接引用执行就可以了，如添加index.php文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">require __DIR__ . &#39;&#x2F;Sample.phar&#39;;</span><br></pre></td></tr></table></figure>\n<p>在实际的项目产品中，我们可以一个模块建立一个phar包，在autoload时可以判断如果没有找到相应地phar包则试图加载相应目录。这样在线上调试时，上传相应地目录就可以。对于静态文件，如图片以及配置，以及入口文件(一般是index.php)，用户定制需求或者设置可以依旧保持源码发布，方便更改调试。</p>\n<h2 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h2><p>我没有做具体的测试，只是从网上的资料中了解到phar加载时性能会比源文件差，基本上是1.8到2倍左右，但是执行效果还是不错。而且原先公司产品也是用phar包发布。基本上没有遇到过因为phar产生的问题。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://blog.csdn.net/ugg/article/details/25335079\" target=\"_blank\" rel=\"noopener\">PHP归档phar性能测试</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000002166235\" target=\"_blank\" rel=\"noopener\">使用phar上线你的代码包</a></li>\n<li><a href=\"http://rango.swoole.com/archives/168\" target=\"_blank\" rel=\"noopener\">PHP中phar包的使用</a></li>\n<li><a href=\"http://my.oschina.net/ecnu/blog/132778\" target=\"_blank\" rel=\"noopener\">PHP PHAR 10分钟体验教程</a></li>\n<li><a href=\"http://php.net/manual/zh/phar.using.stream.php\" target=\"_blank\" rel=\"noopener\">Using Phar Archives: the phar stream wrapper</a></li>\n<li><a href=\"https://github.com/SegmentFault/phar-sample\" target=\"_blank\" rel=\"noopener\">phar-sample</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>刚开始php工作时，Boss要我研究一下关于PHP加密部署的问题，但是当时对PHP只是初步了解。后来换了一份工作，才知道可以使用phar包发布，可以算是加密发布的一种。</p>\n<h2 id=\"PHP-Archive\"><a href=\"#PHP-Archive\" class=\"headerlink\" title=\"PHP Archive\"></a>PHP Archive</h2><p>PHP5.3之后支持了类似Java的jar包，名为phar。用来将多个PHP文件打包为一个文件。</p>\n<h2 id=\"如何创建phar包\"><a href=\"#如何创建phar包\" class=\"headerlink\" title=\"如何创建phar包\"></a>如何创建phar包</h2><p>项目中建立一个build.php文件，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$exts &#x3D; [&#39;php&#39;, &#39;twig&#39;];    &#x2F;&#x2F; 需要打包的文件后缀, twig是模版文件, 你还可以安需加入html等后缀</span><br><span class=\"line\">$dir &#x3D; __DIR__;             &#x2F;&#x2F; 需要打包的目录</span><br><span class=\"line\"></span><br><span class=\"line\">$file &#x3D; &#39;Sample.phar&#39;;      &#x2F;&#x2F; 包的名称, 注意它不仅仅是一个文件名, 在stub中也会作为入口前缀</span><br><span class=\"line\">$phar &#x3D; new Phar(__DIR__ . &#39;&#x2F;&#39; . $file, FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::KEY_AS_FILENAME, $file);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 开始打包</span><br><span class=\"line\">$phar-&gt;startBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 将后缀名相关的文件打包</span><br><span class=\"line\">foreach ($exts as $ext) &#123;</span><br><span class=\"line\">    $phar-&gt;buildFromDirectory($dir, &#39;&#x2F;\\.&#39; . $ext . &#39;$&#x2F;&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 把build.php本身摘除</span><br><span class=\"line\">$phar-&gt;delete(&#39;build.php&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 设置入口</span><br><span class=\"line\">$phar-&gt;setStub(&quot;&lt;?php</span><br><span class=\"line\">Phar::mapPhar(&#39;&#123;$file&#125;&#39;);</span><br><span class=\"line\">require &#39;phar:&#x2F;&#x2F;&#123;$file&#125;&#x2F;portal&#x2F;index.php&#39;;</span><br><span class=\"line\">__HALT_COMPILER();</span><br><span class=\"line\">?&gt;&quot;);</span><br><span class=\"line\">$phar-&gt;stopBuffering();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 打包完成</span><br><span class=\"line\">echo &quot;Finished &#123;$file&#125;\\n&quot;;</span><br></pre></td></tr></table></figure>\n<p>生成phar包后，只需要直接引用执行就可以了，如添加index.php文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">require __DIR__ . &#39;&#x2F;Sample.phar&#39;;</span><br></pre></td></tr></table></figure>\n<p>在实际的项目产品中，我们可以一个模块建立一个phar包，在autoload时可以判断如果没有找到相应地phar包则试图加载相应目录。这样在线上调试时，上传相应地目录就可以。对于静态文件，如图片以及配置，以及入口文件(一般是index.php)，用户定制需求或者设置可以依旧保持源码发布，方便更改调试。</p>\n<h2 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h2><p>我没有做具体的测试，只是从网上的资料中了解到phar加载时性能会比源文件差，基本上是1.8到2倍左右，但是执行效果还是不错。而且原先公司产品也是用phar包发布。基本上没有遇到过因为phar产生的问题。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"http://blog.csdn.net/ugg/article/details/25335079\" target=\"_blank\" rel=\"noopener\">PHP归档phar性能测试</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000002166235\" target=\"_blank\" rel=\"noopener\">使用phar上线你的代码包</a></li>\n<li><a href=\"http://rango.swoole.com/archives/168\" target=\"_blank\" rel=\"noopener\">PHP中phar包的使用</a></li>\n<li><a href=\"http://my.oschina.net/ecnu/blog/132778\" target=\"_blank\" rel=\"noopener\">PHP PHAR 10分钟体验教程</a></li>\n<li><a href=\"http://php.net/manual/zh/phar.using.stream.php\" target=\"_blank\" rel=\"noopener\">Using Phar Archives: the phar stream wrapper</a></li>\n<li><a href=\"https://github.com/SegmentFault/phar-sample\" target=\"_blank\" rel=\"noopener\">phar-sample</a></li>\n</ul>\n"},{"layout":"post","title":"PHP7 Installation","date":"2015-12-29T16:00:00.000Z","description":"PHP7 Installation","_content":"\n* Get source code of php 7\n\n```\nwget http://cn2.php.net/distributions/php-7.0.1.tar.bz2\ntar -xvf php-7.0.1.tar.bz2\n```\n\n* Install tools\n\n```\nsudo apt-get -y update\nsudo apt-get -y install libxml2-dev\nsudo apt-get -y install  build-essential\nsudo apt-get -y install openssl \nsudo apt-get -y install libssl-dev \nsudo apt-get -y install make\nsudo apt-get -y install curl\nsudo apt-get -y install libcurl4-gnutls-dev\nsudo apt-get -y install libjpeg-dev\nsudo apt-get -y install libpng-dev\nsudo apt-get -y install libmcrypt-dev\nsudo apt-get -y install libreadline6 libreadline6-dev\n\n```\n\n* Compile\n\n```\ncd php-7.0.1/\n./configure\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts\n./configure --prefix=/usr/local/php --enable-fpm --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-opcache  --with-mysql --with-mysqli --with-mysql-sock  --enable-pdo --with-pdo-mysql --with-gettext --enable-mbstring --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-zlib --enable-zip --enable-bz2 --with-readline --without-sqlite3 --without-pdo-sqlite --with-pear --with-libdir=/lib/x86_64-linux-gnu --with-gd --with-jpeg-dir=/usr/lib --enable-gd-native-ttf --enable-xml\nmake && make test\nmake && sudo make install\n```\n* Config\n\n```\ncd /usr/local/php/etc/\ncp php-fpm.conf.default php-fpm.conf\ncp etc/php-fpm.d/www.conf.default etc/php-fpm.d/www.conf\n\n#Change user & group in www.conf as follow:\n#user = www-data\n#group = www-data\n```\n* Start php-fpm\n\n```\nsudo /usr/local/php/sbin/php-fpm\n```\n* Add enviroment variable for php-cli\n\n```\nsudo echo \"PATH=$PATH:/usr/local/php/bin\">> /etc/profile\nsudo echo \"export PATH\">> /etc/profile\nsource /etc/profile\n```\n","source":"_posts/php7-installation.md","raw":"---\nlayout: post\ntitle: \"PHP7 Installation\"\ndate:   2015-12-30\ndescription: PHP7 Installation\ncategories: PHP\ntags: php\n---\n\n* Get source code of php 7\n\n```\nwget http://cn2.php.net/distributions/php-7.0.1.tar.bz2\ntar -xvf php-7.0.1.tar.bz2\n```\n\n* Install tools\n\n```\nsudo apt-get -y update\nsudo apt-get -y install libxml2-dev\nsudo apt-get -y install  build-essential\nsudo apt-get -y install openssl \nsudo apt-get -y install libssl-dev \nsudo apt-get -y install make\nsudo apt-get -y install curl\nsudo apt-get -y install libcurl4-gnutls-dev\nsudo apt-get -y install libjpeg-dev\nsudo apt-get -y install libpng-dev\nsudo apt-get -y install libmcrypt-dev\nsudo apt-get -y install libreadline6 libreadline6-dev\n\n```\n\n* Compile\n\n```\ncd php-7.0.1/\n./configure\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts\n./configure --prefix=/usr/local/php --enable-fpm --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-opcache  --with-mysql --with-mysqli --with-mysql-sock  --enable-pdo --with-pdo-mysql --with-gettext --enable-mbstring --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-zlib --enable-zip --enable-bz2 --with-readline --without-sqlite3 --without-pdo-sqlite --with-pear --with-libdir=/lib/x86_64-linux-gnu --with-gd --with-jpeg-dir=/usr/lib --enable-gd-native-ttf --enable-xml\nmake && make test\nmake && sudo make install\n```\n* Config\n\n```\ncd /usr/local/php/etc/\ncp php-fpm.conf.default php-fpm.conf\ncp etc/php-fpm.d/www.conf.default etc/php-fpm.d/www.conf\n\n#Change user & group in www.conf as follow:\n#user = www-data\n#group = www-data\n```\n* Start php-fpm\n\n```\nsudo /usr/local/php/sbin/php-fpm\n```\n* Add enviroment variable for php-cli\n\n```\nsudo echo \"PATH=$PATH:/usr/local/php/bin\">> /etc/profile\nsudo echo \"export PATH\">> /etc/profile\nsource /etc/profile\n```\n","slug":"php7-installation","published":1,"updated":"2020-06-14T15:57:16.328Z","comments":1,"photos":[],"link":"","_id":"ckbfpl137003bmp8483e00jnc","content":"<ul>\n<li>Get source code of php 7</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;cn2.php.net&#x2F;distributions&#x2F;php-7.0.1.tar.bz2</span><br><span class=\"line\">tar -xvf php-7.0.1.tar.bz2</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Install tools</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -y update</span><br><span class=\"line\">sudo apt-get -y install libxml2-dev</span><br><span class=\"line\">sudo apt-get -y install  build-essential</span><br><span class=\"line\">sudo apt-get -y install openssl </span><br><span class=\"line\">sudo apt-get -y install libssl-dev </span><br><span class=\"line\">sudo apt-get -y install make</span><br><span class=\"line\">sudo apt-get -y install curl</span><br><span class=\"line\">sudo apt-get -y install libcurl4-gnutls-dev</span><br><span class=\"line\">sudo apt-get -y install libjpeg-dev</span><br><span class=\"line\">sudo apt-get -y install libpng-dev</span><br><span class=\"line\">sudo apt-get -y install libmcrypt-dev</span><br><span class=\"line\">sudo apt-get -y install libreadline6 libreadline6-dev</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Compile</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd php-7.0.1&#x2F;</span><br><span class=\"line\">.&#x2F;configure</span><br><span class=\"line\">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php --with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;php&#x2F;etc --enable-fpm --with-fpm-user&#x3D;www --with-fpm-group&#x3D;www --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir&#x3D;&#x2F;usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts</span><br><span class=\"line\">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php --enable-fpm --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-opcache  --with-mysql --with-mysqli --with-mysql-sock  --enable-pdo --with-pdo-mysql --with-gettext --enable-mbstring --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-zlib --enable-zip --enable-bz2 --with-readline --without-sqlite3 --without-pdo-sqlite --with-pear --with-libdir&#x3D;&#x2F;lib&#x2F;x86_64-linux-gnu --with-gd --with-jpeg-dir&#x3D;&#x2F;usr&#x2F;lib --enable-gd-native-ttf --enable-xml</span><br><span class=\"line\">make &amp;&amp; make test</span><br><span class=\"line\">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Config</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;</span><br><span class=\"line\">cp php-fpm.conf.default php-fpm.conf</span><br><span class=\"line\">cp etc&#x2F;php-fpm.d&#x2F;www.conf.default etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#Change user &amp; group in www.conf as follow:</span><br><span class=\"line\">#user &#x3D; www-data</span><br><span class=\"line\">#group &#x3D; www-data</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Start php-fpm</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo &#x2F;usr&#x2F;local&#x2F;php&#x2F;sbin&#x2F;php-fpm</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Add enviroment variable for php-cli</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo echo &quot;PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&quot;&gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class=\"line\">sudo echo &quot;export PATH&quot;&gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>Get source code of php 7</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;cn2.php.net&#x2F;distributions&#x2F;php-7.0.1.tar.bz2</span><br><span class=\"line\">tar -xvf php-7.0.1.tar.bz2</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Install tools</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -y update</span><br><span class=\"line\">sudo apt-get -y install libxml2-dev</span><br><span class=\"line\">sudo apt-get -y install  build-essential</span><br><span class=\"line\">sudo apt-get -y install openssl </span><br><span class=\"line\">sudo apt-get -y install libssl-dev </span><br><span class=\"line\">sudo apt-get -y install make</span><br><span class=\"line\">sudo apt-get -y install curl</span><br><span class=\"line\">sudo apt-get -y install libcurl4-gnutls-dev</span><br><span class=\"line\">sudo apt-get -y install libjpeg-dev</span><br><span class=\"line\">sudo apt-get -y install libpng-dev</span><br><span class=\"line\">sudo apt-get -y install libmcrypt-dev</span><br><span class=\"line\">sudo apt-get -y install libreadline6 libreadline6-dev</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Compile</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd php-7.0.1&#x2F;</span><br><span class=\"line\">.&#x2F;configure</span><br><span class=\"line\">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php --with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;php&#x2F;etc --enable-fpm --with-fpm-user&#x3D;www --with-fpm-group&#x3D;www --with-mysqli --with-pdo-mysql --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir&#x3D;&#x2F;usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts</span><br><span class=\"line\">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php --enable-fpm --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-opcache  --with-mysql --with-mysqli --with-mysql-sock  --enable-pdo --with-pdo-mysql --with-gettext --enable-mbstring --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-zlib --enable-zip --enable-bz2 --with-readline --without-sqlite3 --without-pdo-sqlite --with-pear --with-libdir&#x3D;&#x2F;lib&#x2F;x86_64-linux-gnu --with-gd --with-jpeg-dir&#x3D;&#x2F;usr&#x2F;lib --enable-gd-native-ttf --enable-xml</span><br><span class=\"line\">make &amp;&amp; make test</span><br><span class=\"line\">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Config</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;</span><br><span class=\"line\">cp php-fpm.conf.default php-fpm.conf</span><br><span class=\"line\">cp etc&#x2F;php-fpm.d&#x2F;www.conf.default etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#Change user &amp; group in www.conf as follow:</span><br><span class=\"line\">#user &#x3D; www-data</span><br><span class=\"line\">#group &#x3D; www-data</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Start php-fpm</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo &#x2F;usr&#x2F;local&#x2F;php&#x2F;sbin&#x2F;php-fpm</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Add enviroment variable for php-cli</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo echo &quot;PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&quot;&gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class=\"line\">sudo echo &quot;export PATH&quot;&gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"phpize","date":"2015-08-19T16:00:00.000Z","description":"phpize","_content":"\n## phpize是啥\n[php官方的说明](http://php.net/manual/en/install.pecl.phpize.php)\n\nphpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块。比如你想在原来编译好的php中加入memcached或者ImageMagick等扩展模块，可以使用phpize，通过以下几步工作。","source":"_posts/phpize.md","raw":"---\nlayout: post\ntitle: \"phpize\"\ndate:   2015-08-20\ndescription: phpize\ncategories: PHP\ntags: php\n---\n\n## phpize是啥\n[php官方的说明](http://php.net/manual/en/install.pecl.phpize.php)\n\nphpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块。比如你想在原来编译好的php中加入memcached或者ImageMagick等扩展模块，可以使用phpize，通过以下几步工作。","slug":"phpize","published":1,"updated":"2020-06-14T15:57:16.327Z","comments":1,"photos":[],"link":"","_id":"ckbfpl139003gmp84cxpc8qdc","content":"<h2 id=\"phpize是啥\"><a href=\"#phpize是啥\" class=\"headerlink\" title=\"phpize是啥\"></a>phpize是啥</h2><p><a href=\"http://php.net/manual/en/install.pecl.phpize.php\" target=\"_blank\" rel=\"noopener\">php官方的说明</a></p>\n<p>phpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块。比如你想在原来编译好的php中加入memcached或者ImageMagick等扩展模块，可以使用phpize，通过以下几步工作。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"phpize是啥\"><a href=\"#phpize是啥\" class=\"headerlink\" title=\"phpize是啥\"></a>phpize是啥</h2><p><a href=\"http://php.net/manual/en/install.pecl.phpize.php\" target=\"_blank\" rel=\"noopener\">php官方的说明</a></p>\n<p>phpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块。比如你想在原来编译好的php中加入memcached或者ImageMagick等扩展模块，可以使用phpize，通过以下几步工作。</p>\n"},{"layout":"post","title":"Install Spark In Ubuntu","date":"2016-06-17T16:00:00.000Z","description":"Install Spark In Ubuntu","_content":"\n## Installation\nYou need three things to run spark in Ubuntu. Java Scala & Spark. So download them as follow:\n\n* [JDK](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [Scala](http://www.scala-lang.org/)\n* [Spark](http://spark.apache.org/downloads.html)\n\n**NOTICE:** Spark has 2 types, spark & spark-hadoop, if you need spark-stream, download spark-hadoop.\n\nAfter you get those tgz files, release them under folder /opt. Then edit /etc/profile as follow:\n\n```\n#JDK environment variable\nexport JAVA_HOME=/opt/jdk\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin:$PATH\n\n#Scala environment variable\nexport SCALA_HOME=/opt/scala\nexport PATH=${SCALA_HOME}/bin:$PATH\n\n#Spark  environment variable\nexport SPARK_HOME=/opt/spark-hadoop/\n\n#PythonPath Add pySpark from Spark to Python\nexport PYTHONPATH=/opt/spark-hadoop/python\n```\n\n**NOTICE:** If you install java before, just make sure JAVA_HOME JRE_HOME CLASSPATH PATH be configurated correct.\n\nThen restart computer to make configuration work forever or run command \n```\nsource /etc/profile\n```\nto make it work temporary.\n## Test\nSwitch to /opt/spark-hadoop in terminal. Run \n```\n./bin/spark-shell\n```\n, then you will get spark lauch information and scala command.\n","source":"_posts/install-spark-in-ubuntu.md","raw":"---\nlayout: post\ntitle: \"Install Spark In Ubuntu\"\ndate:   2016-06-18\ndescription: Install Spark In Ubuntu\ncategories: Spark\ntags: spark\n---\n\n## Installation\nYou need three things to run spark in Ubuntu. Java Scala & Spark. So download them as follow:\n\n* [JDK](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [Scala](http://www.scala-lang.org/)\n* [Spark](http://spark.apache.org/downloads.html)\n\n**NOTICE:** Spark has 2 types, spark & spark-hadoop, if you need spark-stream, download spark-hadoop.\n\nAfter you get those tgz files, release them under folder /opt. Then edit /etc/profile as follow:\n\n```\n#JDK environment variable\nexport JAVA_HOME=/opt/jdk\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin:$PATH\n\n#Scala environment variable\nexport SCALA_HOME=/opt/scala\nexport PATH=${SCALA_HOME}/bin:$PATH\n\n#Spark  environment variable\nexport SPARK_HOME=/opt/spark-hadoop/\n\n#PythonPath Add pySpark from Spark to Python\nexport PYTHONPATH=/opt/spark-hadoop/python\n```\n\n**NOTICE:** If you install java before, just make sure JAVA_HOME JRE_HOME CLASSPATH PATH be configurated correct.\n\nThen restart computer to make configuration work forever or run command \n```\nsource /etc/profile\n```\nto make it work temporary.\n## Test\nSwitch to /opt/spark-hadoop in terminal. Run \n```\n./bin/spark-shell\n```\n, then you will get spark lauch information and scala command.\n","slug":"install-spark-in-ubuntu","published":1,"updated":"2020-06-14T15:57:16.311Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13c003jmp84aefcaj4m","content":"<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>You need three things to run spark in Ubuntu. Java Scala &amp; Spark. So download them as follow:</p>\n<ul>\n<li><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">JDK</a></li>\n<li><a href=\"http://www.scala-lang.org/\" target=\"_blank\" rel=\"noopener\">Scala</a></li>\n<li><a href=\"http://spark.apache.org/downloads.html\" target=\"_blank\" rel=\"noopener\">Spark</a></li>\n</ul>\n<p><strong>NOTICE:</strong> Spark has 2 types, spark &amp; spark-hadoop, if you need spark-stream, download spark-hadoop.</p>\n<p>After you get those tgz files, release them under folder /opt. Then edit /etc/profile as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#JDK environment variable</span><br><span class=\"line\">export JAVA_HOME&#x3D;&#x2F;opt&#x2F;jdk</span><br><span class=\"line\">export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jre</span><br><span class=\"line\">export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;lib</span><br><span class=\"line\">export PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$&#123;JRE_HOME&#125;&#x2F;bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">#Scala environment variable</span><br><span class=\"line\">export SCALA_HOME&#x3D;&#x2F;opt&#x2F;scala</span><br><span class=\"line\">export PATH&#x3D;$&#123;SCALA_HOME&#125;&#x2F;bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">#Spark  environment variable</span><br><span class=\"line\">export SPARK_HOME&#x3D;&#x2F;opt&#x2F;spark-hadoop&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#PythonPath Add pySpark from Spark to Python</span><br><span class=\"line\">export PYTHONPATH&#x3D;&#x2F;opt&#x2F;spark-hadoop&#x2F;python</span><br></pre></td></tr></table></figure>\n\n<p><strong>NOTICE:</strong> If you install java before, just make sure JAVA_HOME JRE_HOME CLASSPATH PATH be configurated correct.</p>\n<p>Then restart computer to make configuration work forever or run command </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n<p>to make it work temporary.</p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Switch to /opt/spark-hadoop in terminal. Run </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;bin&#x2F;spark-shell</span><br></pre></td></tr></table></figure>\n<p>, then you will get spark lauch information and scala command.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>You need three things to run spark in Ubuntu. Java Scala &amp; Spark. So download them as follow:</p>\n<ul>\n<li><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">JDK</a></li>\n<li><a href=\"http://www.scala-lang.org/\" target=\"_blank\" rel=\"noopener\">Scala</a></li>\n<li><a href=\"http://spark.apache.org/downloads.html\" target=\"_blank\" rel=\"noopener\">Spark</a></li>\n</ul>\n<p><strong>NOTICE:</strong> Spark has 2 types, spark &amp; spark-hadoop, if you need spark-stream, download spark-hadoop.</p>\n<p>After you get those tgz files, release them under folder /opt. Then edit /etc/profile as follow:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#JDK environment variable</span><br><span class=\"line\">export JAVA_HOME&#x3D;&#x2F;opt&#x2F;jdk</span><br><span class=\"line\">export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jre</span><br><span class=\"line\">export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;lib</span><br><span class=\"line\">export PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$&#123;JRE_HOME&#125;&#x2F;bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">#Scala environment variable</span><br><span class=\"line\">export SCALA_HOME&#x3D;&#x2F;opt&#x2F;scala</span><br><span class=\"line\">export PATH&#x3D;$&#123;SCALA_HOME&#125;&#x2F;bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">#Spark  environment variable</span><br><span class=\"line\">export SPARK_HOME&#x3D;&#x2F;opt&#x2F;spark-hadoop&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">#PythonPath Add pySpark from Spark to Python</span><br><span class=\"line\">export PYTHONPATH&#x3D;&#x2F;opt&#x2F;spark-hadoop&#x2F;python</span><br></pre></td></tr></table></figure>\n\n<p><strong>NOTICE:</strong> If you install java before, just make sure JAVA_HOME JRE_HOME CLASSPATH PATH be configurated correct.</p>\n<p>Then restart computer to make configuration work forever or run command </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n<p>to make it work temporary.</p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><p>Switch to /opt/spark-hadoop in terminal. Run </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;bin&#x2F;spark-shell</span><br></pre></td></tr></table></figure>\n<p>, then you will get spark lauch information and scala command.</p>\n"},{"layout":"post","title":"Print Stack Trace in error log","date":"2016-02-04T16:00:00.000Z","description":"Print Stack Trace in error log","_content":"\n```\nforeach ( debug_backtrace() as $key => $value ) {\n\t$function = @$value['function'];\n\tif( isset( $value['class'] ) )\n\t\t$function = $value['class'] . '::' . $function;\n\t//error_log( \"** \" . $key . \". \" . $function . \"( \" . str_replace( array(\"\\n\",\"\\t\",' ','(',')'), '', print_r( $value['args'], true ) ) . \" )\" );\n\t//error_log( \"** \" . $key . \". \" . $function . \"( \" . implode( ', ', @$value['args'] ) . \" )\" );\n\terror_log( \"** \" . $key . \". \" . $function . \"( \" . serialize( @$value['args'] ) . \" )\" );\n\terror_log( \"** FILE: \" . @$value['file'] . \":\" . @$value['line'] );\n}\n```","source":"_posts/print-stacktrace-in-errorlog.md","raw":"---\nlayout: post\ntitle: \"Print Stack Trace in error log\"\ndate:   2016-02-05\ndescription: Print Stack Trace in error log\ncategories: PHP\ntags: php\n---\n\n```\nforeach ( debug_backtrace() as $key => $value ) {\n\t$function = @$value['function'];\n\tif( isset( $value['class'] ) )\n\t\t$function = $value['class'] . '::' . $function;\n\t//error_log( \"** \" . $key . \". \" . $function . \"( \" . str_replace( array(\"\\n\",\"\\t\",' ','(',')'), '', print_r( $value['args'], true ) ) . \" )\" );\n\t//error_log( \"** \" . $key . \". \" . $function . \"( \" . implode( ', ', @$value['args'] ) . \" )\" );\n\terror_log( \"** \" . $key . \". \" . $function . \"( \" . serialize( @$value['args'] ) . \" )\" );\n\terror_log( \"** FILE: \" . @$value['file'] . \":\" . @$value['line'] );\n}\n```","slug":"print-stacktrace-in-errorlog","published":1,"updated":"2020-06-14T15:57:16.330Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13e003omp842g2l8kjl","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foreach ( debug_backtrace() as $key &#x3D;&gt; $value ) &#123;</span><br><span class=\"line\">\t$function &#x3D; @$value[&#39;function&#39;];</span><br><span class=\"line\">\tif( isset( $value[&#39;class&#39;] ) )</span><br><span class=\"line\">\t\t$function &#x3D; $value[&#39;class&#39;] . &#39;::&#39; . $function;</span><br><span class=\"line\">\t&#x2F;&#x2F;error_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . str_replace( array(&quot;\\n&quot;,&quot;\\t&quot;,&#39; &#39;,&#39;(&#39;,&#39;)&#39;), &#39;&#39;, print_r( $value[&#39;args&#39;], true ) ) . &quot; )&quot; );</span><br><span class=\"line\">\t&#x2F;&#x2F;error_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . implode( &#39;, &#39;, @$value[&#39;args&#39;] ) . &quot; )&quot; );</span><br><span class=\"line\">\terror_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . serialize( @$value[&#39;args&#39;] ) . &quot; )&quot; );</span><br><span class=\"line\">\terror_log( &quot;** FILE: &quot; . @$value[&#39;file&#39;] . &quot;:&quot; . @$value[&#39;line&#39;] );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foreach ( debug_backtrace() as $key &#x3D;&gt; $value ) &#123;</span><br><span class=\"line\">\t$function &#x3D; @$value[&#39;function&#39;];</span><br><span class=\"line\">\tif( isset( $value[&#39;class&#39;] ) )</span><br><span class=\"line\">\t\t$function &#x3D; $value[&#39;class&#39;] . &#39;::&#39; . $function;</span><br><span class=\"line\">\t&#x2F;&#x2F;error_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . str_replace( array(&quot;\\n&quot;,&quot;\\t&quot;,&#39; &#39;,&#39;(&#39;,&#39;)&#39;), &#39;&#39;, print_r( $value[&#39;args&#39;], true ) ) . &quot; )&quot; );</span><br><span class=\"line\">\t&#x2F;&#x2F;error_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . implode( &#39;, &#39;, @$value[&#39;args&#39;] ) . &quot; )&quot; );</span><br><span class=\"line\">\terror_log( &quot;** &quot; . $key . &quot;. &quot; . $function . &quot;( &quot; . serialize( @$value[&#39;args&#39;] ) . &quot; )&quot; );</span><br><span class=\"line\">\terror_log( &quot;** FILE: &quot; . @$value[&#39;file&#39;] . &quot;:&quot; . @$value[&#39;line&#39;] );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"How to upgrade php 5.6 in ubuntu14","date":"2016-01-13T16:00:00.000Z","description":"How to upgrade php 5.6 in ubuntu14","_content":"\n```\nsudo apt-get install software-properties-common\nsudo add-apt-repository ppa:ondrej/php5-5.6\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install php5\n```\n","source":"_posts/ubuntu-upgrade-php56.md","raw":"---\nlayout: post\ntitle: \"How to upgrade php 5.6 in ubuntu14\"\ndate:   2016-01-14\ndescription: How to upgrade php 5.6 in ubuntu14\ncategories: Linux\ntags: php\n---\n\n```\nsudo apt-get install software-properties-common\nsudo add-apt-repository ppa:ondrej/php5-5.6\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install php5\n```\n","slug":"ubuntu-upgrade-php56","published":1,"updated":"2020-06-14T15:57:16.321Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13g003rmp8408dschxr","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install software-properties-common</span><br><span class=\"line\">sudo add-apt-repository ppa:ondrej&#x2F;php5-5.6</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br><span class=\"line\">sudo apt-get install php5</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install software-properties-common</span><br><span class=\"line\">sudo add-apt-repository ppa:ondrej&#x2F;php5-5.6</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br><span class=\"line\">sudo apt-get install php5</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"ubuntu内核升级","date":"2015-08-28T16:00:00.000Z","description":"ubuntu内核升级","_content":"\n在一台Ubuntu机器上升级内核，步骤如下：\n## 准备\n1. 先从[kernel](http://www.kernel.org/)网站上下载稳定版的内核\n2. 拥有root权限\n3. 将下载后的内核文件解压缩到/usr/src/目录下\n4. 进入解压后的目录，如/usr/src/linux-4.1.6/\n\n## 配置\n1. 运行：make mrproper。该命令的功能在于清除当前目录下残留的.config和.o文件，这些文件一般是以前编译时未清理而残留的。而对于第一次编译的代码来说，不存在这些残留文件，所以可以略过此步，但是如果该源代码以前被编译过，那么强烈建议执行此命令，否则后面可能会出现未知的问题。\n2. 配置编译选项：作为操作系统的内核，其内容和功能必然非常繁杂，包括处理器调度，内存管理，文件系统管理，进程通讯以及设备管理等等，而对于不同的硬件，其配置选项也不相同，所以在编译源代码之前必须设置编译选项。这一步应该是升级内核整个过程中最有技术含量的，因为要根据自己的需要正确选择yes or no需要对计算机方方面面的知识都有所了解。但是这里的选项实在是太多了，大概有几百项之多，而且很多选项不是很明白。简便的方法就是make menuconfig 或者make xconfig。我使用的是make menuconfig，但是前提条件是要装ncurses。\n\t* [ncurses](http://ftp.gnu.org/pub/gnu/ncurses/)下载，可以放到任何目录进行安装：\n\t\n\t```\n\ttar -xvf ncurses<version>.tar.gz #解压缩并且释放 文件包\n\tcd ncurses<version> #进入解压缩的目录（注意版本）\n\t./configure #按照你的系统环境制作安装配置文件\n\tmake #编译源代码并且编译NCURSES库\n\tsu root #切换到root用户环境\n\tmake install #安装编译好的NCURSES库\n\t```\n\t* 在make menuconfig过程中也会有一些选项需要你来设置 \\* , y, n 或者m，选择 \\* 表示选项中的内容被直接编入内核中，选择m表示选项中的内容不编入内核，而只是编成独立的module，用到时才调用。\n\t* ok， 在当前文件路径下，输入命令：\n\t\t\n\t```\n\tmake menuconfig(或者用 make xconfig，我没有用)\n\t```\n\t* 根据菜单提示，选择编译配置选项，并保存配置文件为.config(也可以直接复制现有的.config文件)\n\n3. 确定依赖性：根据以往的经验，这一步是必须的，但是这次编译的时候，系统提醒我没必须要执行这个命令：\n\t\n\t```\n\tmake dep\n\t```\n如果用现有的.config文件，这里会有很多内核新增加的驱动和功能让你确认是否编入内核中，这个你就自己看着输入y/n/m/?吧！\n\n4. 清除编译中间文件\n\t\n\t```\n\tmake clean\n\t```\n**执行这步前最好确认一下机器内存，我第一次实验，虚拟机内存只有512M，编译后出现内存不足的错误。后把内存调整至2G，升级过程顺利执行。**\n5. 生成新内核就是把配置过程中，我们选中编入内核中的程序编译链接生产linux内核，输入命令：\n\t\n\t```\n\tmake bzImage\n\t```\n6. 生成modules: 和上步差不多，就是把配置过程中，我们选中编成modules的程序编译链接成modules，输入命令：\n\t\n\t```\n\tmake modules\n\t```\n7. 安装modules: 就是把刚才编译生产的modules拷到系统文件夹下，以供新内核调用。输入命令：\n\t\n\t```\n\tmake modules_install\n\t```\n一切都自动做好了。\n\n8. 建立要载入ramdisk的映像文件: 如果linux系统安装在scsi磁盘上，这步是必须的，否则可以跳过。我的linux是装在vmware上的，用的是虚拟的scsi磁盘，所以必须 要这一步。输入命令：\n\t\n\t```\n\tmkinitramfs -o /boot/initrd-linux3.3.4.img 3.3.4\n\t```\n如果你的linux不是ubuntu，而是其他的发行版本，那么使用的命令可能不是mkinitramfs，而是mkinitrd，但功能和用法类似。\n\n## 安装内核\n\n1. 安装内核\n```\nmake install\n```\n此时系统会把linux内核的镜像文件还有System.map考入到/boot下，然后会自动生成引导菜单。\n\n2. 配置grub引导程序\n\n既然新的内核编译并安装好了，那么我们要配置系统的引导程序用新内核正确引导，这一步我没做任何修改。默认是从新内核镜像启动系统。\n\n3. 敲下reboot，系统启动后，从grub菜单中选中新内核引导linux，怎么样，系统启动的鼓声响了吧！进入后用uname -a看看是否新内核。\n\n## 删除旧内核文件\n\n1. 查看一下当前内核版本：uname -a\n2. 查看一下当前系统内的所有内核文件：dpkg --get-selections|grep linux \n3. 删除内核文件：\n\n```\nsudo apt-get remove linux-image-3.2.0-24*\n```\n4. 另外一条命令： \n\n```\nsudo aptitude purge ~ilinux-image-.*\\(\\!'uname -r'\\)\n```","source":"_posts/ubuntu内核升级.md","raw":"---\nlayout: post\ntitle: \"ubuntu内核升级\"\ndate:   2015-08-29\ndescription: ubuntu内核升级\ncategories: Linux\ntags: linux\n---\n\n在一台Ubuntu机器上升级内核，步骤如下：\n## 准备\n1. 先从[kernel](http://www.kernel.org/)网站上下载稳定版的内核\n2. 拥有root权限\n3. 将下载后的内核文件解压缩到/usr/src/目录下\n4. 进入解压后的目录，如/usr/src/linux-4.1.6/\n\n## 配置\n1. 运行：make mrproper。该命令的功能在于清除当前目录下残留的.config和.o文件，这些文件一般是以前编译时未清理而残留的。而对于第一次编译的代码来说，不存在这些残留文件，所以可以略过此步，但是如果该源代码以前被编译过，那么强烈建议执行此命令，否则后面可能会出现未知的问题。\n2. 配置编译选项：作为操作系统的内核，其内容和功能必然非常繁杂，包括处理器调度，内存管理，文件系统管理，进程通讯以及设备管理等等，而对于不同的硬件，其配置选项也不相同，所以在编译源代码之前必须设置编译选项。这一步应该是升级内核整个过程中最有技术含量的，因为要根据自己的需要正确选择yes or no需要对计算机方方面面的知识都有所了解。但是这里的选项实在是太多了，大概有几百项之多，而且很多选项不是很明白。简便的方法就是make menuconfig 或者make xconfig。我使用的是make menuconfig，但是前提条件是要装ncurses。\n\t* [ncurses](http://ftp.gnu.org/pub/gnu/ncurses/)下载，可以放到任何目录进行安装：\n\t\n\t```\n\ttar -xvf ncurses<version>.tar.gz #解压缩并且释放 文件包\n\tcd ncurses<version> #进入解压缩的目录（注意版本）\n\t./configure #按照你的系统环境制作安装配置文件\n\tmake #编译源代码并且编译NCURSES库\n\tsu root #切换到root用户环境\n\tmake install #安装编译好的NCURSES库\n\t```\n\t* 在make menuconfig过程中也会有一些选项需要你来设置 \\* , y, n 或者m，选择 \\* 表示选项中的内容被直接编入内核中，选择m表示选项中的内容不编入内核，而只是编成独立的module，用到时才调用。\n\t* ok， 在当前文件路径下，输入命令：\n\t\t\n\t```\n\tmake menuconfig(或者用 make xconfig，我没有用)\n\t```\n\t* 根据菜单提示，选择编译配置选项，并保存配置文件为.config(也可以直接复制现有的.config文件)\n\n3. 确定依赖性：根据以往的经验，这一步是必须的，但是这次编译的时候，系统提醒我没必须要执行这个命令：\n\t\n\t```\n\tmake dep\n\t```\n如果用现有的.config文件，这里会有很多内核新增加的驱动和功能让你确认是否编入内核中，这个你就自己看着输入y/n/m/?吧！\n\n4. 清除编译中间文件\n\t\n\t```\n\tmake clean\n\t```\n**执行这步前最好确认一下机器内存，我第一次实验，虚拟机内存只有512M，编译后出现内存不足的错误。后把内存调整至2G，升级过程顺利执行。**\n5. 生成新内核就是把配置过程中，我们选中编入内核中的程序编译链接生产linux内核，输入命令：\n\t\n\t```\n\tmake bzImage\n\t```\n6. 生成modules: 和上步差不多，就是把配置过程中，我们选中编成modules的程序编译链接成modules，输入命令：\n\t\n\t```\n\tmake modules\n\t```\n7. 安装modules: 就是把刚才编译生产的modules拷到系统文件夹下，以供新内核调用。输入命令：\n\t\n\t```\n\tmake modules_install\n\t```\n一切都自动做好了。\n\n8. 建立要载入ramdisk的映像文件: 如果linux系统安装在scsi磁盘上，这步是必须的，否则可以跳过。我的linux是装在vmware上的，用的是虚拟的scsi磁盘，所以必须 要这一步。输入命令：\n\t\n\t```\n\tmkinitramfs -o /boot/initrd-linux3.3.4.img 3.3.4\n\t```\n如果你的linux不是ubuntu，而是其他的发行版本，那么使用的命令可能不是mkinitramfs，而是mkinitrd，但功能和用法类似。\n\n## 安装内核\n\n1. 安装内核\n```\nmake install\n```\n此时系统会把linux内核的镜像文件还有System.map考入到/boot下，然后会自动生成引导菜单。\n\n2. 配置grub引导程序\n\n既然新的内核编译并安装好了，那么我们要配置系统的引导程序用新内核正确引导，这一步我没做任何修改。默认是从新内核镜像启动系统。\n\n3. 敲下reboot，系统启动后，从grub菜单中选中新内核引导linux，怎么样，系统启动的鼓声响了吧！进入后用uname -a看看是否新内核。\n\n## 删除旧内核文件\n\n1. 查看一下当前内核版本：uname -a\n2. 查看一下当前系统内的所有内核文件：dpkg --get-selections|grep linux \n3. 删除内核文件：\n\n```\nsudo apt-get remove linux-image-3.2.0-24*\n```\n4. 另外一条命令： \n\n```\nsudo aptitude purge ~ilinux-image-.*\\(\\!'uname -r'\\)\n```","slug":"ubuntu内核升级","published":1,"updated":"2020-06-14T15:57:16.310Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13j003vmp84ee9c66k8","content":"<p>在一台Ubuntu机器上升级内核，步骤如下：</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ol>\n<li>先从<a href=\"http://www.kernel.org/\" target=\"_blank\" rel=\"noopener\">kernel</a>网站上下载稳定版的内核</li>\n<li>拥有root权限</li>\n<li>将下载后的内核文件解压缩到/usr/src/目录下</li>\n<li>进入解压后的目录，如/usr/src/linux-4.1.6/</li>\n</ol>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ol>\n<li><p>运行：make mrproper。该命令的功能在于清除当前目录下残留的.config和.o文件，这些文件一般是以前编译时未清理而残留的。而对于第一次编译的代码来说，不存在这些残留文件，所以可以略过此步，但是如果该源代码以前被编译过，那么强烈建议执行此命令，否则后面可能会出现未知的问题。</p>\n</li>\n<li><p>配置编译选项：作为操作系统的内核，其内容和功能必然非常繁杂，包括处理器调度，内存管理，文件系统管理，进程通讯以及设备管理等等，而对于不同的硬件，其配置选项也不相同，所以在编译源代码之前必须设置编译选项。这一步应该是升级内核整个过程中最有技术含量的，因为要根据自己的需要正确选择yes or no需要对计算机方方面面的知识都有所了解。但是这里的选项实在是太多了，大概有几百项之多，而且很多选项不是很明白。简便的方法就是make menuconfig 或者make xconfig。我使用的是make menuconfig，但是前提条件是要装ncurses。</p>\n<ul>\n<li><p><a href=\"http://ftp.gnu.org/pub/gnu/ncurses/\" target=\"_blank\" rel=\"noopener\">ncurses</a>下载，可以放到任何目录进行安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf ncurses&lt;version&gt;.tar.gz #解压缩并且释放 文件包</span><br><span class=\"line\">cd ncurses&lt;version&gt; #进入解压缩的目录（注意版本）</span><br><span class=\"line\">.&#x2F;configure #按照你的系统环境制作安装配置文件</span><br><span class=\"line\">make #编译源代码并且编译NCURSES库</span><br><span class=\"line\">su root #切换到root用户环境</span><br><span class=\"line\">make install #安装编译好的NCURSES库</span><br></pre></td></tr></table></figure></li>\n<li><p>在make menuconfig过程中也会有一些选项需要你来设置 * , y, n 或者m，选择 * 表示选项中的内容被直接编入内核中，选择m表示选项中的内容不编入内核，而只是编成独立的module，用到时才调用。</p>\n</li>\n<li><p>ok， 在当前文件路径下，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make menuconfig(或者用 make xconfig，我没有用)</span><br></pre></td></tr></table></figure></li>\n<li><p>根据菜单提示，选择编译配置选项，并保存配置文件为.config(也可以直接复制现有的.config文件)</p>\n</li>\n</ul>\n</li>\n<li><p>确定依赖性：根据以往的经验，这一步是必须的，但是这次编译的时候，系统提醒我没必须要执行这个命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make dep</span><br></pre></td></tr></table></figure>\n<p>如果用现有的.config文件，这里会有很多内核新增加的驱动和功能让你确认是否编入内核中，这个你就自己看着输入y/n/m/?吧！</p>\n</li>\n<li><p>清除编译中间文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make clean</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>执行这步前最好确认一下机器内存，我第一次实验，虚拟机内存只有512M，编译后出现内存不足的错误。后把内存调整至2G，升级过程顺利执行。</strong><br>5. 生成新内核就是把配置过程中，我们选中编入内核中的程序编译链接生产linux内核，输入命令：</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make bzImage</span><br></pre></td></tr></table></figure></code></pre><ol start=\"6\">\n<li><p>生成modules: 和上步差不多，就是把配置过程中，我们选中编成modules的程序编译链接成modules，输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make modules</span><br></pre></td></tr></table></figure></li>\n<li><p>安装modules: 就是把刚才编译生产的modules拷到系统文件夹下，以供新内核调用。输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make modules_install</span><br></pre></td></tr></table></figure>\n<p>一切都自动做好了。</p>\n</li>\n<li><p>建立要载入ramdisk的映像文件: 如果linux系统安装在scsi磁盘上，这步是必须的，否则可以跳过。我的linux是装在vmware上的，用的是虚拟的scsi磁盘，所以必须 要这一步。输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkinitramfs -o &#x2F;boot&#x2F;initrd-linux3.3.4.img 3.3.4</span><br></pre></td></tr></table></figure>\n<p>如果你的linux不是ubuntu，而是其他的发行版本，那么使用的命令可能不是mkinitramfs，而是mkinitrd，但功能和用法类似。</p>\n</li>\n</ol>\n<h2 id=\"安装内核\"><a href=\"#安装内核\" class=\"headerlink\" title=\"安装内核\"></a>安装内核</h2><ol>\n<li><p>安装内核</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>此时系统会把linux内核的镜像文件还有System.map考入到/boot下，然后会自动生成引导菜单。</p>\n</li>\n<li><p>配置grub引导程序</p>\n</li>\n</ol>\n<p>既然新的内核编译并安装好了，那么我们要配置系统的引导程序用新内核正确引导，这一步我没做任何修改。默认是从新内核镜像启动系统。</p>\n<ol start=\"3\">\n<li>敲下reboot，系统启动后，从grub菜单中选中新内核引导linux，怎么样，系统启动的鼓声响了吧！进入后用uname -a看看是否新内核。</li>\n</ol>\n<h2 id=\"删除旧内核文件\"><a href=\"#删除旧内核文件\" class=\"headerlink\" title=\"删除旧内核文件\"></a>删除旧内核文件</h2><ol>\n<li>查看一下当前内核版本：uname -a</li>\n<li>查看一下当前系统内的所有内核文件：dpkg –get-selections|grep linux </li>\n<li>删除内核文件：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove linux-image-3.2.0-24*</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>另外一条命令： </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo aptitude purge ~ilinux-image-.*\\(\\!&#39;uname -r&#39;\\)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在一台Ubuntu机器上升级内核，步骤如下：</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ol>\n<li>先从<a href=\"http://www.kernel.org/\" target=\"_blank\" rel=\"noopener\">kernel</a>网站上下载稳定版的内核</li>\n<li>拥有root权限</li>\n<li>将下载后的内核文件解压缩到/usr/src/目录下</li>\n<li>进入解压后的目录，如/usr/src/linux-4.1.6/</li>\n</ol>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ol>\n<li><p>运行：make mrproper。该命令的功能在于清除当前目录下残留的.config和.o文件，这些文件一般是以前编译时未清理而残留的。而对于第一次编译的代码来说，不存在这些残留文件，所以可以略过此步，但是如果该源代码以前被编译过，那么强烈建议执行此命令，否则后面可能会出现未知的问题。</p>\n</li>\n<li><p>配置编译选项：作为操作系统的内核，其内容和功能必然非常繁杂，包括处理器调度，内存管理，文件系统管理，进程通讯以及设备管理等等，而对于不同的硬件，其配置选项也不相同，所以在编译源代码之前必须设置编译选项。这一步应该是升级内核整个过程中最有技术含量的，因为要根据自己的需要正确选择yes or no需要对计算机方方面面的知识都有所了解。但是这里的选项实在是太多了，大概有几百项之多，而且很多选项不是很明白。简便的方法就是make menuconfig 或者make xconfig。我使用的是make menuconfig，但是前提条件是要装ncurses。</p>\n<ul>\n<li><p><a href=\"http://ftp.gnu.org/pub/gnu/ncurses/\" target=\"_blank\" rel=\"noopener\">ncurses</a>下载，可以放到任何目录进行安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf ncurses&lt;version&gt;.tar.gz #解压缩并且释放 文件包</span><br><span class=\"line\">cd ncurses&lt;version&gt; #进入解压缩的目录（注意版本）</span><br><span class=\"line\">.&#x2F;configure #按照你的系统环境制作安装配置文件</span><br><span class=\"line\">make #编译源代码并且编译NCURSES库</span><br><span class=\"line\">su root #切换到root用户环境</span><br><span class=\"line\">make install #安装编译好的NCURSES库</span><br></pre></td></tr></table></figure></li>\n<li><p>在make menuconfig过程中也会有一些选项需要你来设置 * , y, n 或者m，选择 * 表示选项中的内容被直接编入内核中，选择m表示选项中的内容不编入内核，而只是编成独立的module，用到时才调用。</p>\n</li>\n<li><p>ok， 在当前文件路径下，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make menuconfig(或者用 make xconfig，我没有用)</span><br></pre></td></tr></table></figure></li>\n<li><p>根据菜单提示，选择编译配置选项，并保存配置文件为.config(也可以直接复制现有的.config文件)</p>\n</li>\n</ul>\n</li>\n<li><p>确定依赖性：根据以往的经验，这一步是必须的，但是这次编译的时候，系统提醒我没必须要执行这个命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make dep</span><br></pre></td></tr></table></figure>\n<p>如果用现有的.config文件，这里会有很多内核新增加的驱动和功能让你确认是否编入内核中，这个你就自己看着输入y/n/m/?吧！</p>\n</li>\n<li><p>清除编译中间文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make clean</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>执行这步前最好确认一下机器内存，我第一次实验，虚拟机内存只有512M，编译后出现内存不足的错误。后把内存调整至2G，升级过程顺利执行。</strong><br>5. 生成新内核就是把配置过程中，我们选中编入内核中的程序编译链接生产linux内核，输入命令：</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make bzImage</span><br></pre></td></tr></table></figure></code></pre><ol start=\"6\">\n<li><p>生成modules: 和上步差不多，就是把配置过程中，我们选中编成modules的程序编译链接成modules，输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make modules</span><br></pre></td></tr></table></figure></li>\n<li><p>安装modules: 就是把刚才编译生产的modules拷到系统文件夹下，以供新内核调用。输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make modules_install</span><br></pre></td></tr></table></figure>\n<p>一切都自动做好了。</p>\n</li>\n<li><p>建立要载入ramdisk的映像文件: 如果linux系统安装在scsi磁盘上，这步是必须的，否则可以跳过。我的linux是装在vmware上的，用的是虚拟的scsi磁盘，所以必须 要这一步。输入命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkinitramfs -o &#x2F;boot&#x2F;initrd-linux3.3.4.img 3.3.4</span><br></pre></td></tr></table></figure>\n<p>如果你的linux不是ubuntu，而是其他的发行版本，那么使用的命令可能不是mkinitramfs，而是mkinitrd，但功能和用法类似。</p>\n</li>\n</ol>\n<h2 id=\"安装内核\"><a href=\"#安装内核\" class=\"headerlink\" title=\"安装内核\"></a>安装内核</h2><ol>\n<li><p>安装内核</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>此时系统会把linux内核的镜像文件还有System.map考入到/boot下，然后会自动生成引导菜单。</p>\n</li>\n<li><p>配置grub引导程序</p>\n</li>\n</ol>\n<p>既然新的内核编译并安装好了，那么我们要配置系统的引导程序用新内核正确引导，这一步我没做任何修改。默认是从新内核镜像启动系统。</p>\n<ol start=\"3\">\n<li>敲下reboot，系统启动后，从grub菜单中选中新内核引导linux，怎么样，系统启动的鼓声响了吧！进入后用uname -a看看是否新内核。</li>\n</ol>\n<h2 id=\"删除旧内核文件\"><a href=\"#删除旧内核文件\" class=\"headerlink\" title=\"删除旧内核文件\"></a>删除旧内核文件</h2><ol>\n<li>查看一下当前内核版本：uname -a</li>\n<li>查看一下当前系统内的所有内核文件：dpkg –get-selections|grep linux </li>\n<li>删除内核文件：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove linux-image-3.2.0-24*</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>另外一条命令： </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo aptitude purge ~ilinux-image-.*\\(\\!&#39;uname -r&#39;\\)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Shadowsocks","date":"2015-08-25T16:00:00.000Z","description":"Shadowsocks","_content":"\n之前常常用ppptp在vps上搭建vpn，或者购买vpn。今天看到一篇文章将如何搭建shadowsocks，突然想起[知名博主](http://stenote.com)强力推荐的vpn工具。于是按照文档试了一下。果然很easy。\n\n* 首先在vps上安装shadowsocks服务端，脚本如下：\n\n```\n$ sudo apt-get install python-pip\n$ pip install shadowsocks\n// 注意以下的 PORT 和 PASSWORD 自定义。\n$ ssserver -p PORT -k PASSWORD -m rc4-md5 -d start\n```\n* 安装shadowsocks客户端: [shadowsocks](http://shadowsocks.org/en/index.html)\n* 启动，客户端，进行简单设置，OK了。\n\n如果设置多用户的话，维护 /etc/shadowsocks.json：\n\n```\n{\n    \"server\":\"VPS服务器的IP\",\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n         // 设置多个用户\n         \"9000\":\"PASSWORD9000\",\n         \"9001\":\"PASSWORD9001\",\n         \"9002\":\"PASSWORD9002\",\n         \"9003\":\"PASSWORD9003\",\n         \"9004\":\"PASSWORD9004\"\n    },\n    \"timeout\":300,\n    \"method\":\"rc4-md5\",\n    \"fast_open\": false\n}\n```\n","source":"_posts/shadowsocks.md","raw":"---\nlayout: post\ntitle: \"Shadowsocks\"\ndate:   2015-08-26\ndescription: Shadowsocks\ncategories: VPN\ntags: vpn\n---\n\n之前常常用ppptp在vps上搭建vpn，或者购买vpn。今天看到一篇文章将如何搭建shadowsocks，突然想起[知名博主](http://stenote.com)强力推荐的vpn工具。于是按照文档试了一下。果然很easy。\n\n* 首先在vps上安装shadowsocks服务端，脚本如下：\n\n```\n$ sudo apt-get install python-pip\n$ pip install shadowsocks\n// 注意以下的 PORT 和 PASSWORD 自定义。\n$ ssserver -p PORT -k PASSWORD -m rc4-md5 -d start\n```\n* 安装shadowsocks客户端: [shadowsocks](http://shadowsocks.org/en/index.html)\n* 启动，客户端，进行简单设置，OK了。\n\n如果设置多用户的话，维护 /etc/shadowsocks.json：\n\n```\n{\n    \"server\":\"VPS服务器的IP\",\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n         // 设置多个用户\n         \"9000\":\"PASSWORD9000\",\n         \"9001\":\"PASSWORD9001\",\n         \"9002\":\"PASSWORD9002\",\n         \"9003\":\"PASSWORD9003\",\n         \"9004\":\"PASSWORD9004\"\n    },\n    \"timeout\":300,\n    \"method\":\"rc4-md5\",\n    \"fast_open\": false\n}\n```\n","slug":"shadowsocks","published":1,"updated":"2020-06-14T15:57:16.318Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13n003zmp84g18sb1zv","content":"<p>之前常常用ppptp在vps上搭建vpn，或者购买vpn。今天看到一篇文章将如何搭建shadowsocks，突然想起<a href=\"http://stenote.com\" target=\"_blank\" rel=\"noopener\">知名博主</a>强力推荐的vpn工具。于是按照文档试了一下。果然很easy。</p>\n<ul>\n<li>首先在vps上安装shadowsocks服务端，脚本如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install python-pip</span><br><span class=\"line\">$ pip install shadowsocks</span><br><span class=\"line\">&#x2F;&#x2F; 注意以下的 PORT 和 PASSWORD 自定义。</span><br><span class=\"line\">$ ssserver -p PORT -k PASSWORD -m rc4-md5 -d start</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装shadowsocks客户端: <a href=\"http://shadowsocks.org/en/index.html\" target=\"_blank\" rel=\"noopener\">shadowsocks</a></li>\n<li>启动，客户端，进行简单设置，OK了。</li>\n</ul>\n<p>如果设置多用户的话，维护 /etc/shadowsocks.json：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;server&quot;:&quot;VPS服务器的IP&quot;,</span><br><span class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">    &quot;local_port&quot;:1080,</span><br><span class=\"line\">    &quot;port_password&quot;:&#123;</span><br><span class=\"line\">         &#x2F;&#x2F; 设置多个用户</span><br><span class=\"line\">         &quot;9000&quot;:&quot;PASSWORD9000&quot;,</span><br><span class=\"line\">         &quot;9001&quot;:&quot;PASSWORD9001&quot;,</span><br><span class=\"line\">         &quot;9002&quot;:&quot;PASSWORD9002&quot;,</span><br><span class=\"line\">         &quot;9003&quot;:&quot;PASSWORD9003&quot;,</span><br><span class=\"line\">         &quot;9004&quot;:&quot;PASSWORD9004&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;timeout&quot;:300,</span><br><span class=\"line\">    &quot;method&quot;:&quot;rc4-md5&quot;,</span><br><span class=\"line\">    &quot;fast_open&quot;: false</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>之前常常用ppptp在vps上搭建vpn，或者购买vpn。今天看到一篇文章将如何搭建shadowsocks，突然想起<a href=\"http://stenote.com\" target=\"_blank\" rel=\"noopener\">知名博主</a>强力推荐的vpn工具。于是按照文档试了一下。果然很easy。</p>\n<ul>\n<li>首先在vps上安装shadowsocks服务端，脚本如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install python-pip</span><br><span class=\"line\">$ pip install shadowsocks</span><br><span class=\"line\">&#x2F;&#x2F; 注意以下的 PORT 和 PASSWORD 自定义。</span><br><span class=\"line\">$ ssserver -p PORT -k PASSWORD -m rc4-md5 -d start</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装shadowsocks客户端: <a href=\"http://shadowsocks.org/en/index.html\" target=\"_blank\" rel=\"noopener\">shadowsocks</a></li>\n<li>启动，客户端，进行简单设置，OK了。</li>\n</ul>\n<p>如果设置多用户的话，维护 /etc/shadowsocks.json：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;server&quot;:&quot;VPS服务器的IP&quot;,</span><br><span class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">    &quot;local_port&quot;:1080,</span><br><span class=\"line\">    &quot;port_password&quot;:&#123;</span><br><span class=\"line\">         &#x2F;&#x2F; 设置多个用户</span><br><span class=\"line\">         &quot;9000&quot;:&quot;PASSWORD9000&quot;,</span><br><span class=\"line\">         &quot;9001&quot;:&quot;PASSWORD9001&quot;,</span><br><span class=\"line\">         &quot;9002&quot;:&quot;PASSWORD9002&quot;,</span><br><span class=\"line\">         &quot;9003&quot;:&quot;PASSWORD9003&quot;,</span><br><span class=\"line\">         &quot;9004&quot;:&quot;PASSWORD9004&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;timeout&quot;:300,</span><br><span class=\"line\">    &quot;method&quot;:&quot;rc4-md5&quot;,</span><br><span class=\"line\">    &quot;fast_open&quot;: false</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"vagrant","date":"2015-09-07T16:00:00.000Z","description":"vagrant","_content":"\n## Config\n* Config memory\n\t\n\t```\n\tconfig.vm.provider \"virtualbox\" do |v|\n  \t\tv.memory = 2048\n\tend\n\t```\n* Config IP\n\t\n\t```\n\tconfig.vm.network :private_network, ip:\"192.168.10.10\"\n\t```\n\t\n## Command\n\n```\n# vagrant init  初始化\n\n# vagrant status  查看虚拟机运行状态\n\n# vagrant up 启动虚拟机\n\n# vagrant halt  关闭虚拟化开发环境\n\n# vagrant reload 修改配置文件后，重启虚拟化开发环境\n\n# vagrant box list 查看当前可用的虚拟化开发环境\n\n# vagrant box remove boxname 删除指定的box环境\n\n# vagrant destroy 销毁虚拟机\n\n# vagrant package 当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box\n\n打包创建虚机\n\n1、打包虚拟机\nvagrant package\n\n2、当前目录就会生成package.box，之后新建虚拟机则可使用这个box。\n \nvagrant box add my_box ~/package.box\nvagrant init my_box\nvagrant up\n```\n\n## Some Question\n\n```\nailed to mount folders in Linux guest. This is usually because\n    the \"vboxsf\" file system is not available. Please verify that\n    the guest additions are properly installed in the guest and\n    can work properly. The command attempted was:\n \n    mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant  \n    mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant\n\n    The error output from the last command was:\n    /sbin/mount.vboxsf: mounting failed with the error: No such device\n```\n\n## Solution\n\n```\n在本机输入\nvagrant plugin install vagrant-vbguest\n\n进入虚拟机\nvagrant ssh\n\n输入\nsudo ln -s /opt/VBoxGuestAdditions-4.3.18/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions（VBoxGuestAdditions-4.3.18为版本号）\n\n更新内核\nyum update kernel \nsudo yum install  gcc dkms kernel-devel \n\n\n安装\nsudo /etc/init.d/vboxadd  setup\n\n退出\ncontrol+d\n\n重启\nvagrant reload\n\n..............[ok]\n```","source":"_posts/vagrant.md","raw":"---\nlayout: post\ntitle: \"vagrant\"\ndate:   2015-09-08\ndescription: vagrant\ncategories: VM\ntags: vm\n---\n\n## Config\n* Config memory\n\t\n\t```\n\tconfig.vm.provider \"virtualbox\" do |v|\n  \t\tv.memory = 2048\n\tend\n\t```\n* Config IP\n\t\n\t```\n\tconfig.vm.network :private_network, ip:\"192.168.10.10\"\n\t```\n\t\n## Command\n\n```\n# vagrant init  初始化\n\n# vagrant status  查看虚拟机运行状态\n\n# vagrant up 启动虚拟机\n\n# vagrant halt  关闭虚拟化开发环境\n\n# vagrant reload 修改配置文件后，重启虚拟化开发环境\n\n# vagrant box list 查看当前可用的虚拟化开发环境\n\n# vagrant box remove boxname 删除指定的box环境\n\n# vagrant destroy 销毁虚拟机\n\n# vagrant package 当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box\n\n打包创建虚机\n\n1、打包虚拟机\nvagrant package\n\n2、当前目录就会生成package.box，之后新建虚拟机则可使用这个box。\n \nvagrant box add my_box ~/package.box\nvagrant init my_box\nvagrant up\n```\n\n## Some Question\n\n```\nailed to mount folders in Linux guest. This is usually because\n    the \"vboxsf\" file system is not available. Please verify that\n    the guest additions are properly installed in the guest and\n    can work properly. The command attempted was:\n \n    mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant  \n    mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant\n\n    The error output from the last command was:\n    /sbin/mount.vboxsf: mounting failed with the error: No such device\n```\n\n## Solution\n\n```\n在本机输入\nvagrant plugin install vagrant-vbguest\n\n进入虚拟机\nvagrant ssh\n\n输入\nsudo ln -s /opt/VBoxGuestAdditions-4.3.18/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions（VBoxGuestAdditions-4.3.18为版本号）\n\n更新内核\nyum update kernel \nsudo yum install  gcc dkms kernel-devel \n\n\n安装\nsudo /etc/init.d/vboxadd  setup\n\n退出\ncontrol+d\n\n重启\nvagrant reload\n\n..............[ok]\n```","slug":"vagrant","published":1,"updated":"2020-06-14T15:57:16.333Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13o0043mp84gcqwf7z3","content":"<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><ul>\n<li><p>Config memory</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.provider &quot;virtualbox&quot; do |v|</span><br><span class=\"line\"> \t\tv.memory &#x3D; 2048</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></li>\n<li><p>Config IP</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.network :private_network, ip:&quot;192.168.10.10&quot;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Command\"><a href=\"#Command\" class=\"headerlink\" title=\"Command\"></a>Command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># vagrant init  初始化</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant status  查看虚拟机运行状态</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant up 启动虚拟机</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant halt  关闭虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant reload 修改配置文件后，重启虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant box list 查看当前可用的虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant box remove boxname 删除指定的box环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant destroy 销毁虚拟机</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant package 当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box</span><br><span class=\"line\"></span><br><span class=\"line\">打包创建虚机</span><br><span class=\"line\"></span><br><span class=\"line\">1、打包虚拟机</span><br><span class=\"line\">vagrant package</span><br><span class=\"line\"></span><br><span class=\"line\">2、当前目录就会生成package.box，之后新建虚拟机则可使用这个box。</span><br><span class=\"line\"> </span><br><span class=\"line\">vagrant box add my_box ~&#x2F;package.box</span><br><span class=\"line\">vagrant init my_box</span><br><span class=\"line\">vagrant up</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Some-Question\"><a href=\"#Some-Question\" class=\"headerlink\" title=\"Some Question\"></a>Some Question</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ailed to mount folders in Linux guest. This is usually because</span><br><span class=\"line\">    the &quot;vboxsf&quot; file system is not available. Please verify that</span><br><span class=\"line\">    the guest additions are properly installed in the guest and</span><br><span class=\"line\">    can work properly. The command attempted was:</span><br><span class=\"line\"> </span><br><span class=\"line\">    mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;getent group vagrant | cut -d: -f3&#96; vagrant &#x2F;vagrant  </span><br><span class=\"line\">    mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;id -g vagrant&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\"></span><br><span class=\"line\">    The error output from the last command was:</span><br><span class=\"line\">    &#x2F;sbin&#x2F;mount.vboxsf: mounting failed with the error: No such device</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在本机输入</span><br><span class=\"line\">vagrant plugin install vagrant-vbguest</span><br><span class=\"line\"></span><br><span class=\"line\">进入虚拟机</span><br><span class=\"line\">vagrant ssh</span><br><span class=\"line\"></span><br><span class=\"line\">输入</span><br><span class=\"line\">sudo ln -s &#x2F;opt&#x2F;VBoxGuestAdditions-4.3.18&#x2F;lib&#x2F;VBoxGuestAdditions &#x2F;usr&#x2F;lib&#x2F;VBoxGuestAdditions（VBoxGuestAdditions-4.3.18为版本号）</span><br><span class=\"line\"></span><br><span class=\"line\">更新内核</span><br><span class=\"line\">yum update kernel </span><br><span class=\"line\">sudo yum install  gcc dkms kernel-devel </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">安装</span><br><span class=\"line\">sudo &#x2F;etc&#x2F;init.d&#x2F;vboxadd  setup</span><br><span class=\"line\"></span><br><span class=\"line\">退出</span><br><span class=\"line\">control+d</span><br><span class=\"line\"></span><br><span class=\"line\">重启</span><br><span class=\"line\">vagrant reload</span><br><span class=\"line\"></span><br><span class=\"line\">..............[ok]</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><ul>\n<li><p>Config memory</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.provider &quot;virtualbox&quot; do |v|</span><br><span class=\"line\"> \t\tv.memory &#x3D; 2048</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></li>\n<li><p>Config IP</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.network :private_network, ip:&quot;192.168.10.10&quot;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Command\"><a href=\"#Command\" class=\"headerlink\" title=\"Command\"></a>Command</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># vagrant init  初始化</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant status  查看虚拟机运行状态</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant up 启动虚拟机</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant halt  关闭虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant reload 修改配置文件后，重启虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant box list 查看当前可用的虚拟化开发环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant box remove boxname 删除指定的box环境</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant destroy 销毁虚拟机</span><br><span class=\"line\"></span><br><span class=\"line\"># vagrant package 当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box</span><br><span class=\"line\"></span><br><span class=\"line\">打包创建虚机</span><br><span class=\"line\"></span><br><span class=\"line\">1、打包虚拟机</span><br><span class=\"line\">vagrant package</span><br><span class=\"line\"></span><br><span class=\"line\">2、当前目录就会生成package.box，之后新建虚拟机则可使用这个box。</span><br><span class=\"line\"> </span><br><span class=\"line\">vagrant box add my_box ~&#x2F;package.box</span><br><span class=\"line\">vagrant init my_box</span><br><span class=\"line\">vagrant up</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Some-Question\"><a href=\"#Some-Question\" class=\"headerlink\" title=\"Some Question\"></a>Some Question</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ailed to mount folders in Linux guest. This is usually because</span><br><span class=\"line\">    the &quot;vboxsf&quot; file system is not available. Please verify that</span><br><span class=\"line\">    the guest additions are properly installed in the guest and</span><br><span class=\"line\">    can work properly. The command attempted was:</span><br><span class=\"line\"> </span><br><span class=\"line\">    mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;getent group vagrant | cut -d: -f3&#96; vagrant &#x2F;vagrant  </span><br><span class=\"line\">    mount -t vboxsf -o uid&#x3D;&#96;id -u vagrant&#96;,gid&#x3D;&#96;id -g vagrant&#96; vagrant &#x2F;vagrant</span><br><span class=\"line\"></span><br><span class=\"line\">    The error output from the last command was:</span><br><span class=\"line\">    &#x2F;sbin&#x2F;mount.vboxsf: mounting failed with the error: No such device</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在本机输入</span><br><span class=\"line\">vagrant plugin install vagrant-vbguest</span><br><span class=\"line\"></span><br><span class=\"line\">进入虚拟机</span><br><span class=\"line\">vagrant ssh</span><br><span class=\"line\"></span><br><span class=\"line\">输入</span><br><span class=\"line\">sudo ln -s &#x2F;opt&#x2F;VBoxGuestAdditions-4.3.18&#x2F;lib&#x2F;VBoxGuestAdditions &#x2F;usr&#x2F;lib&#x2F;VBoxGuestAdditions（VBoxGuestAdditions-4.3.18为版本号）</span><br><span class=\"line\"></span><br><span class=\"line\">更新内核</span><br><span class=\"line\">yum update kernel </span><br><span class=\"line\">sudo yum install  gcc dkms kernel-devel </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">安装</span><br><span class=\"line\">sudo &#x2F;etc&#x2F;init.d&#x2F;vboxadd  setup</span><br><span class=\"line\"></span><br><span class=\"line\">退出</span><br><span class=\"line\">control+d</span><br><span class=\"line\"></span><br><span class=\"line\">重启</span><br><span class=\"line\">vagrant reload</span><br><span class=\"line\"></span><br><span class=\"line\">..............[ok]</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"使用Console调试Js","date":"2015-03-23T16:00:00.000Z","description":"使用Console调试Js","_content":"\nConsole 是用于显示 JS和 DOM 对象信息的单独窗口。并且向 JS 中注入1个 console 对象，使用该对象 可以输出信息到 Console 窗口中。Firefox和Chrome对此对象支持的很好。\n\n**console.log** 可以打印出一些log信息\n\n**console.debug，info，warn，error** 同样可以打印log信息，但在显示颜色上有一些变化\n\n**console.clear** 可以用来清除console中的信息\n\n**console.trace** 可以查看当前函数的调用堆栈信息，即当前函数是如何调用的\n\n**console.group(object[, object, ...]), groupCollapsed, groupEnd** 用于把 log 等输出的信息进行分组，方便阅读查看。\n\n```\n   console.group('First group');\n   console.log('a');\n   console.log('b');\n   console.log('c');\n   console.groupEnd();\n   console.group('Second group');\n   console.log('1');\n   console.log('2');\n   console.log('3');\n   console.group('Embeded subgroup');\n   console.log('α');\n   console.log('β');\n   console.log('γ');\n   console.groupEnd(); \n```\n**console.time(name)/console.timeEnd(name)** 可以用来度量\n\n```\n   var slowInitializer = function() {\n       var collection = [];\n       for (var i = 20000000; i > 0 ; i--) {\n           collection.push(i);\n           if (i === 1000) {\n               console.time('Last iterations');\n           }\n       }\n       console.timeEnd('Last iterations');\n   };\n   console.time('Slow initializer');\n   slowInitializer();\n   console.timeEnd('Slow initializer');\n```\n\n**console.count()**可以用来计算标签被执行的次数\n\n```\n   $('#image').on('click', function() {\n       console.count('Click on my image');\n   });\n```\n输出：\n\n```\n   Click on my image : 1\n   Click on my image : 2\n   // [...]\n   Click on my image : 12\n```\n还有其他...\n","source":"_posts/使用Console调试Js.md","raw":"---\nlayout: post\ntitle: \"使用Console调试Js\"\ndate:   2015-03-24\ndescription: 使用Console调试Js\ncategories: Javascript\ntags: javascript\n---\n\nConsole 是用于显示 JS和 DOM 对象信息的单独窗口。并且向 JS 中注入1个 console 对象，使用该对象 可以输出信息到 Console 窗口中。Firefox和Chrome对此对象支持的很好。\n\n**console.log** 可以打印出一些log信息\n\n**console.debug，info，warn，error** 同样可以打印log信息，但在显示颜色上有一些变化\n\n**console.clear** 可以用来清除console中的信息\n\n**console.trace** 可以查看当前函数的调用堆栈信息，即当前函数是如何调用的\n\n**console.group(object[, object, ...]), groupCollapsed, groupEnd** 用于把 log 等输出的信息进行分组，方便阅读查看。\n\n```\n   console.group('First group');\n   console.log('a');\n   console.log('b');\n   console.log('c');\n   console.groupEnd();\n   console.group('Second group');\n   console.log('1');\n   console.log('2');\n   console.log('3');\n   console.group('Embeded subgroup');\n   console.log('α');\n   console.log('β');\n   console.log('γ');\n   console.groupEnd(); \n```\n**console.time(name)/console.timeEnd(name)** 可以用来度量\n\n```\n   var slowInitializer = function() {\n       var collection = [];\n       for (var i = 20000000; i > 0 ; i--) {\n           collection.push(i);\n           if (i === 1000) {\n               console.time('Last iterations');\n           }\n       }\n       console.timeEnd('Last iterations');\n   };\n   console.time('Slow initializer');\n   slowInitializer();\n   console.timeEnd('Slow initializer');\n```\n\n**console.count()**可以用来计算标签被执行的次数\n\n```\n   $('#image').on('click', function() {\n       console.count('Click on my image');\n   });\n```\n输出：\n\n```\n   Click on my image : 1\n   Click on my image : 2\n   // [...]\n   Click on my image : 12\n```\n还有其他...\n","slug":"使用Console调试Js","published":1,"updated":"2020-06-14T15:57:16.312Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13r0047mp84e3hi66b5","content":"<p>Console 是用于显示 JS和 DOM 对象信息的单独窗口。并且向 JS 中注入1个 console 对象，使用该对象 可以输出信息到 Console 窗口中。Firefox和Chrome对此对象支持的很好。</p>\n<p><strong>console.log</strong> 可以打印出一些log信息</p>\n<p><strong>console.debug，info，warn，error</strong> 同样可以打印log信息，但在显示颜色上有一些变化</p>\n<p><strong>console.clear</strong> 可以用来清除console中的信息</p>\n<p><strong>console.trace</strong> 可以查看当前函数的调用堆栈信息，即当前函数是如何调用的</p>\n<p><strong>console.group(object[, object, …]), groupCollapsed, groupEnd</strong> 用于把 log 等输出的信息进行分组，方便阅读查看。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.group(&#39;First group&#39;);</span><br><span class=\"line\">console.log(&#39;a&#39;);</span><br><span class=\"line\">console.log(&#39;b&#39;);</span><br><span class=\"line\">console.log(&#39;c&#39;);</span><br><span class=\"line\">console.groupEnd();</span><br><span class=\"line\">console.group(&#39;Second group&#39;);</span><br><span class=\"line\">console.log(&#39;1&#39;);</span><br><span class=\"line\">console.log(&#39;2&#39;);</span><br><span class=\"line\">console.log(&#39;3&#39;);</span><br><span class=\"line\">console.group(&#39;Embeded subgroup&#39;);</span><br><span class=\"line\">console.log(&#39;α&#39;);</span><br><span class=\"line\">console.log(&#39;β&#39;);</span><br><span class=\"line\">console.log(&#39;γ&#39;);</span><br><span class=\"line\">console.groupEnd();</span><br></pre></td></tr></table></figure>\n<p><strong>console.time(name)/console.timeEnd(name)</strong> 可以用来度量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var slowInitializer &#x3D; function() &#123;</span><br><span class=\"line\">    var collection &#x3D; [];</span><br><span class=\"line\">    for (var i &#x3D; 20000000; i &gt; 0 ; i--) &#123;</span><br><span class=\"line\">        collection.push(i);</span><br><span class=\"line\">        if (i &#x3D;&#x3D;&#x3D; 1000) &#123;</span><br><span class=\"line\">            console.time(&#39;Last iterations&#39;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.timeEnd(&#39;Last iterations&#39;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.time(&#39;Slow initializer&#39;);</span><br><span class=\"line\">slowInitializer();</span><br><span class=\"line\">console.timeEnd(&#39;Slow initializer&#39;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>console.count()</strong>可以用来计算标签被执行的次数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#image&#39;).on(&#39;click&#39;, function() &#123;</span><br><span class=\"line\">    console.count(&#39;Click on my image&#39;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Click on my image : 1</span><br><span class=\"line\">Click on my image : 2</span><br><span class=\"line\">&#x2F;&#x2F; [...]</span><br><span class=\"line\">Click on my image : 12</span><br></pre></td></tr></table></figure>\n<p>还有其他…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Console 是用于显示 JS和 DOM 对象信息的单独窗口。并且向 JS 中注入1个 console 对象，使用该对象 可以输出信息到 Console 窗口中。Firefox和Chrome对此对象支持的很好。</p>\n<p><strong>console.log</strong> 可以打印出一些log信息</p>\n<p><strong>console.debug，info，warn，error</strong> 同样可以打印log信息，但在显示颜色上有一些变化</p>\n<p><strong>console.clear</strong> 可以用来清除console中的信息</p>\n<p><strong>console.trace</strong> 可以查看当前函数的调用堆栈信息，即当前函数是如何调用的</p>\n<p><strong>console.group(object[, object, …]), groupCollapsed, groupEnd</strong> 用于把 log 等输出的信息进行分组，方便阅读查看。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.group(&#39;First group&#39;);</span><br><span class=\"line\">console.log(&#39;a&#39;);</span><br><span class=\"line\">console.log(&#39;b&#39;);</span><br><span class=\"line\">console.log(&#39;c&#39;);</span><br><span class=\"line\">console.groupEnd();</span><br><span class=\"line\">console.group(&#39;Second group&#39;);</span><br><span class=\"line\">console.log(&#39;1&#39;);</span><br><span class=\"line\">console.log(&#39;2&#39;);</span><br><span class=\"line\">console.log(&#39;3&#39;);</span><br><span class=\"line\">console.group(&#39;Embeded subgroup&#39;);</span><br><span class=\"line\">console.log(&#39;α&#39;);</span><br><span class=\"line\">console.log(&#39;β&#39;);</span><br><span class=\"line\">console.log(&#39;γ&#39;);</span><br><span class=\"line\">console.groupEnd();</span><br></pre></td></tr></table></figure>\n<p><strong>console.time(name)/console.timeEnd(name)</strong> 可以用来度量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var slowInitializer &#x3D; function() &#123;</span><br><span class=\"line\">    var collection &#x3D; [];</span><br><span class=\"line\">    for (var i &#x3D; 20000000; i &gt; 0 ; i--) &#123;</span><br><span class=\"line\">        collection.push(i);</span><br><span class=\"line\">        if (i &#x3D;&#x3D;&#x3D; 1000) &#123;</span><br><span class=\"line\">            console.time(&#39;Last iterations&#39;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.timeEnd(&#39;Last iterations&#39;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.time(&#39;Slow initializer&#39;);</span><br><span class=\"line\">slowInitializer();</span><br><span class=\"line\">console.timeEnd(&#39;Slow initializer&#39;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>console.count()</strong>可以用来计算标签被执行的次数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&#39;#image&#39;).on(&#39;click&#39;, function() &#123;</span><br><span class=\"line\">    console.count(&#39;Click on my image&#39;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Click on my image : 1</span><br><span class=\"line\">Click on my image : 2</span><br><span class=\"line\">&#x2F;&#x2F; [...]</span><br><span class=\"line\">Click on my image : 12</span><br></pre></td></tr></table></figure>\n<p>还有其他…</p>\n"},{"layout":"post","title":"如何从本机链接vagrant里的mysql","date":"2015-06-26T16:00:00.000Z","description":"如何从本机链接vagrant里的mysql","_content":"\n## 我设置如下：\n\n* 在Vagrantfile中设置ip与端口\n```\nconfig.vm.network \"private_network\", ip: \"10.10.10.11\"\nconfig.vm.network \"forwarded_port\", guest: 3306, host: 3306\n```\n* vagrant reload\n\n进入vagrant做如下设置\n* 在/etc/hosts.allow里加上：mysqld: ALL : ALLOW 和 mysqld-max: ALL : ALLOW\n* 在/etc/mysql/my.cnf里注释掉skip-external-locking, 并且把bind-address设置为0.0.0.0\n* 在mysql里GRANT权限: \n```\nGRANT ALL PRIVILEGES ON *.* TO 'myuser'@'%' WITH GRANT OPTION;\n```\n","source":"_posts/如何从本机链接vagrant里的mysql.md","raw":"---\nlayout: post\ntitle: \"如何从本机链接vagrant里的mysql\"\ndate:   2015-06-27\ndescription: 如何从本机链接vagrant里的mysql\ncategories: VM\ntags: vm\n---\n\n## 我设置如下：\n\n* 在Vagrantfile中设置ip与端口\n```\nconfig.vm.network \"private_network\", ip: \"10.10.10.11\"\nconfig.vm.network \"forwarded_port\", guest: 3306, host: 3306\n```\n* vagrant reload\n\n进入vagrant做如下设置\n* 在/etc/hosts.allow里加上：mysqld: ALL : ALLOW 和 mysqld-max: ALL : ALLOW\n* 在/etc/mysql/my.cnf里注释掉skip-external-locking, 并且把bind-address设置为0.0.0.0\n* 在mysql里GRANT权限: \n```\nGRANT ALL PRIVILEGES ON *.* TO 'myuser'@'%' WITH GRANT OPTION;\n```\n","slug":"如何从本机链接vagrant里的mysql","published":1,"updated":"2020-06-14T15:57:16.335Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13t004amp843i5e0a4c","content":"<h2 id=\"我设置如下：\"><a href=\"#我设置如下：\" class=\"headerlink\" title=\"我设置如下：\"></a>我设置如下：</h2><ul>\n<li>在Vagrantfile中设置ip与端口<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.network &quot;private_network&quot;, ip: &quot;10.10.10.11&quot;</span><br><span class=\"line\">config.vm.network &quot;forwarded_port&quot;, guest: 3306, host: 3306</span><br></pre></td></tr></table></figure></li>\n<li>vagrant reload</li>\n</ul>\n<p>进入vagrant做如下设置</p>\n<ul>\n<li>在/etc/hosts.allow里加上：mysqld: ALL : ALLOW 和 mysqld-max: ALL : ALLOW</li>\n<li>在/etc/mysql/my.cnf里注释掉skip-external-locking, 并且把bind-address设置为0.0.0.0</li>\n<li>在mysql里GRANT权限: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &#39;myuser&#39;@&#39;%&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"我设置如下：\"><a href=\"#我设置如下：\" class=\"headerlink\" title=\"我设置如下：\"></a>我设置如下：</h2><ul>\n<li>在Vagrantfile中设置ip与端口<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.vm.network &quot;private_network&quot;, ip: &quot;10.10.10.11&quot;</span><br><span class=\"line\">config.vm.network &quot;forwarded_port&quot;, guest: 3306, host: 3306</span><br></pre></td></tr></table></figure></li>\n<li>vagrant reload</li>\n</ul>\n<p>进入vagrant做如下设置</p>\n<ul>\n<li>在/etc/hosts.allow里加上：mysqld: ALL : ALLOW 和 mysqld-max: ALL : ALLOW</li>\n<li>在/etc/mysql/my.cnf里注释掉skip-external-locking, 并且把bind-address设置为0.0.0.0</li>\n<li>在mysql里GRANT权限: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO &#39;myuser&#39;@&#39;%&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"layout":"post","title":"提高php代码质量","date":"2015-03-23T16:00:00.000Z","description":"提高php代码质量","_content":"\n**更改应用创建的文件权限**\n\n在linux环境中, 权限问题可能会浪费你很多时间. 从今往后, 无论何时, 当你创建一些文件后, 确保使用chmod设置正确权限. 否则的话, 可能文件先是由\"php\"用户创建, 但你用其它的用户登录工作, 系统將会拒绝访问或打开文件, 你不得不奋力获取root权限,  更改文件的权限等等.\n\n    // Read and write for owner, read for everybody else\n    chmod(\"/somedir/somefile\", 0644); \n    // Everything for owner, read and execute for others\n    chmod(\"/somedir/somefile\", 0755);\n\n**不要依赖submit按钮值来检查表单提交行为**\n\t\n    if($_POST['submit'] == 'Save')\n    {\n        //Save the things\n    }\n\n上面大多数情况正确, 除了应用是多语言的. 'Save' 可能代表其它含义. 你怎么区分它们呢. 因此, 不要依赖于submit按钮的值.\n\t\n    if( $_SERVER['REQUEST_METHOD'] == 'POST' and isset($_POST['submit']) )\n    {\n        //Save the things\n    }\n\n现在你从submit按钮值中解脱出来了.\n\n**不要直接使用 $_SESSION 变量**\n\n某些简单例子:\n\t\n    $_SESSION['username'] = $username;\n    $username = $_SESSION['username'];\n\n这会导致某些问题. 如果在同个域名中运行了多个应用, session 变量可能会冲突. 两个不同的应用可能使用同一个session key. 例如, 一个前端门户, 和一个后台管理系统使用同一域名.\n\n从现在开始, 使用应用相关的key和一个包装函数:\n\t\n    define('APP_ID' , 'abc_corp_ecommerce');\n    //Function to get a session variable\n    function session_get($key)\n    {\n        $k = APP_ID . '.' . $key;\n        if(isset($_SESSION[$k]))\n        {\n            return $_SESSION[$k];\n        }\n     \n        return false;\n    }\n    \n    //Function set the session variable\n    function session_set($key , $value)\n    {\n        $k = APP_ID . '.' . $key;\n        $_SESSION[$k] = $value;\n     \n        return true;\n    }\n    \n**將工具函数封装到类中**\n\n假如你在某文件中定义了很多工具函数:\n\n    function utility_a()\n    {\n        //This function does a utility thing like string processing\n    }\n     \n    function utility_b()\n    {\n        //This function does nother utility thing like database processing\n    }\n     \n    function utility_c()\n    {\n        //This function is ...\n    }\n    \n这些函数的使用分散到应用各处. 你可能想將他们封装到某个类中:\n\n    class Utility\n    {\n        public static function utility_a()\n        {\n        }\n     \n        public static function utility_b()\n        {\n        }\n     \n        public static function utility_c()\n        {\n        }\n    }\n     \n    //and call them as\n     \n    $a = Utility::utility_a();\n    $b = Utility::utility_b();\n    \n显而易见的好处是, 如果php内建有同名的函数, 这样可以避免冲突.\n\n另一种看法是, 你可以在同个应用中为同个类维护多个版本, 而不导致冲突. 这是封装的基本好处, 无它.\n\n**Bunch of silly tips** \n\n使用echo取代print\n\n使用str_replace取代preg_replace, 除非你绝对需要\n\n不要使用 short tag\n\n简单字符串用单引号取代双引号\n\nhead重定向后记得使用exit\n\n不要在循环中调用函数\n\nisset比strlen快\n\n始中如一的格式化代码\n\n不要删除循环或者if-else的括号\n\n不要这样写代码:\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\">if($a == true) $a_count++;</span>\n\n这绝对WASTE.\n\n写成:\n\t\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\">if($a == true)\n    {\n        $a_count++;\n    }</span>\n\n不要尝试省略一些语法来缩短代码. 而是让你的逻辑简短.\n\n**使用array_map快速处理数组**\n\n比如说你想 trim 数组中的所有元素. 新手可能会:\n\n    foreach($arr as $c => $v)\n    {\n        $arr[$c] = trim($v);\n    }\n\n但使用 array_map 更简单:\n\t\n    $arr = array_map('trim' , $arr);\n\n这会为$arr数组的每个元素都申请调用trim. 另一个类似的函数是 array_walk. 请查阅文档学习更多技巧.\n21. 使用 php filter 验证数据\n\n你肯定曾使用过正则表达式验证 email , ip地址等. 是的,每个人都这么使用. 现在, 我们想做不同的尝试, 称为filter.\n\nphp的filter扩展提供了简单的方式验证和检查输入.\n\n**强制类型检查**\n\n    $amount = intval( $_GET['amount'] );\n    $rate = (int) $_GET['rate'];\n\n这是个好习惯.\n\n**如果需要,使用profiler如xdebug**\n\n如果你使用php开发大型的应用, php承担了很多运算量, 速度会是一个很重要的指标. 使用profile帮助优化代码. 可使用\n\nxdebug和webgrid.\n\n避免使用全局变量\n\n使用 defines/constants\n\n使用函数获取值\n\n使用类并通过$this访问\n\n**在head中使用base标签**\n\n没听说过? 请看下面:\n\n    <head>\n    <base href=\"http://www.domain.com/store/\">\n    </head>\n    <body>\n    <img src=\"happy.jpg\" />\n    </body>\n    </html>\n\nbase 标签非常有用. 假设你的应用分成几个子目录, 它们都要包括相同的导航菜单.\n\nwww.domain.com/store/home.php\n\nwww.domain.com/store/products/iPad.php\n\n在首页中, 可以写:\n\n    <a href=\"home.php\">Home</a>\n    <a href=\"products/iPad.php\">Ipad</a>\n\n但在你的iPad.php不得不写成:\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\"><a href=\"../home.php\">Home</a>\n    <a href=\"iPad.php\">Ipad</a></span>\n\n因为目录不一样. 有这么多不同版本的导航菜单要维护, 很糟糕啊. \n\n因此, 请使用base标签.\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\"><head>\n    <base href=\"http://www.domain.com/store/\">\n    </head>\n    <body>\n    <a href=\"home.php\">Home</a>\n    <a href=\"products/iPad.php\">Ipad</a>\n    </body>\n    </html></span>\n\n现在, 这段代码放在应用的各个目录文件中行为都一致. \n\n**永远不要將 error_reporting 设为 0**\n\n关闭不相的错误报告. E_FATAL 错误是很重要的. \n\n    <span style=\"color:#333333;font-family:'Helvetica, Arial, sans-serif';\">ini_set('display_errors', 1);\n    error_reporting(~E_WARNING & ~E_NOTICE & ~E_STRICT);</span>\n\n**使用扩展库**\n\n一些例子:\n\nmPDF -- 能通过html生成pdf文档\n\nPHPExcel -- 读写excel\n\nPhpMailer -- 轻松处理发送包含附近的邮件\n\npChart -- 使用php生成报表\n\n使用开源库完成复杂任务, 如生成pdf, ms-excel文件, 报表等.\n","source":"_posts/提高php代码质量.md","raw":"---\nlayout: post\ntitle: \"提高php代码质量\"\ndate:   2015-03-24\ndescription: 提高php代码质量\ncategories: PHP\ntags: php\n---\n\n**更改应用创建的文件权限**\n\n在linux环境中, 权限问题可能会浪费你很多时间. 从今往后, 无论何时, 当你创建一些文件后, 确保使用chmod设置正确权限. 否则的话, 可能文件先是由\"php\"用户创建, 但你用其它的用户登录工作, 系统將会拒绝访问或打开文件, 你不得不奋力获取root权限,  更改文件的权限等等.\n\n    // Read and write for owner, read for everybody else\n    chmod(\"/somedir/somefile\", 0644); \n    // Everything for owner, read and execute for others\n    chmod(\"/somedir/somefile\", 0755);\n\n**不要依赖submit按钮值来检查表单提交行为**\n\t\n    if($_POST['submit'] == 'Save')\n    {\n        //Save the things\n    }\n\n上面大多数情况正确, 除了应用是多语言的. 'Save' 可能代表其它含义. 你怎么区分它们呢. 因此, 不要依赖于submit按钮的值.\n\t\n    if( $_SERVER['REQUEST_METHOD'] == 'POST' and isset($_POST['submit']) )\n    {\n        //Save the things\n    }\n\n现在你从submit按钮值中解脱出来了.\n\n**不要直接使用 $_SESSION 变量**\n\n某些简单例子:\n\t\n    $_SESSION['username'] = $username;\n    $username = $_SESSION['username'];\n\n这会导致某些问题. 如果在同个域名中运行了多个应用, session 变量可能会冲突. 两个不同的应用可能使用同一个session key. 例如, 一个前端门户, 和一个后台管理系统使用同一域名.\n\n从现在开始, 使用应用相关的key和一个包装函数:\n\t\n    define('APP_ID' , 'abc_corp_ecommerce');\n    //Function to get a session variable\n    function session_get($key)\n    {\n        $k = APP_ID . '.' . $key;\n        if(isset($_SESSION[$k]))\n        {\n            return $_SESSION[$k];\n        }\n     \n        return false;\n    }\n    \n    //Function set the session variable\n    function session_set($key , $value)\n    {\n        $k = APP_ID . '.' . $key;\n        $_SESSION[$k] = $value;\n     \n        return true;\n    }\n    \n**將工具函数封装到类中**\n\n假如你在某文件中定义了很多工具函数:\n\n    function utility_a()\n    {\n        //This function does a utility thing like string processing\n    }\n     \n    function utility_b()\n    {\n        //This function does nother utility thing like database processing\n    }\n     \n    function utility_c()\n    {\n        //This function is ...\n    }\n    \n这些函数的使用分散到应用各处. 你可能想將他们封装到某个类中:\n\n    class Utility\n    {\n        public static function utility_a()\n        {\n        }\n     \n        public static function utility_b()\n        {\n        }\n     \n        public static function utility_c()\n        {\n        }\n    }\n     \n    //and call them as\n     \n    $a = Utility::utility_a();\n    $b = Utility::utility_b();\n    \n显而易见的好处是, 如果php内建有同名的函数, 这样可以避免冲突.\n\n另一种看法是, 你可以在同个应用中为同个类维护多个版本, 而不导致冲突. 这是封装的基本好处, 无它.\n\n**Bunch of silly tips** \n\n使用echo取代print\n\n使用str_replace取代preg_replace, 除非你绝对需要\n\n不要使用 short tag\n\n简单字符串用单引号取代双引号\n\nhead重定向后记得使用exit\n\n不要在循环中调用函数\n\nisset比strlen快\n\n始中如一的格式化代码\n\n不要删除循环或者if-else的括号\n\n不要这样写代码:\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\">if($a == true) $a_count++;</span>\n\n这绝对WASTE.\n\n写成:\n\t\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\">if($a == true)\n    {\n        $a_count++;\n    }</span>\n\n不要尝试省略一些语法来缩短代码. 而是让你的逻辑简短.\n\n**使用array_map快速处理数组**\n\n比如说你想 trim 数组中的所有元素. 新手可能会:\n\n    foreach($arr as $c => $v)\n    {\n        $arr[$c] = trim($v);\n    }\n\n但使用 array_map 更简单:\n\t\n    $arr = array_map('trim' , $arr);\n\n这会为$arr数组的每个元素都申请调用trim. 另一个类似的函数是 array_walk. 请查阅文档学习更多技巧.\n21. 使用 php filter 验证数据\n\n你肯定曾使用过正则表达式验证 email , ip地址等. 是的,每个人都这么使用. 现在, 我们想做不同的尝试, 称为filter.\n\nphp的filter扩展提供了简单的方式验证和检查输入.\n\n**强制类型检查**\n\n    $amount = intval( $_GET['amount'] );\n    $rate = (int) $_GET['rate'];\n\n这是个好习惯.\n\n**如果需要,使用profiler如xdebug**\n\n如果你使用php开发大型的应用, php承担了很多运算量, 速度会是一个很重要的指标. 使用profile帮助优化代码. 可使用\n\nxdebug和webgrid.\n\n避免使用全局变量\n\n使用 defines/constants\n\n使用函数获取值\n\n使用类并通过$this访问\n\n**在head中使用base标签**\n\n没听说过? 请看下面:\n\n    <head>\n    <base href=\"http://www.domain.com/store/\">\n    </head>\n    <body>\n    <img src=\"happy.jpg\" />\n    </body>\n    </html>\n\nbase 标签非常有用. 假设你的应用分成几个子目录, 它们都要包括相同的导航菜单.\n\nwww.domain.com/store/home.php\n\nwww.domain.com/store/products/iPad.php\n\n在首页中, 可以写:\n\n    <a href=\"home.php\">Home</a>\n    <a href=\"products/iPad.php\">Ipad</a>\n\n但在你的iPad.php不得不写成:\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\"><a href=\"../home.php\">Home</a>\n    <a href=\"iPad.php\">Ipad</a></span>\n\n因为目录不一样. 有这么多不同版本的导航菜单要维护, 很糟糕啊. \n\n因此, 请使用base标签.\n\n    <span style=\"color:#333333;font-family:''Helvetica, Arial, sans-serif'';\"><head>\n    <base href=\"http://www.domain.com/store/\">\n    </head>\n    <body>\n    <a href=\"home.php\">Home</a>\n    <a href=\"products/iPad.php\">Ipad</a>\n    </body>\n    </html></span>\n\n现在, 这段代码放在应用的各个目录文件中行为都一致. \n\n**永远不要將 error_reporting 设为 0**\n\n关闭不相的错误报告. E_FATAL 错误是很重要的. \n\n    <span style=\"color:#333333;font-family:'Helvetica, Arial, sans-serif';\">ini_set('display_errors', 1);\n    error_reporting(~E_WARNING & ~E_NOTICE & ~E_STRICT);</span>\n\n**使用扩展库**\n\n一些例子:\n\nmPDF -- 能通过html生成pdf文档\n\nPHPExcel -- 读写excel\n\nPhpMailer -- 轻松处理发送包含附近的邮件\n\npChart -- 使用php生成报表\n\n使用开源库完成复杂任务, 如生成pdf, ms-excel文件, 报表等.\n","slug":"提高php代码质量","published":1,"updated":"2020-06-14T15:57:16.332Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13v004fmp848x3o1hdm","content":"<p><strong>更改应用创建的文件权限</strong></p>\n<p>在linux环境中, 权限问题可能会浪费你很多时间. 从今往后, 无论何时, 当你创建一些文件后, 确保使用chmod设置正确权限. 否则的话, 可能文件先是由”php”用户创建, 但你用其它的用户登录工作, 系统將会拒绝访问或打开文件, 你不得不奋力获取root权限,  更改文件的权限等等.</p>\n<pre><code>// Read and write for owner, read for everybody else\nchmod(&quot;/somedir/somefile&quot;, 0644); \n// Everything for owner, read and execute for others\nchmod(&quot;/somedir/somefile&quot;, 0755);</code></pre><p><strong>不要依赖submit按钮值来检查表单提交行为</strong></p>\n<pre><code>if($_POST[&apos;submit&apos;] == &apos;Save&apos;)\n{\n    //Save the things\n}</code></pre><p>上面大多数情况正确, 除了应用是多语言的. ‘Save’ 可能代表其它含义. 你怎么区分它们呢. 因此, 不要依赖于submit按钮的值.</p>\n<pre><code>if( $_SERVER[&apos;REQUEST_METHOD&apos;] == &apos;POST&apos; and isset($_POST[&apos;submit&apos;]) )\n{\n    //Save the things\n}</code></pre><p>现在你从submit按钮值中解脱出来了.</p>\n<p><strong>不要直接使用 $_SESSION 变量</strong></p>\n<p>某些简单例子:</p>\n<pre><code>$_SESSION[&apos;username&apos;] = $username;\n$username = $_SESSION[&apos;username&apos;];</code></pre><p>这会导致某些问题. 如果在同个域名中运行了多个应用, session 变量可能会冲突. 两个不同的应用可能使用同一个session key. 例如, 一个前端门户, 和一个后台管理系统使用同一域名.</p>\n<p>从现在开始, 使用应用相关的key和一个包装函数:</p>\n<pre><code>define(&apos;APP_ID&apos; , &apos;abc_corp_ecommerce&apos;);\n//Function to get a session variable\nfunction session_get($key)\n{\n    $k = APP_ID . &apos;.&apos; . $key;\n    if(isset($_SESSION[$k]))\n    {\n        return $_SESSION[$k];\n    }\n\n    return false;\n}\n\n//Function set the session variable\nfunction session_set($key , $value)\n{\n    $k = APP_ID . &apos;.&apos; . $key;\n    $_SESSION[$k] = $value;\n\n    return true;\n}</code></pre><p><strong>將工具函数封装到类中</strong></p>\n<p>假如你在某文件中定义了很多工具函数:</p>\n<pre><code>function utility_a()\n{\n    //This function does a utility thing like string processing\n}\n\nfunction utility_b()\n{\n    //This function does nother utility thing like database processing\n}\n\nfunction utility_c()\n{\n    //This function is ...\n}</code></pre><p>这些函数的使用分散到应用各处. 你可能想將他们封装到某个类中:</p>\n<pre><code>class Utility\n{\n    public static function utility_a()\n    {\n    }\n\n    public static function utility_b()\n    {\n    }\n\n    public static function utility_c()\n    {\n    }\n}\n\n//and call them as\n\n$a = Utility::utility_a();\n$b = Utility::utility_b();</code></pre><p>显而易见的好处是, 如果php内建有同名的函数, 这样可以避免冲突.</p>\n<p>另一种看法是, 你可以在同个应用中为同个类维护多个版本, 而不导致冲突. 这是封装的基本好处, 无它.</p>\n<p><strong>Bunch of silly tips</strong> </p>\n<p>使用echo取代print</p>\n<p>使用str_replace取代preg_replace, 除非你绝对需要</p>\n<p>不要使用 short tag</p>\n<p>简单字符串用单引号取代双引号</p>\n<p>head重定向后记得使用exit</p>\n<p>不要在循环中调用函数</p>\n<p>isset比strlen快</p>\n<p>始中如一的格式化代码</p>\n<p>不要删除循环或者if-else的括号</p>\n<p>不要这样写代码:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;if($a == true) $a_count++;&lt;/span&gt;</code></pre><p>这绝对WASTE.</p>\n<p>写成:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;if($a == true)\n{\n    $a_count++;\n}&lt;/span&gt;</code></pre><p>不要尝试省略一些语法来缩短代码. 而是让你的逻辑简短.</p>\n<p><strong>使用array_map快速处理数组</strong></p>\n<p>比如说你想 trim 数组中的所有元素. 新手可能会:</p>\n<pre><code>foreach($arr as $c =&gt; $v)\n{\n    $arr[$c] = trim($v);\n}</code></pre><p>但使用 array_map 更简单:</p>\n<pre><code>$arr = array_map(&apos;trim&apos; , $arr);</code></pre><p>这会为$arr数组的每个元素都申请调用trim. 另一个类似的函数是 array_walk. 请查阅文档学习更多技巧.<br>21. 使用 php filter 验证数据</p>\n<p>你肯定曾使用过正则表达式验证 email , ip地址等. 是的,每个人都这么使用. 现在, 我们想做不同的尝试, 称为filter.</p>\n<p>php的filter扩展提供了简单的方式验证和检查输入.</p>\n<p><strong>强制类型检查</strong></p>\n<pre><code>$amount = intval( $_GET[&apos;amount&apos;] );\n$rate = (int) $_GET[&apos;rate&apos;];</code></pre><p>这是个好习惯.</p>\n<p><strong>如果需要,使用profiler如xdebug</strong></p>\n<p>如果你使用php开发大型的应用, php承担了很多运算量, 速度会是一个很重要的指标. 使用profile帮助优化代码. 可使用</p>\n<p>xdebug和webgrid.</p>\n<p>避免使用全局变量</p>\n<p>使用 defines/constants</p>\n<p>使用函数获取值</p>\n<p>使用类并通过$this访问</p>\n<p><strong>在head中使用base标签</strong></p>\n<p>没听说过? 请看下面:</p>\n<pre><code>&lt;head&gt;\n&lt;base href=&quot;http://www.domain.com/store/&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;img src=&quot;happy.jpg&quot; /&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre><p>base 标签非常有用. 假设你的应用分成几个子目录, 它们都要包括相同的导航菜单.</p>\n<p><a href=\"http://www.domain.com/store/home.php\" target=\"_blank\" rel=\"noopener\">www.domain.com/store/home.php</a></p>\n<p><a href=\"http://www.domain.com/store/products/iPad.php\" target=\"_blank\" rel=\"noopener\">www.domain.com/store/products/iPad.php</a></p>\n<p>在首页中, 可以写:</p>\n<pre><code>&lt;a href=&quot;home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;products/iPad.php&quot;&gt;Ipad&lt;/a&gt;</code></pre><p>但在你的iPad.php不得不写成:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;&lt;a href=&quot;../home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;iPad.php&quot;&gt;Ipad&lt;/a&gt;&lt;/span&gt;</code></pre><p>因为目录不一样. 有这么多不同版本的导航菜单要维护, 很糟糕啊. </p>\n<p>因此, 请使用base标签.</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;&lt;head&gt;\n&lt;base href=&quot;http://www.domain.com/store/&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=&quot;home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;products/iPad.php&quot;&gt;Ipad&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;&lt;/span&gt;</code></pre><p>现在, 这段代码放在应用的各个目录文件中行为都一致. </p>\n<p><strong>永远不要將 error_reporting 设为 0</strong></p>\n<p>关闭不相的错误报告. E_FATAL 错误是很重要的. </p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;Helvetica, Arial, sans-serif&apos;;&quot;&gt;ini_set(&apos;display_errors&apos;, 1);\nerror_reporting(~E_WARNING &amp; ~E_NOTICE &amp; ~E_STRICT);&lt;/span&gt;</code></pre><p><strong>使用扩展库</strong></p>\n<p>一些例子:</p>\n<p>mPDF – 能通过html生成pdf文档</p>\n<p>PHPExcel – 读写excel</p>\n<p>PhpMailer – 轻松处理发送包含附近的邮件</p>\n<p>pChart – 使用php生成报表</p>\n<p>使用开源库完成复杂任务, 如生成pdf, ms-excel文件, 报表等.</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>更改应用创建的文件权限</strong></p>\n<p>在linux环境中, 权限问题可能会浪费你很多时间. 从今往后, 无论何时, 当你创建一些文件后, 确保使用chmod设置正确权限. 否则的话, 可能文件先是由”php”用户创建, 但你用其它的用户登录工作, 系统將会拒绝访问或打开文件, 你不得不奋力获取root权限,  更改文件的权限等等.</p>\n<pre><code>// Read and write for owner, read for everybody else\nchmod(&quot;/somedir/somefile&quot;, 0644); \n// Everything for owner, read and execute for others\nchmod(&quot;/somedir/somefile&quot;, 0755);</code></pre><p><strong>不要依赖submit按钮值来检查表单提交行为</strong></p>\n<pre><code>if($_POST[&apos;submit&apos;] == &apos;Save&apos;)\n{\n    //Save the things\n}</code></pre><p>上面大多数情况正确, 除了应用是多语言的. ‘Save’ 可能代表其它含义. 你怎么区分它们呢. 因此, 不要依赖于submit按钮的值.</p>\n<pre><code>if( $_SERVER[&apos;REQUEST_METHOD&apos;] == &apos;POST&apos; and isset($_POST[&apos;submit&apos;]) )\n{\n    //Save the things\n}</code></pre><p>现在你从submit按钮值中解脱出来了.</p>\n<p><strong>不要直接使用 $_SESSION 变量</strong></p>\n<p>某些简单例子:</p>\n<pre><code>$_SESSION[&apos;username&apos;] = $username;\n$username = $_SESSION[&apos;username&apos;];</code></pre><p>这会导致某些问题. 如果在同个域名中运行了多个应用, session 变量可能会冲突. 两个不同的应用可能使用同一个session key. 例如, 一个前端门户, 和一个后台管理系统使用同一域名.</p>\n<p>从现在开始, 使用应用相关的key和一个包装函数:</p>\n<pre><code>define(&apos;APP_ID&apos; , &apos;abc_corp_ecommerce&apos;);\n//Function to get a session variable\nfunction session_get($key)\n{\n    $k = APP_ID . &apos;.&apos; . $key;\n    if(isset($_SESSION[$k]))\n    {\n        return $_SESSION[$k];\n    }\n\n    return false;\n}\n\n//Function set the session variable\nfunction session_set($key , $value)\n{\n    $k = APP_ID . &apos;.&apos; . $key;\n    $_SESSION[$k] = $value;\n\n    return true;\n}</code></pre><p><strong>將工具函数封装到类中</strong></p>\n<p>假如你在某文件中定义了很多工具函数:</p>\n<pre><code>function utility_a()\n{\n    //This function does a utility thing like string processing\n}\n\nfunction utility_b()\n{\n    //This function does nother utility thing like database processing\n}\n\nfunction utility_c()\n{\n    //This function is ...\n}</code></pre><p>这些函数的使用分散到应用各处. 你可能想將他们封装到某个类中:</p>\n<pre><code>class Utility\n{\n    public static function utility_a()\n    {\n    }\n\n    public static function utility_b()\n    {\n    }\n\n    public static function utility_c()\n    {\n    }\n}\n\n//and call them as\n\n$a = Utility::utility_a();\n$b = Utility::utility_b();</code></pre><p>显而易见的好处是, 如果php内建有同名的函数, 这样可以避免冲突.</p>\n<p>另一种看法是, 你可以在同个应用中为同个类维护多个版本, 而不导致冲突. 这是封装的基本好处, 无它.</p>\n<p><strong>Bunch of silly tips</strong> </p>\n<p>使用echo取代print</p>\n<p>使用str_replace取代preg_replace, 除非你绝对需要</p>\n<p>不要使用 short tag</p>\n<p>简单字符串用单引号取代双引号</p>\n<p>head重定向后记得使用exit</p>\n<p>不要在循环中调用函数</p>\n<p>isset比strlen快</p>\n<p>始中如一的格式化代码</p>\n<p>不要删除循环或者if-else的括号</p>\n<p>不要这样写代码:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;if($a == true) $a_count++;&lt;/span&gt;</code></pre><p>这绝对WASTE.</p>\n<p>写成:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;if($a == true)\n{\n    $a_count++;\n}&lt;/span&gt;</code></pre><p>不要尝试省略一些语法来缩短代码. 而是让你的逻辑简短.</p>\n<p><strong>使用array_map快速处理数组</strong></p>\n<p>比如说你想 trim 数组中的所有元素. 新手可能会:</p>\n<pre><code>foreach($arr as $c =&gt; $v)\n{\n    $arr[$c] = trim($v);\n}</code></pre><p>但使用 array_map 更简单:</p>\n<pre><code>$arr = array_map(&apos;trim&apos; , $arr);</code></pre><p>这会为$arr数组的每个元素都申请调用trim. 另一个类似的函数是 array_walk. 请查阅文档学习更多技巧.<br>21. 使用 php filter 验证数据</p>\n<p>你肯定曾使用过正则表达式验证 email , ip地址等. 是的,每个人都这么使用. 现在, 我们想做不同的尝试, 称为filter.</p>\n<p>php的filter扩展提供了简单的方式验证和检查输入.</p>\n<p><strong>强制类型检查</strong></p>\n<pre><code>$amount = intval( $_GET[&apos;amount&apos;] );\n$rate = (int) $_GET[&apos;rate&apos;];</code></pre><p>这是个好习惯.</p>\n<p><strong>如果需要,使用profiler如xdebug</strong></p>\n<p>如果你使用php开发大型的应用, php承担了很多运算量, 速度会是一个很重要的指标. 使用profile帮助优化代码. 可使用</p>\n<p>xdebug和webgrid.</p>\n<p>避免使用全局变量</p>\n<p>使用 defines/constants</p>\n<p>使用函数获取值</p>\n<p>使用类并通过$this访问</p>\n<p><strong>在head中使用base标签</strong></p>\n<p>没听说过? 请看下面:</p>\n<pre><code>&lt;head&gt;\n&lt;base href=&quot;http://www.domain.com/store/&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;img src=&quot;happy.jpg&quot; /&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre><p>base 标签非常有用. 假设你的应用分成几个子目录, 它们都要包括相同的导航菜单.</p>\n<p><a href=\"http://www.domain.com/store/home.php\" target=\"_blank\" rel=\"noopener\">www.domain.com/store/home.php</a></p>\n<p><a href=\"http://www.domain.com/store/products/iPad.php\" target=\"_blank\" rel=\"noopener\">www.domain.com/store/products/iPad.php</a></p>\n<p>在首页中, 可以写:</p>\n<pre><code>&lt;a href=&quot;home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;products/iPad.php&quot;&gt;Ipad&lt;/a&gt;</code></pre><p>但在你的iPad.php不得不写成:</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;&lt;a href=&quot;../home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;iPad.php&quot;&gt;Ipad&lt;/a&gt;&lt;/span&gt;</code></pre><p>因为目录不一样. 有这么多不同版本的导航菜单要维护, 很糟糕啊. </p>\n<p>因此, 请使用base标签.</p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;&apos;Helvetica, Arial, sans-serif&apos;&apos;;&quot;&gt;&lt;head&gt;\n&lt;base href=&quot;http://www.domain.com/store/&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=&quot;home.php&quot;&gt;Home&lt;/a&gt;\n&lt;a href=&quot;products/iPad.php&quot;&gt;Ipad&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;&lt;/span&gt;</code></pre><p>现在, 这段代码放在应用的各个目录文件中行为都一致. </p>\n<p><strong>永远不要將 error_reporting 设为 0</strong></p>\n<p>关闭不相的错误报告. E_FATAL 错误是很重要的. </p>\n<pre><code>&lt;span style=&quot;color:#333333;font-family:&apos;Helvetica, Arial, sans-serif&apos;;&quot;&gt;ini_set(&apos;display_errors&apos;, 1);\nerror_reporting(~E_WARNING &amp; ~E_NOTICE &amp; ~E_STRICT);&lt;/span&gt;</code></pre><p><strong>使用扩展库</strong></p>\n<p>一些例子:</p>\n<p>mPDF – 能通过html生成pdf文档</p>\n<p>PHPExcel – 读写excel</p>\n<p>PhpMailer – 轻松处理发送包含附近的邮件</p>\n<p>pChart – 使用php生成报表</p>\n<p>使用开源库完成复杂任务, 如生成pdf, ms-excel文件, 报表等.</p>\n"},{"layout":"post","title":"搭建开发环境","date":"2015-03-23T16:00:00.000Z","description":"搭建开发环境","_content":"\n个人觉得在Mac上使用Docker搭建开发环境的关键主要是设置好容器、虚拟机、与主机的端口映射。以php开发环境搭建为例：\n\n1. 安装boot2docker并启动。（boot2docker up）\n\n2. ssh进入boot2docker时，将主机的端口映射到boot2docker虚拟机的端口上，例如：boot2docker ssh -L 9977:localhost:9977\n\n3. 创建docker容器，此时将虚拟机的端口映射到docker容器上，例如:docker run -ti -p 9977:80 -d ubuntu\n\n4. 在进入docker容器 docker exec -ti <containerID> /bin/bash\n\n进入docker容器后就可以想服务器部署一样，安装nginx，php，mysql等等\n\n如果想修改docker image以备以后使用，可以将容器修改commit到镜像中。\n\n首先查看此docker容器进程号，然后在执行docker commit <containerID> <image>\n","source":"_posts/搭建开发环境.md","raw":"---\nlayout: post\ntitle: \"搭建开发环境\"\ndate:   2015-03-24\ndescription: 搭建开发环境\ncategories: Docker\ntags: docker\n---\n\n个人觉得在Mac上使用Docker搭建开发环境的关键主要是设置好容器、虚拟机、与主机的端口映射。以php开发环境搭建为例：\n\n1. 安装boot2docker并启动。（boot2docker up）\n\n2. ssh进入boot2docker时，将主机的端口映射到boot2docker虚拟机的端口上，例如：boot2docker ssh -L 9977:localhost:9977\n\n3. 创建docker容器，此时将虚拟机的端口映射到docker容器上，例如:docker run -ti -p 9977:80 -d ubuntu\n\n4. 在进入docker容器 docker exec -ti <containerID> /bin/bash\n\n进入docker容器后就可以想服务器部署一样，安装nginx，php，mysql等等\n\n如果想修改docker image以备以后使用，可以将容器修改commit到镜像中。\n\n首先查看此docker容器进程号，然后在执行docker commit <containerID> <image>\n","slug":"搭建开发环境","published":1,"updated":"2020-06-14T15:57:16.330Z","comments":1,"photos":[],"link":"","_id":"ckbfpl13w004imp849all7ra9","content":"<p>个人觉得在Mac上使用Docker搭建开发环境的关键主要是设置好容器、虚拟机、与主机的端口映射。以php开发环境搭建为例：</p>\n<ol>\n<li><p>安装boot2docker并启动。（boot2docker up）</p>\n</li>\n<li><p>ssh进入boot2docker时，将主机的端口映射到boot2docker虚拟机的端口上，例如：boot2docker ssh -L 9977:localhost:9977</p>\n</li>\n<li><p>创建docker容器，此时将虚拟机的端口映射到docker容器上，例如:docker run -ti -p 9977:80 -d ubuntu</p>\n</li>\n<li><p>在进入docker容器 docker exec -ti <containerID> /bin/bash</p>\n</li>\n</ol>\n<p>进入docker容器后就可以想服务器部署一样，安装nginx，php，mysql等等</p>\n<p>如果想修改docker image以备以后使用，可以将容器修改commit到镜像中。</p>\n<p>首先查看此docker容器进程号，然后在执行docker commit <containerID> <image></p>\n","site":{"data":{}},"excerpt":"","more":"<p>个人觉得在Mac上使用Docker搭建开发环境的关键主要是设置好容器、虚拟机、与主机的端口映射。以php开发环境搭建为例：</p>\n<ol>\n<li><p>安装boot2docker并启动。（boot2docker up）</p>\n</li>\n<li><p>ssh进入boot2docker时，将主机的端口映射到boot2docker虚拟机的端口上，例如：boot2docker ssh -L 9977:localhost:9977</p>\n</li>\n<li><p>创建docker容器，此时将虚拟机的端口映射到docker容器上，例如:docker run -ti -p 9977:80 -d ubuntu</p>\n</li>\n<li><p>在进入docker容器 docker exec -ti <containerID> /bin/bash</p>\n</li>\n</ol>\n<p>进入docker容器后就可以想服务器部署一样，安装nginx，php，mysql等等</p>\n<p>如果想修改docker image以备以后使用，可以将容器修改commit到镜像中。</p>\n<p>首先查看此docker容器进程号，然后在执行docker commit <containerID> <image></p>\n"},{"layout":"post","title":"Linux查找以及删除应用程序","date":"2015-08-19T16:00:00.000Z","description":"Linux查找以及删除应用程序","_content":"\n## 查找已安装的应用程序\ndpkg的参数很多，可以简单记一些常用命令：\n\n* 查询系统中属于vim的文件:\n\t* dpkg --listfiles vim\n\t* dpkg-query -L vim\n* 查看软件vim的详细信息:\n\t* dpkg -s vim\n\t* dpkg-query -s vim\n* 查看系统中软件包状态, 支持模糊查询:\n\t* dpkg -l\n\t* dpkg-query -l\n* 查看某个文件的归属包:\n\t* dpkg-query -S vim\n\t* dpkg -S vim\n\n## 卸载应用程序\nUbuntu中软件包的卸载方法有两种方式:\n\n* APT方式\n\t* 移除式卸载: apt-get remove softname1 softname2：//删除已安装的软件包（保留配置文件）。\n\t* 清除式卸载: apt-get --purge remove softname1 softname2：//删除已安装包（不保留配置文件)。\n\t* 清除式卸载：apt-get purge sofname1 softname2...//同上，也清除配置文件)\n* Dpkg方式\n\t* 移除式卸载：dpkg -r pkg1 pkg2 ...;\n\t* 清除式卸载：dpkg -P pkg1 pkg2...;\n\n### 其他\napt-get指令的autoclean,clean,autoremove的区别\n \napt-get autoclean:\n   如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。\n \napt-get clean:\n    类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。\n \napt-get autoremove:\n    删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。\n    \n## 参考文档\n[ubuntu安装和查看已安装](http://www.cnblogs.com/forward/archive/2012/01/10/2318483.html)","source":"_posts/Linux查找以及删除应用程序.md","raw":"---\nlayout: post\ntitle: \"Linux查找以及删除应用程序\"\ndate:   2015-08-20\ndescription: Linux查找以及删除应用程序\ncategories: Linux\ntags: linux\n---\n\n## 查找已安装的应用程序\ndpkg的参数很多，可以简单记一些常用命令：\n\n* 查询系统中属于vim的文件:\n\t* dpkg --listfiles vim\n\t* dpkg-query -L vim\n* 查看软件vim的详细信息:\n\t* dpkg -s vim\n\t* dpkg-query -s vim\n* 查看系统中软件包状态, 支持模糊查询:\n\t* dpkg -l\n\t* dpkg-query -l\n* 查看某个文件的归属包:\n\t* dpkg-query -S vim\n\t* dpkg -S vim\n\n## 卸载应用程序\nUbuntu中软件包的卸载方法有两种方式:\n\n* APT方式\n\t* 移除式卸载: apt-get remove softname1 softname2：//删除已安装的软件包（保留配置文件）。\n\t* 清除式卸载: apt-get --purge remove softname1 softname2：//删除已安装包（不保留配置文件)。\n\t* 清除式卸载：apt-get purge sofname1 softname2...//同上，也清除配置文件)\n* Dpkg方式\n\t* 移除式卸载：dpkg -r pkg1 pkg2 ...;\n\t* 清除式卸载：dpkg -P pkg1 pkg2...;\n\n### 其他\napt-get指令的autoclean,clean,autoremove的区别\n \napt-get autoclean:\n   如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。\n \napt-get clean:\n    类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。\n \napt-get autoremove:\n    删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。\n    \n## 参考文档\n[ubuntu安装和查看已安装](http://www.cnblogs.com/forward/archive/2012/01/10/2318483.html)","slug":"Linux查找以及删除应用程序","published":1,"updated":"2020-06-14T15:57:16.332Z","comments":1,"photos":[],"link":"","_id":"ckbfpl140004nmp8484puatv0","content":"<h2 id=\"查找已安装的应用程序\"><a href=\"#查找已安装的应用程序\" class=\"headerlink\" title=\"查找已安装的应用程序\"></a>查找已安装的应用程序</h2><p>dpkg的参数很多，可以简单记一些常用命令：</p>\n<ul>\n<li>查询系统中属于vim的文件:<ul>\n<li>dpkg –listfiles vim</li>\n<li>dpkg-query -L vim</li>\n</ul>\n</li>\n<li>查看软件vim的详细信息:<ul>\n<li>dpkg -s vim</li>\n<li>dpkg-query -s vim</li>\n</ul>\n</li>\n<li>查看系统中软件包状态, 支持模糊查询:<ul>\n<li>dpkg -l</li>\n<li>dpkg-query -l</li>\n</ul>\n</li>\n<li>查看某个文件的归属包:<ul>\n<li>dpkg-query -S vim</li>\n<li>dpkg -S vim</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"卸载应用程序\"><a href=\"#卸载应用程序\" class=\"headerlink\" title=\"卸载应用程序\"></a>卸载应用程序</h2><p>Ubuntu中软件包的卸载方法有两种方式:</p>\n<ul>\n<li>APT方式<ul>\n<li>移除式卸载: apt-get remove softname1 softname2：//删除已安装的软件包（保留配置文件）。</li>\n<li>清除式卸载: apt-get –purge remove softname1 softname2：//删除已安装包（不保留配置文件)。</li>\n<li>清除式卸载：apt-get purge sofname1 softname2…//同上，也清除配置文件)</li>\n</ul>\n</li>\n<li>Dpkg方式<ul>\n<li>移除式卸载：dpkg -r pkg1 pkg2 …;</li>\n<li>清除式卸载：dpkg -P pkg1 pkg2…;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>apt-get指令的autoclean,clean,autoremove的区别</p>\n<p>apt-get autoclean:<br>   如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。</p>\n<p>apt-get clean:<br>    类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。</p>\n<p>apt-get autoremove:<br>    删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"http://www.cnblogs.com/forward/archive/2012/01/10/2318483.html\" target=\"_blank\" rel=\"noopener\">ubuntu安装和查看已安装</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查找已安装的应用程序\"><a href=\"#查找已安装的应用程序\" class=\"headerlink\" title=\"查找已安装的应用程序\"></a>查找已安装的应用程序</h2><p>dpkg的参数很多，可以简单记一些常用命令：</p>\n<ul>\n<li>查询系统中属于vim的文件:<ul>\n<li>dpkg –listfiles vim</li>\n<li>dpkg-query -L vim</li>\n</ul>\n</li>\n<li>查看软件vim的详细信息:<ul>\n<li>dpkg -s vim</li>\n<li>dpkg-query -s vim</li>\n</ul>\n</li>\n<li>查看系统中软件包状态, 支持模糊查询:<ul>\n<li>dpkg -l</li>\n<li>dpkg-query -l</li>\n</ul>\n</li>\n<li>查看某个文件的归属包:<ul>\n<li>dpkg-query -S vim</li>\n<li>dpkg -S vim</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"卸载应用程序\"><a href=\"#卸载应用程序\" class=\"headerlink\" title=\"卸载应用程序\"></a>卸载应用程序</h2><p>Ubuntu中软件包的卸载方法有两种方式:</p>\n<ul>\n<li>APT方式<ul>\n<li>移除式卸载: apt-get remove softname1 softname2：//删除已安装的软件包（保留配置文件）。</li>\n<li>清除式卸载: apt-get –purge remove softname1 softname2：//删除已安装包（不保留配置文件)。</li>\n<li>清除式卸载：apt-get purge sofname1 softname2…//同上，也清除配置文件)</li>\n</ul>\n</li>\n<li>Dpkg方式<ul>\n<li>移除式卸载：dpkg -r pkg1 pkg2 …;</li>\n<li>清除式卸载：dpkg -P pkg1 pkg2…;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>apt-get指令的autoclean,clean,autoremove的区别</p>\n<p>apt-get autoclean:<br>   如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。</p>\n<p>apt-get clean:<br>    类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。</p>\n<p>apt-get autoremove:<br>    删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"http://www.cnblogs.com/forward/archive/2012/01/10/2318483.html\" target=\"_blank\" rel=\"noopener\">ubuntu安装和查看已安装</a></p>\n"},{"layout":"post","title":"Create Web Site Base On CentOS PHP Nginx Mysql","date":"2015-03-23T16:00:00.000Z","description":"Create Web Site Base On CentOS PHP Nginx Mysql","_content":"\n安装nginx rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n\nyum info nginx #查看yum的nginx信息\n\nyum install nginx #安装nginx\n\nservice nginx start #启动nginx\n\n安装其他程序\n\n```\nyum check-update\n\nyum -y install mysql mysql-server php-fpm php-cli php-pdo php-mysql php-mcrypt php-mbstring php-gd php-tidy php-xml php-xmlrpc php-pear php-pecl-memcache php-eaccelerator\n```\n添加nginx 默认主页index.php\n\nvim /etc/nginx/conf.d/default.conf\n\n```\nlocation / {\n      root   /usr/share/nginx/html;\n      index  index.html index.htm index.php;\n  }\n```\n配置nginx支持php\n\nvim /etc/nginx/conf.d/default.conf\n\n```\n  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n\n  #\n\n  location ~ .php$ {\n      root           html;\n      fastcgi_pass   127.0.0.1:9000;\n      fastcgi_index  index.php;\n      fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;\n      include        fastcgi_params;\n  }\n```\n\n配置php-fpm\n\nvim /etc/php-fpm.d/www.conf\n\n```\n; Unix user/group of processes\n\n; Note: The user is mandatory. If the group is not set, the default user’s group\n\n; will be used.\n\n; RPM: apache Chose to be able to access some dir as httpd\n\nuser = nginx\n\n; RPM: Keep a group allowed to write in log dir.\n\ngroup = nginx\n```\n\nchkconfig php-fpm on #设置php-fpm自启动\n\nchkconfig mysqld on #设置mysqld自启动\n\nservice nginx restart #重新启动nginx\n\nservice php-fpm start #启动php-fpm\n\nservice mysqld start #启动mysqld\n\nOpen port 80 cd /etc/sysconfig system-config-firewall\n\nOr\n\nAdd code in iptables -A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n\n \n\n<http://macshuo.com/?p=547>\n","source":"_posts/Create-Site.md","raw":"---\nlayout: post\ntitle: \"Create Web Site Base On CentOS PHP Nginx Mysql\"\ndate:   2015-03-24\ndescription: Create Web Site Base On CentOS PHP Nginx Mysql\ncategories:\n- php\n- linux\ntags:\n- php\n- linux\n---\n\n安装nginx rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n\nyum info nginx #查看yum的nginx信息\n\nyum install nginx #安装nginx\n\nservice nginx start #启动nginx\n\n安装其他程序\n\n```\nyum check-update\n\nyum -y install mysql mysql-server php-fpm php-cli php-pdo php-mysql php-mcrypt php-mbstring php-gd php-tidy php-xml php-xmlrpc php-pear php-pecl-memcache php-eaccelerator\n```\n添加nginx 默认主页index.php\n\nvim /etc/nginx/conf.d/default.conf\n\n```\nlocation / {\n      root   /usr/share/nginx/html;\n      index  index.html index.htm index.php;\n  }\n```\n配置nginx支持php\n\nvim /etc/nginx/conf.d/default.conf\n\n```\n  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n\n  #\n\n  location ~ .php$ {\n      root           html;\n      fastcgi_pass   127.0.0.1:9000;\n      fastcgi_index  index.php;\n      fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;\n      include        fastcgi_params;\n  }\n```\n\n配置php-fpm\n\nvim /etc/php-fpm.d/www.conf\n\n```\n; Unix user/group of processes\n\n; Note: The user is mandatory. If the group is not set, the default user’s group\n\n; will be used.\n\n; RPM: apache Chose to be able to access some dir as httpd\n\nuser = nginx\n\n; RPM: Keep a group allowed to write in log dir.\n\ngroup = nginx\n```\n\nchkconfig php-fpm on #设置php-fpm自启动\n\nchkconfig mysqld on #设置mysqld自启动\n\nservice nginx restart #重新启动nginx\n\nservice php-fpm start #启动php-fpm\n\nservice mysqld start #启动mysqld\n\nOpen port 80 cd /etc/sysconfig system-config-firewall\n\nOr\n\nAdd code in iptables -A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT\n\n \n\n<http://macshuo.com/?p=547>\n","slug":"Create-Site","published":1,"updated":"2020-06-14T15:57:16.317Z","comments":1,"photos":[],"link":"","_id":"ckbfpl14n005wmp84ee1chwrj","content":"<p>安装nginx rpm -ivh <a href=\"http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</a></p>\n<p>yum info nginx #查看yum的nginx信息</p>\n<p>yum install nginx #安装nginx</p>\n<p>service nginx start #启动nginx</p>\n<p>安装其他程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum check-update</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install mysql mysql-server php-fpm php-cli php-pdo php-mysql php-mcrypt php-mbstring php-gd php-tidy php-xml php-xmlrpc php-pear php-pecl-memcache php-eaccelerator</span><br></pre></td></tr></table></figure>\n<p>添加nginx 默认主页index.php</p>\n<p>vim /etc/nginx/conf.d/default.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location &#x2F; &#123;</span><br><span class=\"line\">      root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">      index  index.html index.htm index.php;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>配置nginx支持php</p>\n<p>vim /etc/nginx/conf.d/default.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">location ~ .php$ &#123;</span><br><span class=\"line\">    root           html;</span><br><span class=\"line\">    fastcgi_pass   127.0.0.1:9000;</span><br><span class=\"line\">    fastcgi_index  index.php;</span><br><span class=\"line\">    fastcgi_param  SCRIPT_FILENAME  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html$fastcgi_script_name;</span><br><span class=\"line\">    include        fastcgi_params;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置php-fpm</p>\n<p>vim /etc/php-fpm.d/<a href=\"http://www.conf\" target=\"_blank\" rel=\"noopener\">www.conf</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; Unix user&#x2F;group of processes</span><br><span class=\"line\"></span><br><span class=\"line\">; Note: The user is mandatory. If the group is not set, the default user’s group</span><br><span class=\"line\"></span><br><span class=\"line\">; will be used.</span><br><span class=\"line\"></span><br><span class=\"line\">; RPM: apache Chose to be able to access some dir as httpd</span><br><span class=\"line\"></span><br><span class=\"line\">user &#x3D; nginx</span><br><span class=\"line\"></span><br><span class=\"line\">; RPM: Keep a group allowed to write in log dir.</span><br><span class=\"line\"></span><br><span class=\"line\">group &#x3D; nginx</span><br></pre></td></tr></table></figure>\n\n<p>chkconfig php-fpm on #设置php-fpm自启动</p>\n<p>chkconfig mysqld on #设置mysqld自启动</p>\n<p>service nginx restart #重新启动nginx</p>\n<p>service php-fpm start #启动php-fpm</p>\n<p>service mysqld start #启动mysqld</p>\n<p>Open port 80 cd /etc/sysconfig system-config-firewall</p>\n<p>Or</p>\n<p>Add code in iptables -A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT</p>\n<p><a href=\"http://macshuo.com/?p=547\" target=\"_blank\" rel=\"noopener\">http://macshuo.com/?p=547</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装nginx rpm -ivh <a href=\"http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</a></p>\n<p>yum info nginx #查看yum的nginx信息</p>\n<p>yum install nginx #安装nginx</p>\n<p>service nginx start #启动nginx</p>\n<p>安装其他程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum check-update</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install mysql mysql-server php-fpm php-cli php-pdo php-mysql php-mcrypt php-mbstring php-gd php-tidy php-xml php-xmlrpc php-pear php-pecl-memcache php-eaccelerator</span><br></pre></td></tr></table></figure>\n<p>添加nginx 默认主页index.php</p>\n<p>vim /etc/nginx/conf.d/default.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location &#x2F; &#123;</span><br><span class=\"line\">      root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class=\"line\">      index  index.html index.htm index.php;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>配置nginx支持php</p>\n<p>vim /etc/nginx/conf.d/default.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">location ~ .php$ &#123;</span><br><span class=\"line\">    root           html;</span><br><span class=\"line\">    fastcgi_pass   127.0.0.1:9000;</span><br><span class=\"line\">    fastcgi_index  index.php;</span><br><span class=\"line\">    fastcgi_param  SCRIPT_FILENAME  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html$fastcgi_script_name;</span><br><span class=\"line\">    include        fastcgi_params;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置php-fpm</p>\n<p>vim /etc/php-fpm.d/<a href=\"http://www.conf\" target=\"_blank\" rel=\"noopener\">www.conf</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; Unix user&#x2F;group of processes</span><br><span class=\"line\"></span><br><span class=\"line\">; Note: The user is mandatory. If the group is not set, the default user’s group</span><br><span class=\"line\"></span><br><span class=\"line\">; will be used.</span><br><span class=\"line\"></span><br><span class=\"line\">; RPM: apache Chose to be able to access some dir as httpd</span><br><span class=\"line\"></span><br><span class=\"line\">user &#x3D; nginx</span><br><span class=\"line\"></span><br><span class=\"line\">; RPM: Keep a group allowed to write in log dir.</span><br><span class=\"line\"></span><br><span class=\"line\">group &#x3D; nginx</span><br></pre></td></tr></table></figure>\n\n<p>chkconfig php-fpm on #设置php-fpm自启动</p>\n<p>chkconfig mysqld on #设置mysqld自启动</p>\n<p>service nginx restart #重新启动nginx</p>\n<p>service php-fpm start #启动php-fpm</p>\n<p>service mysqld start #启动mysqld</p>\n<p>Open port 80 cd /etc/sysconfig system-config-firewall</p>\n<p>Or</p>\n<p>Add code in iptables -A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT</p>\n<p><a href=\"http://macshuo.com/?p=547\" target=\"_blank\" rel=\"noopener\">http://macshuo.com/?p=547</a></p>\n"},{"layout":"post","title":"Pair RDD","date":"2020-06-15T00:10:46.000Z","description":"Pair RDD基本操作","_content":"\n### 转化操作\n**{% raw %}示例数据{{1,2},{3,4},{3,6}}{% endraw %}**\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|reduceByKey(func)|合并具有相同键的值|rdd.reduceByKey((x,y)=>x+y)|{% raw %}{{1,2},{3,10}}{% endraw %}|\n|groupByKey()|对具有相同键的值进行分组|rdd.groupByKey()|{(1,[2]),(3,[4,6])}|\n|combineByKey(createCombiner,mergeValue,mergeCombiners,partitioner)|使用不同的返回类型合并具有相同键的值|\n|mapValues(func)|对pairRDD中的每个值应用一个函数而不改变键|rdd.mapValues(x=>x+1)|{(1,3),(3,5),(3,7)}|\n|flatMapValues(func)|对pairRDD中的每个值应用一个返回迭代器的函数，然后对返回的每个元素都生成一个对应原键的键值对记录。通常用于符号化|rdd.flatMapValues(x=>(xto5))|{(1,2),(1,3),(1,4),(1,5),(3,4),(3,5)}|\n|keys()|返回一个仅包含键的RDD|rdd.keys(){1,3,3}|\n|values()|返回一个仅包含值的RDD|rdd.values(){2,4,6}|\n|sortByKey()|返回一个根据键排序的RDD|rdd.sortByKey()|{(1,2),(3,4),(3,6)}|\n\n**{% raw %}针对两个pairRDD的转化操作（rdd={(1,2),(3,4),(3,6)}other={(3,9)}）{% endraw %}**\n\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|subtractByKey|删掉RDD中键与otherRDD中的键相同的元素|rdd.subtractByKey(other)|{(1,2)}|\n|join|对两个RDD进行内连接|rdd.join(other)|{(3,(4,9)),(3,(6,9))}|\n|rightOuterJoin|对两个RDD进行连接操作，确保第一个RDD的键必须存在（右外连接）|rdd.rightOuterJoin(other){(3,(Some(4),9)),(3,(Some(6),9))}|\n|leftOuterJoin|对两个RDD进行连接操作，确保第二个RDD的键必须存在（左外连接）|rdd.leftOuterJoin(other){(1,(2,None)),(3,(4,Some(9))),(3,(6,Some(9)))}|\n|cogroup|将两个RDD中拥有相同键的数据分组到一起|rdd.cogroup(other)|{(1,([2],[])),(3,([4,6],[9]))}|\n\n## 行为操作\n\n**{% raw %}示例数据{(1,2),(3,4),(3,6)}{% endraw %}**\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|countByKey()|对每个键对应的元素分别计数|rdd.countByKey()|{(1,1),(3,2)}|\n|collectAsMap()|将结果以映射表的形式返回，以便查询|rdd.collectAsMap()|Map{(1,2),(3,4),(3,6)}|\n|lookup(key)|返回给定键对应的所有值|rdd.lookup(3)|[4,6]|","source":"_posts/Pair-RDD.md","raw":"---\nlayout: post\ntitle: Pair RDD\ndate: 2020-06-15 08:10:46\ndescription: Pair RDD基本操作\ncategories: Spark\ntags: spark\n---\n\n### 转化操作\n**{% raw %}示例数据{{1,2},{3,4},{3,6}}{% endraw %}**\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|reduceByKey(func)|合并具有相同键的值|rdd.reduceByKey((x,y)=>x+y)|{% raw %}{{1,2},{3,10}}{% endraw %}|\n|groupByKey()|对具有相同键的值进行分组|rdd.groupByKey()|{(1,[2]),(3,[4,6])}|\n|combineByKey(createCombiner,mergeValue,mergeCombiners,partitioner)|使用不同的返回类型合并具有相同键的值|\n|mapValues(func)|对pairRDD中的每个值应用一个函数而不改变键|rdd.mapValues(x=>x+1)|{(1,3),(3,5),(3,7)}|\n|flatMapValues(func)|对pairRDD中的每个值应用一个返回迭代器的函数，然后对返回的每个元素都生成一个对应原键的键值对记录。通常用于符号化|rdd.flatMapValues(x=>(xto5))|{(1,2),(1,3),(1,4),(1,5),(3,4),(3,5)}|\n|keys()|返回一个仅包含键的RDD|rdd.keys(){1,3,3}|\n|values()|返回一个仅包含值的RDD|rdd.values(){2,4,6}|\n|sortByKey()|返回一个根据键排序的RDD|rdd.sortByKey()|{(1,2),(3,4),(3,6)}|\n\n**{% raw %}针对两个pairRDD的转化操作（rdd={(1,2),(3,4),(3,6)}other={(3,9)}）{% endraw %}**\n\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|subtractByKey|删掉RDD中键与otherRDD中的键相同的元素|rdd.subtractByKey(other)|{(1,2)}|\n|join|对两个RDD进行内连接|rdd.join(other)|{(3,(4,9)),(3,(6,9))}|\n|rightOuterJoin|对两个RDD进行连接操作，确保第一个RDD的键必须存在（右外连接）|rdd.rightOuterJoin(other){(3,(Some(4),9)),(3,(Some(6),9))}|\n|leftOuterJoin|对两个RDD进行连接操作，确保第二个RDD的键必须存在（左外连接）|rdd.leftOuterJoin(other){(1,(2,None)),(3,(4,Some(9))),(3,(6,Some(9)))}|\n|cogroup|将两个RDD中拥有相同键的数据分组到一起|rdd.cogroup(other)|{(1,([2],[])),(3,([4,6],[9]))}|\n\n## 行为操作\n\n**{% raw %}示例数据{(1,2),(3,4),(3,6)}{% endraw %}**\n\n|函数名|目的|示例|结果|\n|---|---|---|---|\n|countByKey()|对每个键对应的元素分别计数|rdd.countByKey()|{(1,1),(3,2)}|\n|collectAsMap()|将结果以映射表的形式返回，以便查询|rdd.collectAsMap()|Map{(1,2),(3,4),(3,6)}|\n|lookup(key)|返回给定键对应的所有值|rdd.lookup(3)|[4,6]|","slug":"Pair-RDD","published":1,"updated":"2020-06-15T00:21:55.627Z","_id":"ckbfqvfqg0000ws84hjz2gzuz","comments":1,"photos":[],"link":"","content":"<h3 id=\"转化操作\"><a href=\"#转化操作\" class=\"headerlink\" title=\"转化操作\"></a>转化操作</h3><p><strong>示例数据{{1,2},{3,4},{3,6}}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>reduceByKey(func)</td>\n<td>合并具有相同键的值</td>\n<td>rdd.reduceByKey((x,y)=&gt;x+y)</td>\n<td>{{1,2},{3,10}}</td>\n</tr>\n<tr>\n<td>groupByKey()</td>\n<td>对具有相同键的值进行分组</td>\n<td>rdd.groupByKey()</td>\n<td>{(1,[2]),(3,[4,6])}</td>\n</tr>\n<tr>\n<td>combineByKey(createCombiner,mergeValue,mergeCombiners,partitioner)</td>\n<td>使用不同的返回类型合并具有相同键的值</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mapValues(func)</td>\n<td>对pairRDD中的每个值应用一个函数而不改变键</td>\n<td>rdd.mapValues(x=&gt;x+1)</td>\n<td>{(1,3),(3,5),(3,7)}</td>\n</tr>\n<tr>\n<td>flatMapValues(func)</td>\n<td>对pairRDD中的每个值应用一个返回迭代器的函数，然后对返回的每个元素都生成一个对应原键的键值对记录。通常用于符号化</td>\n<td>rdd.flatMapValues(x=&gt;(xto5))</td>\n<td>{(1,2),(1,3),(1,4),(1,5),(3,4),(3,5)}</td>\n</tr>\n<tr>\n<td>keys()</td>\n<td>返回一个仅包含键的RDD</td>\n<td>rdd.keys(){1,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>values()</td>\n<td>返回一个仅包含值的RDD</td>\n<td>rdd.values(){2,4,6}</td>\n<td></td>\n</tr>\n<tr>\n<td>sortByKey()</td>\n<td>返回一个根据键排序的RDD</td>\n<td>rdd.sortByKey()</td>\n<td>{(1,2),(3,4),(3,6)}</td>\n</tr>\n</tbody></table>\n<p><strong>针对两个pairRDD的转化操作（rdd={(1,2),(3,4),(3,6)}other={(3,9)}）</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>subtractByKey</td>\n<td>删掉RDD中键与otherRDD中的键相同的元素</td>\n<td>rdd.subtractByKey(other)</td>\n<td>{(1,2)}</td>\n</tr>\n<tr>\n<td>join</td>\n<td>对两个RDD进行内连接</td>\n<td>rdd.join(other)</td>\n<td>{(3,(4,9)),(3,(6,9))}</td>\n</tr>\n<tr>\n<td>rightOuterJoin</td>\n<td>对两个RDD进行连接操作，确保第一个RDD的键必须存在（右外连接）</td>\n<td>rdd.rightOuterJoin(other){(3,(Some(4),9)),(3,(Some(6),9))}</td>\n<td></td>\n</tr>\n<tr>\n<td>leftOuterJoin</td>\n<td>对两个RDD进行连接操作，确保第二个RDD的键必须存在（左外连接）</td>\n<td>rdd.leftOuterJoin(other){(1,(2,None)),(3,(4,Some(9))),(3,(6,Some(9)))}</td>\n<td></td>\n</tr>\n<tr>\n<td>cogroup</td>\n<td>将两个RDD中拥有相同键的数据分组到一起</td>\n<td>rdd.cogroup(other)</td>\n<td>{(1,([2],[])),(3,([4,6],[9]))}</td>\n</tr>\n</tbody></table>\n<h2 id=\"行为操作\"><a href=\"#行为操作\" class=\"headerlink\" title=\"行为操作\"></a>行为操作</h2><p><strong>示例数据{(1,2),(3,4),(3,6)}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>countByKey()</td>\n<td>对每个键对应的元素分别计数</td>\n<td>rdd.countByKey()</td>\n<td>{(1,1),(3,2)}</td>\n</tr>\n<tr>\n<td>collectAsMap()</td>\n<td>将结果以映射表的形式返回，以便查询</td>\n<td>rdd.collectAsMap()</td>\n<td>Map{(1,2),(3,4),(3,6)}</td>\n</tr>\n<tr>\n<td>lookup(key)</td>\n<td>返回给定键对应的所有值</td>\n<td>rdd.lookup(3)</td>\n<td>[4,6]</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"转化操作\"><a href=\"#转化操作\" class=\"headerlink\" title=\"转化操作\"></a>转化操作</h3><p><strong>示例数据{{1,2},{3,4},{3,6}}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>reduceByKey(func)</td>\n<td>合并具有相同键的值</td>\n<td>rdd.reduceByKey((x,y)=&gt;x+y)</td>\n<td>{{1,2},{3,10}}</td>\n</tr>\n<tr>\n<td>groupByKey()</td>\n<td>对具有相同键的值进行分组</td>\n<td>rdd.groupByKey()</td>\n<td>{(1,[2]),(3,[4,6])}</td>\n</tr>\n<tr>\n<td>combineByKey(createCombiner,mergeValue,mergeCombiners,partitioner)</td>\n<td>使用不同的返回类型合并具有相同键的值</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>mapValues(func)</td>\n<td>对pairRDD中的每个值应用一个函数而不改变键</td>\n<td>rdd.mapValues(x=&gt;x+1)</td>\n<td>{(1,3),(3,5),(3,7)}</td>\n</tr>\n<tr>\n<td>flatMapValues(func)</td>\n<td>对pairRDD中的每个值应用一个返回迭代器的函数，然后对返回的每个元素都生成一个对应原键的键值对记录。通常用于符号化</td>\n<td>rdd.flatMapValues(x=&gt;(xto5))</td>\n<td>{(1,2),(1,3),(1,4),(1,5),(3,4),(3,5)}</td>\n</tr>\n<tr>\n<td>keys()</td>\n<td>返回一个仅包含键的RDD</td>\n<td>rdd.keys(){1,3,3}</td>\n<td></td>\n</tr>\n<tr>\n<td>values()</td>\n<td>返回一个仅包含值的RDD</td>\n<td>rdd.values(){2,4,6}</td>\n<td></td>\n</tr>\n<tr>\n<td>sortByKey()</td>\n<td>返回一个根据键排序的RDD</td>\n<td>rdd.sortByKey()</td>\n<td>{(1,2),(3,4),(3,6)}</td>\n</tr>\n</tbody></table>\n<p><strong>针对两个pairRDD的转化操作（rdd={(1,2),(3,4),(3,6)}other={(3,9)}）</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>subtractByKey</td>\n<td>删掉RDD中键与otherRDD中的键相同的元素</td>\n<td>rdd.subtractByKey(other)</td>\n<td>{(1,2)}</td>\n</tr>\n<tr>\n<td>join</td>\n<td>对两个RDD进行内连接</td>\n<td>rdd.join(other)</td>\n<td>{(3,(4,9)),(3,(6,9))}</td>\n</tr>\n<tr>\n<td>rightOuterJoin</td>\n<td>对两个RDD进行连接操作，确保第一个RDD的键必须存在（右外连接）</td>\n<td>rdd.rightOuterJoin(other){(3,(Some(4),9)),(3,(Some(6),9))}</td>\n<td></td>\n</tr>\n<tr>\n<td>leftOuterJoin</td>\n<td>对两个RDD进行连接操作，确保第二个RDD的键必须存在（左外连接）</td>\n<td>rdd.leftOuterJoin(other){(1,(2,None)),(3,(4,Some(9))),(3,(6,Some(9)))}</td>\n<td></td>\n</tr>\n<tr>\n<td>cogroup</td>\n<td>将两个RDD中拥有相同键的数据分组到一起</td>\n<td>rdd.cogroup(other)</td>\n<td>{(1,([2],[])),(3,([4,6],[9]))}</td>\n</tr>\n</tbody></table>\n<h2 id=\"行为操作\"><a href=\"#行为操作\" class=\"headerlink\" title=\"行为操作\"></a>行为操作</h2><p><strong>示例数据{(1,2),(3,4),(3,6)}</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>目的</th>\n<th>示例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>countByKey()</td>\n<td>对每个键对应的元素分别计数</td>\n<td>rdd.countByKey()</td>\n<td>{(1,1),(3,2)}</td>\n</tr>\n<tr>\n<td>collectAsMap()</td>\n<td>将结果以映射表的形式返回，以便查询</td>\n<td>rdd.collectAsMap()</td>\n<td>Map{(1,2),(3,4),(3,6)}</td>\n</tr>\n<tr>\n<td>lookup(key)</td>\n<td>返回给定键对应的所有值</td>\n<td>rdd.lookup(3)</td>\n<td>[4,6]</td>\n</tr>\n</tbody></table>\n"},{"title":"big_data_work","date":"2021-02-15T00:43:14.000Z","_content":"\n","source":"_drafts/big-data-work.md","raw":"---\ntitle: big_data_work\ndate: 2021-02-15 08:43:14\ntags: bigdata\n---\n\n","slug":"big-data-work","published":0,"updated":"2021-03-23T15:29:28.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmm6e0gy0000gw8417mi05oa","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Algorithm Service Architecture 1","date":"2021-03-17T16:15:09.000Z","description":"算法服务架构演变","_content":"\n## 初始架构\n\n### 架构图\n![algo_arch_1](images/algo_arch_1.jpg)","source":"_drafts/algorithm-service-architecture-1.md","raw":"---\ntitle: Algorithm Service Architecture 1\ndate: 2021-03-18 00:15:09\ndescription: \"算法服务架构演变\"\ncategories: architecture\ntags: architecture\n---\n\n## 初始架构\n\n### 架构图\n![algo_arch_1](images/algo_arch_1.jpg)","slug":"algorithm-service-architecture-1","published":0,"updated":"2021-03-23T15:40:34.751Z","_id":"ckmm6e0h30001gw8411rkch7a","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"初始架构\"><a href=\"#初始架构\" class=\"headerlink\" title=\"初始架构\"></a>初始架构</h2><h3 id=\"架构图\"><a href=\"#架构图\" class=\"headerlink\" title=\"架构图\"></a>架构图</h3><p><img src=\"images/algo_arch_1.jpg\" alt=\"algo_arch_1\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"初始架构\"><a href=\"#初始架构\" class=\"headerlink\" title=\"初始架构\"></a>初始架构</h2><h3 id=\"架构图\"><a href=\"#架构图\" class=\"headerlink\" title=\"架构图\"></a>架构图</h3><p><img src=\"images/algo_arch_1.jpg\" alt=\"algo_arch_1\"></p>\n"},{"title":"Algorithm Service Architecture","date":"2021-02-14T00:40:09.000Z","description":"算法服务架构演变","_content":"\n此系列主要记录算法服务在技术上的更新以及架构演变与其中遇到的问题：\n\n### 1. 初始架构\n\n项目最初功能较为简单，只是由几个模块组合，基于python2，计算框架为caffe和tensorflow。由于各个模块依赖的caffe版本不同，无法同时运行在同一个环境中，所以每个模块单独运行在一个docker中。\n[正文](/2020/06/15/algorithm-service-architecture-1/)\n\n### 2. 第一次升级\n\n由于caffe和python2的版本停止更新，担心之后会遇到瓶颈。所以将所有程序从python2迁移到python3，并将caffe替换为tensorflow。\n\n### 3. 第二次升级\n\n随着业务的增长，原有架构无法满足。所以我们进行了一次大的升级。我们将公用部分提出，并形成了Core。工程上分为了两类：1、需要将多模块结果进行整合的产品，2、单独的产品。\n之后兵哥来了，将ES中的数据接入Grafana，形成了监控大盘\n\n### 4. 日志收集\n\n机器多，查问题比较困难，搭建了一个简易的ELK平台，logstash收集nginx日志，打到一个单节点ES，在通过Kibana进行查询，查看各个机器流量，服务处理时长以及处理状态\n\n### 5. 第三次升级\n\n业务增长，服务实例增多。前端业务的SLB将请求直接打到算法服务的机器上(直接打到IP上)，但是算法端无法随意调整服务。为此建立的三台Tengine，将所有的SLB接到这三台机器上，并有这三台机器进行均载。\n\n### 6. 日志工具升级\n\nES由单节点变为3个节点的集群，并加入IDC，办公室网络进作为Logstash三节点转发，所有节点的Logstash配置好容灾本地存储，防止数据丢失。建立Grafana大盘，方便所有人了解服务情况\n\n### 7. 第四次升级\n\n业务膨胀，算法模块内部调用越来越多，越来越复杂。算法服务器多撘25台。无法在进行手工或者脚本。此时引入kubernete\n\n### 8.日志工具再次升级，打造全链路日志\n\n引入fluntd所有日志的收集，所有日志通过fluntd打到日志服务器上，以文件的形式存储。再通logstash打到IDC内部","source":"_drafts/algorithm-service-architecture.md","raw":"---\ntitle: Algorithm Service Architecture\ndate: 2021-02-14 08:40:09\ndescription: \"算法服务架构演变\"\ncategories: architecture\ntags: architecture\n---\n\n此系列主要记录算法服务在技术上的更新以及架构演变与其中遇到的问题：\n\n### 1. 初始架构\n\n项目最初功能较为简单，只是由几个模块组合，基于python2，计算框架为caffe和tensorflow。由于各个模块依赖的caffe版本不同，无法同时运行在同一个环境中，所以每个模块单独运行在一个docker中。\n[正文](/2020/06/15/algorithm-service-architecture-1/)\n\n### 2. 第一次升级\n\n由于caffe和python2的版本停止更新，担心之后会遇到瓶颈。所以将所有程序从python2迁移到python3，并将caffe替换为tensorflow。\n\n### 3. 第二次升级\n\n随着业务的增长，原有架构无法满足。所以我们进行了一次大的升级。我们将公用部分提出，并形成了Core。工程上分为了两类：1、需要将多模块结果进行整合的产品，2、单独的产品。\n之后兵哥来了，将ES中的数据接入Grafana，形成了监控大盘\n\n### 4. 日志收集\n\n机器多，查问题比较困难，搭建了一个简易的ELK平台，logstash收集nginx日志，打到一个单节点ES，在通过Kibana进行查询，查看各个机器流量，服务处理时长以及处理状态\n\n### 5. 第三次升级\n\n业务增长，服务实例增多。前端业务的SLB将请求直接打到算法服务的机器上(直接打到IP上)，但是算法端无法随意调整服务。为此建立的三台Tengine，将所有的SLB接到这三台机器上，并有这三台机器进行均载。\n\n### 6. 日志工具升级\n\nES由单节点变为3个节点的集群，并加入IDC，办公室网络进作为Logstash三节点转发，所有节点的Logstash配置好容灾本地存储，防止数据丢失。建立Grafana大盘，方便所有人了解服务情况\n\n### 7. 第四次升级\n\n业务膨胀，算法模块内部调用越来越多，越来越复杂。算法服务器多撘25台。无法在进行手工或者脚本。此时引入kubernete\n\n### 8.日志工具再次升级，打造全链路日志\n\n引入fluntd所有日志的收集，所有日志通过fluntd打到日志服务器上，以文件的形式存储。再通logstash打到IDC内部","slug":"algorithm-service-architecture","published":0,"updated":"2021-03-23T15:29:28.949Z","_id":"ckmm6e0hk0003gw8480el0l1o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>此系列主要记录算法服务在技术上的更新以及架构演变与其中遇到的问题：</p>\n<h3 id=\"1-初始架构\"><a href=\"#1-初始架构\" class=\"headerlink\" title=\"1. 初始架构\"></a>1. 初始架构</h3><p>项目最初功能较为简单，只是由几个模块组合，基于python2，计算框架为caffe和tensorflow。由于各个模块依赖的caffe版本不同，无法同时运行在同一个环境中，所以每个模块单独运行在一个docker中。<br><a href=\"/2020/06/15/algorithm-service-architecture-1/\">正文</a></p>\n<h3 id=\"2-第一次升级\"><a href=\"#2-第一次升级\" class=\"headerlink\" title=\"2. 第一次升级\"></a>2. 第一次升级</h3><p>由于caffe和python2的版本停止更新，担心之后会遇到瓶颈。所以将所有程序从python2迁移到python3，并将caffe替换为tensorflow。</p>\n<h3 id=\"3-第二次升级\"><a href=\"#3-第二次升级\" class=\"headerlink\" title=\"3. 第二次升级\"></a>3. 第二次升级</h3><p>随着业务的增长，原有架构无法满足。所以我们进行了一次大的升级。我们将公用部分提出，并形成了Core。工程上分为了两类：1、需要将多模块结果进行整合的产品，2、单独的产品。<br>之后兵哥来了，将ES中的数据接入Grafana，形成了监控大盘</p>\n<h3 id=\"4-日志收集\"><a href=\"#4-日志收集\" class=\"headerlink\" title=\"4. 日志收集\"></a>4. 日志收集</h3><p>机器多，查问题比较困难，搭建了一个简易的ELK平台，logstash收集nginx日志，打到一个单节点ES，在通过Kibana进行查询，查看各个机器流量，服务处理时长以及处理状态</p>\n<h3 id=\"5-第三次升级\"><a href=\"#5-第三次升级\" class=\"headerlink\" title=\"5. 第三次升级\"></a>5. 第三次升级</h3><p>业务增长，服务实例增多。前端业务的SLB将请求直接打到算法服务的机器上(直接打到IP上)，但是算法端无法随意调整服务。为此建立的三台Tengine，将所有的SLB接到这三台机器上，并有这三台机器进行均载。</p>\n<h3 id=\"6-日志工具升级\"><a href=\"#6-日志工具升级\" class=\"headerlink\" title=\"6. 日志工具升级\"></a>6. 日志工具升级</h3><p>ES由单节点变为3个节点的集群，并加入IDC，办公室网络进作为Logstash三节点转发，所有节点的Logstash配置好容灾本地存储，防止数据丢失。建立Grafana大盘，方便所有人了解服务情况</p>\n<h3 id=\"7-第四次升级\"><a href=\"#7-第四次升级\" class=\"headerlink\" title=\"7. 第四次升级\"></a>7. 第四次升级</h3><p>业务膨胀，算法模块内部调用越来越多，越来越复杂。算法服务器多撘25台。无法在进行手工或者脚本。此时引入kubernete</p>\n<h3 id=\"8-日志工具再次升级，打造全链路日志\"><a href=\"#8-日志工具再次升级，打造全链路日志\" class=\"headerlink\" title=\"8.日志工具再次升级，打造全链路日志\"></a>8.日志工具再次升级，打造全链路日志</h3><p>引入fluntd所有日志的收集，所有日志通过fluntd打到日志服务器上，以文件的形式存储。再通logstash打到IDC内部</p>\n","site":{"data":{}},"excerpt":"","more":"<p>此系列主要记录算法服务在技术上的更新以及架构演变与其中遇到的问题：</p>\n<h3 id=\"1-初始架构\"><a href=\"#1-初始架构\" class=\"headerlink\" title=\"1. 初始架构\"></a>1. 初始架构</h3><p>项目最初功能较为简单，只是由几个模块组合，基于python2，计算框架为caffe和tensorflow。由于各个模块依赖的caffe版本不同，无法同时运行在同一个环境中，所以每个模块单独运行在一个docker中。<br><a href=\"/2020/06/15/algorithm-service-architecture-1/\">正文</a></p>\n<h3 id=\"2-第一次升级\"><a href=\"#2-第一次升级\" class=\"headerlink\" title=\"2. 第一次升级\"></a>2. 第一次升级</h3><p>由于caffe和python2的版本停止更新，担心之后会遇到瓶颈。所以将所有程序从python2迁移到python3，并将caffe替换为tensorflow。</p>\n<h3 id=\"3-第二次升级\"><a href=\"#3-第二次升级\" class=\"headerlink\" title=\"3. 第二次升级\"></a>3. 第二次升级</h3><p>随着业务的增长，原有架构无法满足。所以我们进行了一次大的升级。我们将公用部分提出，并形成了Core。工程上分为了两类：1、需要将多模块结果进行整合的产品，2、单独的产品。<br>之后兵哥来了，将ES中的数据接入Grafana，形成了监控大盘</p>\n<h3 id=\"4-日志收集\"><a href=\"#4-日志收集\" class=\"headerlink\" title=\"4. 日志收集\"></a>4. 日志收集</h3><p>机器多，查问题比较困难，搭建了一个简易的ELK平台，logstash收集nginx日志，打到一个单节点ES，在通过Kibana进行查询，查看各个机器流量，服务处理时长以及处理状态</p>\n<h3 id=\"5-第三次升级\"><a href=\"#5-第三次升级\" class=\"headerlink\" title=\"5. 第三次升级\"></a>5. 第三次升级</h3><p>业务增长，服务实例增多。前端业务的SLB将请求直接打到算法服务的机器上(直接打到IP上)，但是算法端无法随意调整服务。为此建立的三台Tengine，将所有的SLB接到这三台机器上，并有这三台机器进行均载。</p>\n<h3 id=\"6-日志工具升级\"><a href=\"#6-日志工具升级\" class=\"headerlink\" title=\"6. 日志工具升级\"></a>6. 日志工具升级</h3><p>ES由单节点变为3个节点的集群，并加入IDC，办公室网络进作为Logstash三节点转发，所有节点的Logstash配置好容灾本地存储，防止数据丢失。建立Grafana大盘，方便所有人了解服务情况</p>\n<h3 id=\"7-第四次升级\"><a href=\"#7-第四次升级\" class=\"headerlink\" title=\"7. 第四次升级\"></a>7. 第四次升级</h3><p>业务膨胀，算法模块内部调用越来越多，越来越复杂。算法服务器多撘25台。无法在进行手工或者脚本。此时引入kubernete</p>\n<h3 id=\"8-日志工具再次升级，打造全链路日志\"><a href=\"#8-日志工具再次升级，打造全链路日志\" class=\"headerlink\" title=\"8.日志工具再次升级，打造全链路日志\"></a>8.日志工具再次升级，打造全链路日志</h3><p>引入fluntd所有日志的收集，所有日志通过fluntd打到日志服务器上，以文件的形式存储。再通logstash打到IDC内部</p>\n"},{"title":"maintenance_work","date":"2021-02-16T00:42:46.000Z","_content":"","source":"_drafts/maintenance-work.md","raw":"---\ntitle: maintenance_work\ndate: 2021-02-16 08:42:46\ntags: \n---\n","slug":"maintenance-work","published":0,"updated":"2021-03-23T15:29:28.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmm6e0hn0005gw8474wv7zpf","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"ckbfpl1070007mp841o7x8ppw","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl10b000dmp841a6nbkl8"},{"post_id":"ckbfpl0zt0001mp84gizkf6ch","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl10c000gmp84hvnc922o"},{"post_id":"ckbfpl1090008mp84ey2z1fbx","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl10c000imp84bycyb59o"},{"post_id":"ckbfpl0zw0003mp847vds55iz","category_id":"ckbfpl1090009mp843fs1dwsu","_id":"ckbfpl10d000kmp8494476x0f"},{"post_id":"ckbfpl1060006mp843yer8xbv","category_id":"ckbfpl10b000emp84173q1ccw","_id":"ckbfpl10e000mmp8417316efp"},{"post_id":"ckbfpl11k000pmp845wxv4553","category_id":"ckbfpl11n000tmp84hn6z14v7","_id":"ckbfpl11u0013mp842itz5e1s"},{"post_id":"ckbfpl11m000rmp84ewndbx0v","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl11w0019mp8416mxhvyl"},{"post_id":"ckbfpl11v0016mp84daow7eh8","category_id":"ckbfpl11u0014mp84e8w9b0dv","_id":"ckbfpl11z001gmp84bdkz6j3e"},{"post_id":"ckbfpl11o000vmp8476if6y45","category_id":"ckbfpl11u0014mp84e8w9b0dv","_id":"ckbfpl120001lmp84ghov2wlb"},{"post_id":"ckbfpl11w0018mp84103kbrae","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl123001omp847i587ekv"},{"post_id":"ckbfpl11x001dmp844ec406zx","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl124001smp847m9u5xef"},{"post_id":"ckbfpl120001kmp841avs55wq","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl126001vmp84d9qfd1t6"},{"post_id":"ckbfpl11q000xmp84c2ece29y","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl127001zmp8482k9euan"},{"post_id":"ckbfpl127001ymp846rps35qt","category_id":"ckbfpl10b000emp84173q1ccw","_id":"ckbfpl12c0028mp84bn3s3406"},{"post_id":"ckbfpl11y001fmp845i9kh8uf","category_id":"ckbfpl1290023mp845xc84984","_id":"ckbfpl12g002gmp84axu9becc"},{"post_id":"ckbfpl12c0029mp84dy6xc1xz","category_id":"ckbfpl11n000tmp84hn6z14v7","_id":"ckbfpl12h002lmp84gaz377vt"},{"post_id":"ckbfpl12e002dmp84360l1bbv","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl12j002omp844j1ab9gi"},{"post_id":"ckbfpl11p000wmp8454nwajrf","category_id":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl12l002tmp8413jrcaol"},{"post_id":"ckbfpl11p000wmp8454nwajrf","category_id":"ckbfpl12d002amp84dxmx9eyz","_id":"ckbfpl12p002wmp84dljt5szi"},{"post_id":"ckbfpl12f002fmp8432pn9ejc","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl12s0031mp84gqp72k2b"},{"post_id":"ckbfpl12h002kmp849mt311ge","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl12z0034mp846v6v5xmj"},{"post_id":"ckbfpl122001nmp8493zu2h4k","category_id":"ckbfpl12g002hmp8463r410j4","_id":"ckbfpl1360039mp84du8o4y5r"},{"post_id":"ckbfpl12i002nmp841bjn6xhf","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl138003cmp844yib5cxf"},{"post_id":"ckbfpl12l002smp84gnlihief","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl13a003hmp846uuuefne"},{"post_id":"ckbfpl124001rmp84gg3p1sgd","category_id":"ckbfpl12g002hmp8463r410j4","_id":"ckbfpl13d003kmp843ipa6ywi"},{"post_id":"ckbfpl12m002vmp847goqdm7g","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl13f003pmp843wnf6hv6"},{"post_id":"ckbfpl12s0030mp84bxhreg7t","category_id":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl13h003smp844j8c6tvi"},{"post_id":"ckbfpl125001ump8469rjas7j","category_id":"ckbfpl12g002hmp8463r410j4","_id":"ckbfpl13k003wmp84hs9e15ng"},{"post_id":"ckbfpl12v0033mp84huoc0sl0","category_id":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl13o0040mp846gq59nnj"},{"post_id":"ckbfpl1310038mp844t3q4nx6","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl13p0044mp849o6w5p7r"},{"post_id":"ckbfpl11s0011mp84hw5udnfs","category_id":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl13s0048mp846bafanxe"},{"post_id":"ckbfpl11s0011mp84hw5udnfs","category_id":"ckbfpl12d002amp84dxmx9eyz","_id":"ckbfpl13u004cmp840hmr5aaa"},{"post_id":"ckbfpl137003bmp8483e00jnc","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl13v004gmp84e0nxe0vs"},{"post_id":"ckbfpl139003gmp84cxpc8qdc","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl13z004jmp84d7377lco"},{"post_id":"ckbfpl1280021mp8498dw6i8c","category_id":"ckbfpl12g002hmp8463r410j4","_id":"ckbfpl141004omp843k993124"},{"post_id":"ckbfpl13c003jmp84aefcaj4m","category_id":"ckbfpl11u0014mp84e8w9b0dv","_id":"ckbfpl142004qmp849jr3dlhq"},{"post_id":"ckbfpl13e003omp842g2l8kjl","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl143004ump84ewnfg7nx"},{"post_id":"ckbfpl11t0012mp84a9gq2bqd","category_id":"ckbfpl11x001amp849w2x5cwp","_id":"ckbfpl143004wmp84a8tj9ufu"},{"post_id":"ckbfpl11t0012mp84a9gq2bqd","category_id":"ckbfpl12d002amp84dxmx9eyz","_id":"ckbfpl144004zmp8450ox1yy0"},{"post_id":"ckbfpl13g003rmp8408dschxr","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl1450052mp84ecg4ctyv"},{"post_id":"ckbfpl13j003vmp84ee9c66k8","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl1450054mp843ltwa5nz"},{"post_id":"ckbfpl12a0025mp849jpc9rhf","category_id":"ckbfpl13i003tmp84cpg5778x","_id":"ckbfpl1460057mp8482vpd6e4"},{"post_id":"ckbfpl12b0027mp8486dl3czz","category_id":"ckbfpl13o0041mp84dytianvx","_id":"ckbfpl1460059mp84cfqs586w"},{"post_id":"ckbfpl13v004fmp848x3o1hdm","category_id":"ckbfpl11r000ymp8488k1esax","_id":"ckbfpl146005cmp84ebsoazse"},{"post_id":"ckbfpl13n003zmp84g18sb1zv","category_id":"ckbfpl13u004bmp84h6b0g3sr","_id":"ckbfpl147005emp842lo24w6c"},{"post_id":"ckbfpl13w004imp849all7ra9","category_id":"ckbfpl10b000emp84173q1ccw","_id":"ckbfpl147005hmp84c6affcbb"},{"post_id":"ckbfpl140004nmp8484puatv0","category_id":"ckbfpl1040004mp840saz78jf","_id":"ckbfpl147005jmp84f6kkbybv"},{"post_id":"ckbfpl13o0043mp84gcqwf7z3","category_id":"ckbfpl13z004kmp849owk7je8","_id":"ckbfpl148005mmp84bhn79uw3"},{"post_id":"ckbfpl13r0047mp84e3hi66b5","category_id":"ckbfpl142004rmp846xbdemql","_id":"ckbfpl148005omp844q7ff1oq"},{"post_id":"ckbfpl13t004amp843i5e0a4c","category_id":"ckbfpl13z004kmp849owk7je8","_id":"ckbfpl148005qmp84aek40pxo"},{"post_id":"ckbfpl14n005wmp84ee1chwrj","category_id":"ckbfpl14o005xmp84d4dsdkny","_id":"ckbfpl14p0061mp84ejaifl5k"},{"post_id":"ckbfpl14n005wmp84ee1chwrj","category_id":"ckbfpl14p0060mp8448743r16","_id":"ckbfpl14p0062mp845y7n9wul"},{"post_id":"ckbfqvfqg0000ws84hjz2gzuz","category_id":"ckbfpl11u0014mp84e8w9b0dv","_id":"ckbfqvfqo0002ws84dtny33s6"},{"post_id":"ckmm6e0h30001gw8411rkch7a","category_id":"ckmm6e0hm0004gw84g4ys3z9d","_id":"ckmm6e0ik000egw8493no36qi"},{"post_id":"ckmm6e0hk0003gw8480el0l1o","category_id":"ckmm6e0hm0004gw84g4ys3z9d","_id":"ckmm6e0ik000ggw844lev3w7b"}],"PostTag":[{"post_id":"ckbfpl0zt0001mp84gizkf6ch","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl10a000bmp84av1k5e4q"},{"post_id":"ckbfpl1090008mp84ey2z1fbx","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl10b000cmp848tsw5ysi"},{"post_id":"ckbfpl0zw0003mp847vds55iz","tag_id":"ckbfpl109000amp841bdu3my4","_id":"ckbfpl10c000hmp84fj9g56b3"},{"post_id":"ckbfpl1060006mp843yer8xbv","tag_id":"ckbfpl10b000fmp846oiw82lq","_id":"ckbfpl10d000lmp84blsj62cp"},{"post_id":"ckbfpl1070007mp841o7x8ppw","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl10e000nmp84ccc8bdu8"},{"post_id":"ckbfpl1070007mp841o7x8ppw","tag_id":"ckbfpl10d000jmp8426s568sl","_id":"ckbfpl10e000omp848da6a5wv"},{"post_id":"ckbfpl11k000pmp845wxv4553","tag_id":"ckbfpl11o000ump845norag44","_id":"ckbfpl11s0010mp849j04bjp9"},{"post_id":"ckbfpl11m000rmp84ewndbx0v","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl11v0017mp841ev3ho34"},{"post_id":"ckbfpl11v0016mp84daow7eh8","tag_id":"ckbfpl11u0015mp84bhtzelrd","_id":"ckbfpl11x001cmp84fzqrer2o"},{"post_id":"ckbfpl11o000vmp8476if6y45","tag_id":"ckbfpl11u0015mp84bhtzelrd","_id":"ckbfpl11y001emp8414si4ci2"},{"post_id":"ckbfpl11x001dmp844ec406zx","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl11z001hmp84hkx10kmm"},{"post_id":"ckbfpl11p000wmp8454nwajrf","tag_id":"ckbfpl11x001bmp847kobh1ia","_id":"ckbfpl122001mmp84hi5e2y8i"},{"post_id":"ckbfpl11q000xmp84c2ece29y","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl125001tmp849kho0sa8"},{"post_id":"ckbfpl11s0011mp84hw5udnfs","tag_id":"ckbfpl11x001bmp847kobh1ia","_id":"ckbfpl1280020mp84ao7a9j91"},{"post_id":"ckbfpl127001ymp846rps35qt","tag_id":"ckbfpl10b000fmp846oiw82lq","_id":"ckbfpl1290022mp84671q7emx"},{"post_id":"ckbfpl11t0012mp84a9gq2bqd","tag_id":"ckbfpl11x001bmp847kobh1ia","_id":"ckbfpl12b0026mp8417mjffqr"},{"post_id":"ckbfpl11w0018mp84103kbrae","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl12e002cmp848rrzgjlf"},{"post_id":"ckbfpl11w0018mp84103kbrae","tag_id":"ckbfpl12a0024mp845cxs3nib","_id":"ckbfpl12f002emp84805d3set"},{"post_id":"ckbfpl12e002dmp84360l1bbv","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl12h002jmp848ze6b58t"},{"post_id":"ckbfpl12e002dmp84360l1bbv","tag_id":"ckbfpl11x001bmp847kobh1ia","_id":"ckbfpl12i002mmp845npj7zn7"},{"post_id":"ckbfpl11y001fmp845i9kh8uf","tag_id":"ckbfpl12d002bmp846hlhem75","_id":"ckbfpl12k002rmp8497iabxhn"},{"post_id":"ckbfpl12h002kmp849mt311ge","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl12m002ump84ct9n59sl"},{"post_id":"ckbfpl12h002kmp849mt311ge","tag_id":"ckbfpl12g002imp848z8oaaoh","_id":"ckbfpl12r002zmp84fk78185p"},{"post_id":"ckbfpl120001kmp841avs55wq","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl12u0032mp84gurn7ghv"},{"post_id":"ckbfpl120001kmp841avs55wq","tag_id":"ckbfpl12g002imp848z8oaaoh","_id":"ckbfpl1300037mp84deoih0j9"},{"post_id":"ckbfpl12i002nmp841bjn6xhf","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl136003amp8496mbggik"},{"post_id":"ckbfpl12i002nmp841bjn6xhf","tag_id":"ckbfpl12g002imp848z8oaaoh","_id":"ckbfpl139003fmp8479ute5si"},{"post_id":"ckbfpl122001nmp8493zu2h4k","tag_id":"ckbfpl12k002qmp84eh6b3dov","_id":"ckbfpl13c003imp84gc1bhzgg"},{"post_id":"ckbfpl12m002vmp847goqdm7g","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl13e003nmp84h4znglkh"},{"post_id":"ckbfpl124001rmp84gg3p1sgd","tag_id":"ckbfpl12k002qmp84eh6b3dov","_id":"ckbfpl13g003qmp84axo7hmy8"},{"post_id":"ckbfpl1310038mp844t3q4nx6","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl13j003ump849xjnfhvg"},{"post_id":"ckbfpl125001ump8469rjas7j","tag_id":"ckbfpl12k002qmp84eh6b3dov","_id":"ckbfpl13n003ymp84c9qc6wgh"},{"post_id":"ckbfpl137003bmp8483e00jnc","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl13o0042mp84fc5l16sa"},{"post_id":"ckbfpl139003gmp84cxpc8qdc","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl13r0046mp841qwghps0"},{"post_id":"ckbfpl1280021mp8498dw6i8c","tag_id":"ckbfpl12k002qmp84eh6b3dov","_id":"ckbfpl13t0049mp84hpak07ay"},{"post_id":"ckbfpl13c003jmp84aefcaj4m","tag_id":"ckbfpl11u0015mp84bhtzelrd","_id":"ckbfpl13v004emp84frtl2pje"},{"post_id":"ckbfpl13e003omp842g2l8kjl","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl13w004hmp8493cu0ecr"},{"post_id":"ckbfpl13g003rmp8408dschxr","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl140004mmp844vyg415y"},{"post_id":"ckbfpl12a0025mp849jpc9rhf","tag_id":"ckbfpl13e003mmp84fur2b3wb","_id":"ckbfpl142004pmp84fyy96nd7"},{"post_id":"ckbfpl13j003vmp84ee9c66k8","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl143004tmp84g9gyfw98"},{"post_id":"ckbfpl12b0027mp8486dl3czz","tag_id":"ckbfpl13k003xmp84f97w83l7","_id":"ckbfpl143004vmp84d122ceqz"},{"post_id":"ckbfpl12b0027mp8486dl3czz","tag_id":"ckbfpl13q0045mp842akoac2x","_id":"ckbfpl144004ymp84fx714gpw"},{"post_id":"ckbfpl13v004fmp848x3o1hdm","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl1450051mp84bywr9983"},{"post_id":"ckbfpl12c0029mp84dy6xc1xz","tag_id":"ckbfpl13u004dmp848cyugazd","_id":"ckbfpl1450053mp847rt370dz"},{"post_id":"ckbfpl12c0029mp84dy6xc1xz","tag_id":"ckbfpl11o000ump845norag44","_id":"ckbfpl1460056mp84atzdchfx"},{"post_id":"ckbfpl13w004imp849all7ra9","tag_id":"ckbfpl10b000fmp846oiw82lq","_id":"ckbfpl1460058mp84abd368oi"},{"post_id":"ckbfpl140004nmp8484puatv0","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl146005bmp846jom6v7s"},{"post_id":"ckbfpl12f002fmp8432pn9ejc","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl147005dmp848jj0e7hh"},{"post_id":"ckbfpl12f002fmp8432pn9ejc","tag_id":"ckbfpl12g002imp848z8oaaoh","_id":"ckbfpl147005gmp849lyt29o3"},{"post_id":"ckbfpl12l002smp84gnlihief","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl147005imp84hzcvdmk7"},{"post_id":"ckbfpl12l002smp84gnlihief","tag_id":"ckbfpl142004smp84eb8x1p64","_id":"ckbfpl148005lmp84aqs4erir"},{"post_id":"ckbfpl12s0030mp84bxhreg7t","tag_id":"ckbfpl1440050mp84dvrv9cql","_id":"ckbfpl148005nmp84f3oe5lbz"},{"post_id":"ckbfpl12v0033mp84huoc0sl0","tag_id":"ckbfpl1440050mp84dvrv9cql","_id":"ckbfpl148005pmp842hyqh2jv"},{"post_id":"ckbfpl13n003zmp84g18sb1zv","tag_id":"ckbfpl146005amp84etc66ho7","_id":"ckbfpl148005smp840q9s5xzp"},{"post_id":"ckbfpl13o0043mp84gcqwf7z3","tag_id":"ckbfpl147005fmp8453ilgce6","_id":"ckbfpl148005tmp84azk7an4a"},{"post_id":"ckbfpl13r0047mp84e3hi66b5","tag_id":"ckbfpl147005kmp84h76nd9cc","_id":"ckbfpl149005ump84fpeu6d19"},{"post_id":"ckbfpl13t004amp843i5e0a4c","tag_id":"ckbfpl147005fmp8453ilgce6","_id":"ckbfpl149005vmp84h1dkaixj"},{"post_id":"ckbfpl14n005wmp84ee1chwrj","tag_id":"ckbfpl11r000zmp843jri9k6h","_id":"ckbfpl14o005ymp84gzrk9bfg"},{"post_id":"ckbfpl14n005wmp84ee1chwrj","tag_id":"ckbfpl1050005mp84cs6s6gtg","_id":"ckbfpl14o005zmp843kahcn4a"},{"post_id":"ckbfqvfqg0000ws84hjz2gzuz","tag_id":"ckbfpl11u0015mp84bhtzelrd","_id":"ckbfqvfqn0001ws84fkqc5xgo"},{"post_id":"ckmm6e0gy0000gw8417mi05oa","tag_id":"ckmm6e0h50002gw84bqmy7few","_id":"ckmm6e0ie0008gw84bbut38un"},{"post_id":"ckmm6e0h30001gw8411rkch7a","tag_id":"ckmm6e0hq0007gw84f292fb1y","_id":"ckmm6e0ij000dgw84cyyegu2i"},{"post_id":"ckmm6e0hk0003gw8480el0l1o","tag_id":"ckmm6e0hq0007gw84f292fb1y","_id":"ckmm6e0ik000hgw8440h5cbpv"}],"Tag":[{"name":"linux","_id":"ckbfpl1050005mp84cs6s6gtg"},{"name":"mac","_id":"ckbfpl109000amp841bdu3my4"},{"name":"docker","_id":"ckbfpl10b000fmp846oiw82lq"},{"name":"swift","_id":"ckbfpl10d000jmp8426s568sl"},{"name":"java","_id":"ckbfpl11o000ump845norag44"},{"name":"php","_id":"ckbfpl11r000zmp843jri9k6h"},{"name":"spark","_id":"ckbfpl11u0015mp84bhtzelrd"},{"name":"redis","_id":"ckbfpl11x001bmp847kobh1ia"},{"name":"vim","_id":"ckbfpl12a0024mp845cxs3nib"},{"name":"test","_id":"ckbfpl12d002bmp846hlhem75"},{"name":"laravel","_id":"ckbfpl12g002imp848z8oaaoh"},{"name":"Design Pattern","_id":"ckbfpl12k002qmp84eh6b3dov"},{"name":"git","_id":"ckbfpl13e003mmp84fur2b3wb"},{"name":"nginx","_id":"ckbfpl13k003xmp84f97w83l7"},{"name":"ssl","_id":"ckbfpl13q0045mp842akoac2x"},{"name":"maven","_id":"ckbfpl13u004dmp848cyugazd"},{"name":"security","_id":"ckbfpl142004smp84eb8x1p64"},{"name":"mysql","_id":"ckbfpl1440050mp84dvrv9cql"},{"name":"vpn","_id":"ckbfpl146005amp84etc66ho7"},{"name":"vm","_id":"ckbfpl147005fmp8453ilgce6"},{"name":"javascript","_id":"ckbfpl147005kmp84h76nd9cc"},{"name":"bigdata","_id":"ckmm6e0h50002gw84bqmy7few"},{"name":"architecture","_id":"ckmm6e0hq0007gw84f292fb1y"}]}}